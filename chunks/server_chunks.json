{
  "chunks": [
    {
      "text": "Use the method to output a string to theInfoblock after the server script execution. Parameter(s): Return: Example: alert()alert('Message');// Message Use the method to output one or more string to theInfoblock after the server script execution. Parameter(s): Return: Example: echo()echo('Message');// Message Use the method to output a string containing the JSON representation of the specified value to theInfoblock under the server script after the execution. Parameter(s): Return: Example: json()json('{\"key\":\"value\"}')// \"{\\\"key\\\":\\\"value\\\"}\" Use the method to display a string in theInfoblock after the server script execution. Parameter(s): Return: Example: print()print('Message')// Message Use the method to output human-readable information about the variable in the server script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 1,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: sleep()ss.info(newSimpleDateTime().getValue());sleep(10);ss.info(newSimpleDateTime().getValue());// Info: 2022-09-28 09:46:59// Info: 2022-09-28 09:47:09 If the delay exceeds the server script execution timeout, use thess.eventQueueScheduled()event to execute the delayed part of the script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 2,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print_r()print_r({key:'value'});//V8Object Object//(//    [key] => value//) Use the method to delay the execution of a server script. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 3,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "If there are multiple text output commands used, their results are combined.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 4,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "If an array is given, the values will be presented in the key-value format.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 5,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "If a string, integer, or floating point number is given, the value itself will be printed.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 1,
        "heading": "alert(message)​",
        "chunk_index": 6,
        "source": "exportvariables_d7cdb6d38f5a/1"
      }
    },
    {
      "text": "Use the method to output one or more string to theInfoblock after the server script execution. Parameter(s): Return: Example: echo()echo('Message');// Message Use the method to output a string containing the JSON representation of the specified value to theInfoblock under the server script after the execution. Parameter(s): Return: Example: json()json('{\"key\":\"value\"}')// \"{\\\"key\\\":\\\"value\\\"}\" Use the method to display a string in theInfoblock after the server script execution. Parameter(s): Return: Example: print()print('Message')// Message Use the method to output human-readable information about the variable in the server script. Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 2,
        "heading": "echo(messages)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print_r()print_r({key:'value'});//V8Object Object//(//    [key] => value//) Use the method to delay the execution of a server script. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 2,
        "heading": "echo(messages)​",
        "chunk_index": 1,
        "source": "exportvariables_d7cdb6d38f5a/2"
      }
    },
    {
      "text": "If an array is given, the values will be presented in the key-value format.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 2,
        "heading": "echo(messages)​",
        "chunk_index": 2,
        "source": "exportvariables_d7cdb6d38f5a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: sleep()ss.info(newSimpleDateTime().getValue());sleep(10);ss.info(newSimpleDateTime().getValue());// Info: 2022-09-28 09:46:59// Info: 2022-09-28 09:47:09 If the delay exceeds the server script execution timeout, use thess.eventQueueScheduled()event to execute the delayed part of the script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 2,
        "heading": "echo(messages)​",
        "chunk_index": 3,
        "source": "exportvariables_d7cdb6d38f5a/2"
      }
    },
    {
      "text": "If a string, integer, or floating point number is given, the value itself will be printed.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 2,
        "heading": "echo(messages)​",
        "chunk_index": 4,
        "source": "exportvariables_d7cdb6d38f5a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print_r()print_r({key:'value'});//V8Object Object//(//    [key] => value//) Use the method to delay the execution of a server script. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 3,
        "heading": "json(value)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/3"
      }
    },
    {
      "text": "Use the method to output a string containing the JSON representation of the specified value to theInfoblock under the server script after the execution. Parameter(s): Return: Example: json()json('{\"key\":\"value\"}')// \"{\\\"key\\\":\\\"value\\\"}\" Use the method to display a string in theInfoblock after the server script execution. Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 3,
        "heading": "json(value)​",
        "chunk_index": 1,
        "source": "exportvariables_d7cdb6d38f5a/3"
      }
    },
    {
      "text": "If an array is given, the values will be presented in the key-value format.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 3,
        "heading": "json(value)​",
        "chunk_index": 2,
        "source": "exportvariables_d7cdb6d38f5a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: sleep()ss.info(newSimpleDateTime().getValue());sleep(10);ss.info(newSimpleDateTime().getValue());// Info: 2022-09-28 09:46:59// Info: 2022-09-28 09:47:09 If the delay exceeds the server script execution timeout, use thess.eventQueueScheduled()event to execute the delayed part of the script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 3,
        "heading": "json(value)​",
        "chunk_index": 3,
        "source": "exportvariables_d7cdb6d38f5a/3"
      }
    },
    {
      "text": "If a string, integer, or floating point number is given, the value itself will be printed.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 3,
        "heading": "json(value)​",
        "chunk_index": 4,
        "source": "exportvariables_d7cdb6d38f5a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print()print('Message')// Message Use the method to output human-readable information about the variable in the server script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 3,
        "heading": "json(value)​",
        "chunk_index": 5,
        "source": "exportvariables_d7cdb6d38f5a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print_r()print_r({key:'value'});//V8Object Object//(//    [key] => value//) Use the method to delay the execution of a server script. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 4,
        "heading": "print(message)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: sleep()ss.info(newSimpleDateTime().getValue());sleep(10);ss.info(newSimpleDateTime().getValue());// Info: 2022-09-28 09:46:59// Info: 2022-09-28 09:47:09 If the delay exceeds the server script execution timeout, use thess.eventQueueScheduled()event to execute the delayed part of the script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 4,
        "heading": "print(message)​",
        "chunk_index": 1,
        "source": "exportvariables_d7cdb6d38f5a/4"
      }
    },
    {
      "text": "Use the method to display a string in theInfoblock after the server script execution. Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 4,
        "heading": "print(message)​",
        "chunk_index": 2,
        "source": "exportvariables_d7cdb6d38f5a/4"
      }
    },
    {
      "text": "If an array is given, the values will be presented in the key-value format.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 4,
        "heading": "print(message)​",
        "chunk_index": 3,
        "source": "exportvariables_d7cdb6d38f5a/4"
      }
    },
    {
      "text": "If a string, integer, or floating point number is given, the value itself will be printed.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 4,
        "heading": "print(message)​",
        "chunk_index": 4,
        "source": "exportvariables_d7cdb6d38f5a/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print()print('Message')// Message Use the method to output human-readable information about the variable in the server script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 4,
        "heading": "print(message)​",
        "chunk_index": 5,
        "source": "exportvariables_d7cdb6d38f5a/4"
      }
    },
    {
      "text": "Use the method to output human-readable information about the variable in the server script. Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 5,
        "heading": "print_r(value)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: print_r()print_r({key:'value'});//V8Object Object//(//    [key] => value//) Use the method to delay the execution of a server script. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 5,
        "heading": "print_r(value)​",
        "chunk_index": 1,
        "source": "exportvariables_d7cdb6d38f5a/5"
      }
    },
    {
      "text": "If an array is given, the values will be presented in the key-value format.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 5,
        "heading": "print_r(value)​",
        "chunk_index": 2,
        "source": "exportvariables_d7cdb6d38f5a/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: sleep()ss.info(newSimpleDateTime().getValue());sleep(10);ss.info(newSimpleDateTime().getValue());// Info: 2022-09-28 09:46:59// Info: 2022-09-28 09:47:09 If the delay exceeds the server script execution timeout, use thess.eventQueueScheduled()event to execute the delayed part of the script.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 5,
        "heading": "print_r(value)​",
        "chunk_index": 3,
        "source": "exportvariables_d7cdb6d38f5a/5"
      }
    },
    {
      "text": "If a string, integer, or floating point number is given, the value itself will be printed.",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 5,
        "heading": "print_r(value)​",
        "chunk_index": 4,
        "source": "exportvariables_d7cdb6d38f5a/5"
      }
    },
    {
      "text": "Use the method to delay the execution of a server script. Parameter(s): Return: Example: sleep()ss.info(newSimpleDateTime().getValue());sleep(10);ss.info(newSimpleDateTime().getValue());// Info: 2022-09-28 09:46:59// Info: 2022-09-28 09:47:09 If the delay exceeds the server script execution timeout, use thess.eventQueueScheduled()event to execute the delayed part of the script. Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 6,
        "heading": "sleep(seconds)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/6"
      }
    },
    {
      "text": "Use the method to accept a set of parameters of different types, the information about each of them is displayed in theInfoblock after the server script execution. Parameter(s): Return: Example: var_dump()var_dump({key:'value'});//object(Object)#835396 (1) {//  [\"key\"] =>//  string(5) \"value\"//}",
      "metadata": {
        "doc_id": "exportvariables_d7cdb6d38f5a",
        "title": "ExportVariables",
        "section_id": 7,
        "heading": "var_dump(value)​",
        "chunk_index": 0,
        "source": "exportvariables_d7cdb6d38f5a/7"
      }
    },
    {
      "text": "SimpleAttachment()constattach=newSimpleAttachment(); Use this method to return an ASCII string decoded from the base64 string specified. Return: Example: base64Decode()constattach=newSimpleAttachment();constresult=attach.base64Decode('TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ=');ss.info(result);// Info: Lorem ipsum dolor sit amet Use this method to return a base64 string from the string specified. Parameter(s): Return: Example: base64Encode()constattach=newSimpleAttachment();constresult=attach.base64Encode('Lorem ipsum dolor sit amet');ss.info(result);// Info: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ= Use this method to copy attachments from the source record to the target record. Parameter(s): Return: Example: copy()constattach=newSimpleAttachment();attach.copy('sys_email','155964310500000059','task',current.sys_id); Use this method to delete the specified attachment. Parameter(s): Return: Example: deleteAttachment()constattach=newSimpleAttachment();attach.deleteAttachment('157052637119478714'); Use this method to get the URL of the specified attachment in the cloud storage.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 1,
        "heading": "SimpleAttachment()​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getAttachmentUrlById()constATTACH_ID='163553718313772587';constsimpleAttach=newSimpleAttachment();constattachUrl=simpleAttach.getAttachmentUrlById(ATTACH_ID);ss.info(attachUrl);// Info: https://s3-{your-instance-url}/public-attachment/5/32/9bnc2pcb3axyfatgtc6lsi7... Use this method to get the attached content as a string in theContentfield. Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 1,
        "heading": "SimpleAttachment()​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/1"
      }
    },
    {
      "text": "Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 1,
        "heading": "SimpleAttachment()​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/1"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 1,
        "heading": "SimpleAttachment()​",
        "chunk_index": 3,
        "source": "simpleattachment_76828986e331/1"
      }
    },
    {
      "text": "Parameter(s): If the input data contains symbols that are not in the base64 alphabet, and thestrictparameter is set totrue, the methodbase64_decode()returnsfalse. If thestrictparameter is set tofalse, the symbols that are not in base64 will be omitted.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 1,
        "heading": "SimpleAttachment()​",
        "chunk_index": 4,
        "source": "simpleattachment_76828986e331/1"
      }
    },
    {
      "text": "Use this method to return an ASCII string decoded from the base64 string specified. Parameter(s): If the input data contains symbols that are not in the base64 alphabet, and thestrictparameter is set totrue, the methodbase64_decode()returnsfalse. If thestrictparameter is set tofalse, the symbols that are not in base64 will be omitted. Return: Example: base64Decode()constattach=newSimpleAttachment();constresult=attach.base64Decode('TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ=');ss.info(result);// Info: Lorem ipsum dolor sit amet Use this method to return a base64 string from the string specified. Parameter(s): Return: Example: base64Encode()constattach=newSimpleAttachment();constresult=attach.base64Encode('Lorem ipsum dolor sit amet');ss.info(result);// Info: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ= Use this method to copy attachments from the source record to the target record.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 2,
        "heading": "base64Decode(data)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/2"
      }
    },
    {
      "text": "Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 2,
        "heading": "base64Decode(data)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: copy()constattach=newSimpleAttachment();attach.copy('sys_email','155964310500000059','task',current.sys_id); Use this method to delete the specified attachment. Parameter(s): Return: Example: deleteAttachment()constattach=newSimpleAttachment();attach.deleteAttachment('157052637119478714'); Use this method to get the URL of the specified attachment in the cloud storage. Parameter(s): Return: Example: getAttachmentUrlById()constATTACH_ID='163553718313772587';constsimpleAttach=newSimpleAttachment();constattachUrl=simpleAttach.getAttachmentUrlById(ATTACH_ID);ss.info(attachUrl);// Info: https://s3-{your-instance-url}/public-attachment/5/32/9bnc2pcb3axyfatgtc6lsi7... Use this method to get the attached content as a string in theContentfield. Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 2,
        "heading": "base64Decode(data)​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 2,
        "heading": "base64Decode(data)​",
        "chunk_index": 3,
        "source": "simpleattachment_76828986e331/2"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 2,
        "heading": "base64Decode(data)​",
        "chunk_index": 4,
        "source": "simpleattachment_76828986e331/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: base64Encode()constattach=newSimpleAttachment();constresult=attach.base64Encode('Lorem ipsum dolor sit amet');ss.info(result);// Info: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ= Use this method to copy attachments from the source record to the target record. Parameter(s): Return: Example: copy()constattach=newSimpleAttachment();attach.copy('sys_email','155964310500000059','task',current.sys_id); Use this method to delete the specified attachment. Parameter(s): Return: Example: deleteAttachment()constattach=newSimpleAttachment();attach.deleteAttachment('157052637119478714'); Use this method to get the URL of the specified attachment in the cloud storage. Parameter(s): Return: Example: getAttachmentUrlById()constATTACH_ID='163553718313772587';constsimpleAttach=newSimpleAttachment();constattachUrl=simpleAttach.getAttachmentUrlById(ATTACH_ID);ss.info(attachUrl);// Info: https://s3-{your-instance-url}/public-attachment/5/32/9bnc2pcb3axyfatgtc6lsi7... Use this method to get the attached content as a string in theContentfield. Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 3,
        "heading": "base64Encode(data)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/3"
      }
    },
    {
      "text": "Together with thewriteBase64()method, you can use it tocopy attachments. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 3,
        "heading": "base64Encode(data)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/3"
      }
    },
    {
      "text": "cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 3,
        "heading": "base64Encode(data)​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/3"
      }
    },
    {
      "text": "Use this method to return a base64 string from the string specified.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 3,
        "heading": "base64Encode(data)​",
        "chunk_index": 3,
        "source": "simpleattachment_76828986e331/3"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 3,
        "heading": "base64Encode(data)​",
        "chunk_index": 4,
        "source": "simpleattachment_76828986e331/3"
      }
    },
    {
      "text": "Use this method to copy attachments from the source record to the target record. Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 4,
        "heading": "copy(sourceTableName, sourceID, targetTableName, targetID)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/4"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 4,
        "heading": "copy(sourceTableName, sourceID, targetTableName, targetID)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: copy()constattach=newSimpleAttachment();attach.copy('sys_email','155964310500000059','task',current.sys_id); Use this method to delete the specified attachment. Parameter(s): Return: Example: deleteAttachment()constattach=newSimpleAttachment();attach.deleteAttachment('157052637119478714'); Use this method to get the URL of the specified attachment in the cloud storage. Parameter(s): Return: Example: getAttachmentUrlById()constATTACH_ID='163553718313772587';constsimpleAttach=newSimpleAttachment();constattachUrl=simpleAttach.getAttachmentUrlById(ATTACH_ID);ss.info(attachUrl);// Info: https://s3-{your-instance-url}/public-attachment/5/32/9bnc2pcb3axyfatgtc6lsi7... Use this method to get the attached content as a string in theContentfield. Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 4,
        "heading": "copy(sourceTableName, sourceID, targetTableName, targetID)​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 4,
        "heading": "copy(sourceTableName, sourceID, targetTableName, targetID)​",
        "chunk_index": 3,
        "source": "simpleattachment_76828986e331/4"
      }
    },
    {
      "text": "Use this method to delete the specified attachment. Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 5,
        "heading": "deleteAttachment(attachmentId)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/5"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 5,
        "heading": "deleteAttachment(attachmentId)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: deleteAttachment()constattach=newSimpleAttachment();attach.deleteAttachment('157052637119478714'); Use this method to get the URL of the specified attachment in the cloud storage. Parameter(s): Return: Example: getAttachmentUrlById()constATTACH_ID='163553718313772587';constsimpleAttach=newSimpleAttachment();constattachUrl=simpleAttach.getAttachmentUrlById(ATTACH_ID);ss.info(attachUrl);// Info: https://s3-{your-instance-url}/public-attachment/5/32/9bnc2pcb3axyfatgtc6lsi7... Use this method to get the attached content as a string in theContentfield. Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 5,
        "heading": "deleteAttachment(attachmentId)​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 5,
        "heading": "deleteAttachment(attachmentId)​",
        "chunk_index": 3,
        "source": "simpleattachment_76828986e331/5"
      }
    },
    {
      "text": "Use this method to get the URL of the specified attachment in the cloud storage. Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 6,
        "heading": "getAttachmentUrlById(attachmentId)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/6"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 6,
        "heading": "getAttachmentUrlById(attachmentId)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getAttachmentUrlById()constATTACH_ID='163553718313772587';constsimpleAttach=newSimpleAttachment();constattachUrl=simpleAttach.getAttachmentUrlById(ATTACH_ID);ss.info(attachUrl);// Info: https://s3-{your-instance-url}/public-attachment/5/32/9bnc2pcb3axyfatgtc6lsi7... Use this method to get the attached content as a string in theContentfield. Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 6,
        "heading": "getAttachmentUrlById(attachmentId)​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getContent()constattach=newSimpleAttachment();ss.info(attach.getContent('168109939701169218'));// Info: task active  additional_comments  approval_state ... Use this method to get an encoded string from the specified attachment. Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 7,
        "heading": "getContent(attachmentId)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/7"
      }
    },
    {
      "text": "Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 7,
        "heading": "getContent(attachmentId)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/7"
      }
    },
    {
      "text": "Use this method to get the attached content as a string in theContentfield.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 7,
        "heading": "getContent(attachmentId)​",
        "chunk_index": 2,
        "source": "simpleattachment_76828986e331/7"
      }
    },
    {
      "text": "The field is filled automatically if the file is of type.txt.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 7,
        "heading": "getContent(attachmentId)​",
        "chunk_index": 3,
        "source": "simpleattachment_76828986e331/7"
      }
    },
    {
      "text": "Use this method to get an encoded string from the specified attachment. Together with thewriteBase64()method, you can use it tocopy attachments. cautionThe attachment size is limited up to 10 MB; otherwise, the method returns an empty string, and the following exception:File size exceeded allowed limitappears in theException Logs(sys_log_exception) table. Together with thereadBase64()method, you can use it tocopy attachments.",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 8,
        "heading": "readBase64(attachmentId)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: readBase64()constread=newSimpleAttachment();ss.info(read.readBase64('168025458107121347'));// Info: 0YLQtdGB0YLQvtCy0YvQuSDQtNC+0LrRg9C80LXQvdGC Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 8,
        "heading": "readBase64(attachmentId)​",
        "chunk_index": 1,
        "source": "simpleattachment_76828986e331/8"
      }
    },
    {
      "text": "Use this method to rename an attachment and its extension. Parameter(s): Return: Example: rename()constDOC_ID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constsimpleAttach=newSimpleAttachment();constattachRecord=newSimpleRecord('sys_attachment');attachRecord.addQuery('record_document_id',DOC_ID);attachRecord.addQuery('mime_content_type','application/json');attachRecord.selectAttributes('sys_id');attachRecord.query();attachRecord.next();simpleAttach.rename(attachRecord.sys_id,`${current.number}-${current.subject}.json`); Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Together with thereadBase64()method, you can use it tocopy attachments. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 9,
        "heading": "rename(attachmentId, fileName)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/9"
      }
    },
    {
      "text": "Use this method to create and add an attachment to the record specified. Parameter(s): Return: Example: write()constsimpleAttach=newSimpleAttachment();constattachID=simpleAttach.write(ss.getDocIdByIds(current.sys_db_table_id,current.sys_id),'readme.json',JSON.stringify(current.getAttributes(),null,'\\t'),'application/json'); Use this method to create and add an attachment encoded with the base64 to the record specified. Together with thereadBase64()method, you can use it tocopy attachments. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 10,
        "heading": "write(documentId, fileName, content, mimeContentType)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/10"
      }
    },
    {
      "text": "Use this method to create and add an attachment encoded with the base64 to the record specified. Together with thereadBase64()method, you can use it tocopy attachments. Parameter(s): Return: Example: writeBase64()constCURRENT_USER_DOC_ID=ss.getDocIdByIds(ss.getUser().sys_db_table_id,ss.getUserID());constsimpleAttach=newSimpleAttachment();constbase64Value='R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=';constattachId=simpleAttach.writeBase64(CURRENT_USER_DOC_ID,'file_example.gif',base64Value,'image/gif');ss.info(attachId);//Info: 162245472311776172",
      "metadata": {
        "doc_id": "simpleattachment_76828986e331",
        "title": "SimpleAttachment",
        "section_id": 11,
        "heading": "writeBase64(documentId, fileName, base64, mimeContentType)​",
        "chunk_index": 0,
        "source": "simpleattachment_76828986e331/11"
      }
    },
    {
      "text": "SimpleAttachment()constattach=newSimpleAttachmentService(); Use this method to create a copy of an attachment from a remote instance by a URL provided and attach it to the specified Document ID in therecordDocIdparameter. Parameter(s): Return: Example: getAttachmentSN()constattach=newSimpleAttachmentService();attach.setUrl('https://source-now.instance.com:8443');// A target instance.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 1,
        "heading": "SimpleAttachmentService()​",
        "chunk_index": 0,
        "source": "simpleattachmentservice_d9d24a6548a0/1"
      }
    },
    {
      "text": "Specify its Document ID from the source instance and the Document ID of the record from the target instance where you need to add the copied attachments.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 1,
        "heading": "SimpleAttachmentService()​",
        "chunk_index": 1,
        "source": "simpleattachmentservice_d9d24a6548a0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: createAttachmentByUrl()constattach=newSimpleAttachmentService();attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.createAttachmentByUrl('http://simple.instance.com/v1/attachments/download/159229954513242397',docID,'test.sop'); Use this method to specify a URL of a remote instance to access to work with its files. Parameter(s): Return: Example: setUrl()attach.setUrl('https://simple.instance.com:8443'); Use this method to set a username when connecting to a remote instance. Parameter(s): Return: Example: setUsername()attach.setUsername('john.doe'); Use this method to set a password for a user whose security context is used when establishing a connection to a remote instance. Parameter(s): Return: Example: setPassword()attach.setPassword('123456'); Use this method to receive an attachment from a remote instance. Add a real URL there before using this method.attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.getAttachmentSN('f91d84fe7cff58d4db91f2e9c2dc02fb',docID);",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 1,
        "heading": "SimpleAttachmentService()​",
        "chunk_index": 2,
        "source": "simpleattachmentservice_d9d24a6548a0/1"
      }
    },
    {
      "text": "Use this constructor to create a SimpleAttachmentService object to work with the methods described below.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 1,
        "heading": "SimpleAttachmentService()​",
        "chunk_index": 3,
        "source": "simpleattachmentservice_d9d24a6548a0/1"
      }
    },
    {
      "text": "noteA user, whose username is passed to the method, must have sufficient access rights to the source file.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 1,
        "heading": "SimpleAttachmentService()​",
        "chunk_index": 4,
        "source": "simpleattachmentservice_d9d24a6548a0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: createAttachmentByUrl()constattach=newSimpleAttachmentService();attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.createAttachmentByUrl('http://simple.instance.com/v1/attachments/download/159229954513242397',docID,'test.sop'); Use this method to specify a URL of a remote instance to access to work with its files. Parameter(s): Return: Example: setUrl()attach.setUrl('https://simple.instance.com:8443'); Use this method to set a username when connecting to a remote instance. Parameter(s): Return: Example: setUsername()attach.setUsername('john.doe'); Use this method to set a password for a user whose security context is used when establishing a connection to a remote instance. Parameter(s): Return: Example: setPassword()attach.setPassword('123456'); Use this method to receive an attachment from a remote instance. Add a real URL there before using this method.attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.getAttachmentSN('f91d84fe7cff58d4db91f2e9c2dc02fb',docID);",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 2,
        "heading": "createAttachmentByUrl(url, recordDocId, fileName)​",
        "chunk_index": 0,
        "source": "simpleattachmentservice_d9d24a6548a0/2"
      }
    },
    {
      "text": "Use this method to create a copy of an attachment from a remote instance by a URL provided and attach it to the specified Document ID in therecordDocIdparameter. Specify its Document ID from the source instance and the Document ID of the record from the target instance where you need to add the copied attachments.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 2,
        "heading": "createAttachmentByUrl(url, recordDocId, fileName)​",
        "chunk_index": 1,
        "source": "simpleattachmentservice_d9d24a6548a0/2"
      }
    },
    {
      "text": "noteA user, whose username is passed to the method, must have sufficient access rights to the source file.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 2,
        "heading": "createAttachmentByUrl(url, recordDocId, fileName)​",
        "chunk_index": 2,
        "source": "simpleattachmentservice_d9d24a6548a0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setUrl()attach.setUrl('https://simple.instance.com:8443'); Use this method to set a username when connecting to a remote instance. Parameter(s): Return: Example: setUsername()attach.setUsername('john.doe'); Use this method to set a password for a user whose security context is used when establishing a connection to a remote instance. Parameter(s): Return: Example: setPassword()attach.setPassword('123456'); Use this method to receive an attachment from a remote instance. Add a real URL there before using this method.attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.getAttachmentSN('f91d84fe7cff58d4db91f2e9c2dc02fb',docID);",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 3,
        "heading": "setUrl(url)​",
        "chunk_index": 0,
        "source": "simpleattachmentservice_d9d24a6548a0/3"
      }
    },
    {
      "text": "noteA user, whose username is passed to the method, must have sufficient access rights to the source file.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 3,
        "heading": "setUrl(url)​",
        "chunk_index": 1,
        "source": "simpleattachmentservice_d9d24a6548a0/3"
      }
    },
    {
      "text": "Specify its Document ID from the source instance and the Document ID of the record from the target instance where you need to add the copied attachments.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 3,
        "heading": "setUrl(url)​",
        "chunk_index": 2,
        "source": "simpleattachmentservice_d9d24a6548a0/3"
      }
    },
    {
      "text": "Use this method to specify a URL of a remote instance to access to work with its files.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 3,
        "heading": "setUrl(url)​",
        "chunk_index": 3,
        "source": "simpleattachmentservice_d9d24a6548a0/3"
      }
    },
    {
      "text": "Use this method to set a username when connecting to a remote instance. Parameter(s): Return: Example: setUsername()attach.setUsername('john.doe'); Use this method to set a password for a user whose security context is used when establishing a connection to a remote instance. Parameter(s): Return: Example: setPassword()attach.setPassword('123456'); Use this method to receive an attachment from a remote instance. Use thesetUrl(),setUsername(), andsetPassword()methods described above to specify authorization properties. Add a real URL there before using this method.attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.getAttachmentSN('f91d84fe7cff58d4db91f2e9c2dc02fb',docID);",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 4,
        "heading": "setUsername(username)​",
        "chunk_index": 0,
        "source": "simpleattachmentservice_d9d24a6548a0/4"
      }
    },
    {
      "text": "noteA user, whose username is passed to the method, must have sufficient access rights to the source file.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 4,
        "heading": "setUsername(username)​",
        "chunk_index": 1,
        "source": "simpleattachmentservice_d9d24a6548a0/4"
      }
    },
    {
      "text": "Specify its Document ID from the source instance and the Document ID of the record from the target instance where you need to add the copied attachments.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 4,
        "heading": "setUsername(username)​",
        "chunk_index": 2,
        "source": "simpleattachmentservice_d9d24a6548a0/4"
      }
    },
    {
      "text": "Use this method to set a password for a user whose security context is used when establishing a connection to a remote instance. Use thesetUrl(),setUsername(), andsetPassword()methods described above to specify authorization properties.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 5,
        "heading": "setPassword(password)​",
        "chunk_index": 0,
        "source": "simpleattachmentservice_d9d24a6548a0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setPassword()attach.setPassword('123456'); Use this method to receive an attachment from a remote instance. Add a real URL there before using this method.attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.getAttachmentSN('f91d84fe7cff58d4db91f2e9c2dc02fb',docID);",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 5,
        "heading": "setPassword(password)​",
        "chunk_index": 1,
        "source": "simpleattachmentservice_d9d24a6548a0/5"
      }
    },
    {
      "text": "Specify its Document ID from the source instance and the Document ID of the record from the target instance where you need to add the copied attachments.",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 5,
        "heading": "setPassword(password)​",
        "chunk_index": 2,
        "source": "simpleattachmentservice_d9d24a6548a0/5"
      }
    },
    {
      "text": "Use this method to receive an attachment from a remote instance. Specify its Document ID from the source instance and the Document ID of the record from the target instance where you need to add the copied attachments. Use thesetUrl(),setUsername(), andsetPassword()methods described above to specify authorization properties. Parameter(s): Return: Example: getAttachmentSN()constattach=newSimpleAttachmentService();attach.setUrl('https://source-now.instance.com:8443');// A target instance. Add a real URL there before using this method.attach.setUsername('john.doe');// Specify a real username before using this method.attach.setPassword('123456');// Specify a real password before using this method.constdocID=ss.getDocIdByIds('155931135900000084','155931135900000001');constattachId=attach.getAttachmentSN('f91d84fe7cff58d4db91f2e9c2dc02fb',docID);",
      "metadata": {
        "doc_id": "simpleattachmentservice_d9d24a6548a0",
        "title": "SimpleAttachmentService",
        "section_id": 6,
        "heading": "getAttachmentSN(sourceDocId, targetDocId)​",
        "chunk_index": 0,
        "source": "simpleattachmentservice_d9d24a6548a0/6"
      }
    },
    {
      "text": "Use the constructor to create a SimpleCache object. Example: SimpleCache()letcacheSystem=newSimpleCache(); Use this method to reset the current timestamp of the cache specified in theURL Caches(sys_cache_system_url) table. As a result: Return: Example: resetCacheSystemUrl()letcacheSystem=newSimpleCache();cacheSystem.resetCacheSystemUrl();",
      "metadata": {
        "doc_id": "simplecache_84a81f010179",
        "title": "SimpleCache",
        "section_id": 1,
        "heading": "SimpleCache​",
        "chunk_index": 0,
        "source": "simplecache_84a81f010179/1"
      }
    },
    {
      "text": "Use this method to reset the current timestamp of the cache specified in theURL Caches(sys_cache_system_url) table. As a result: Return: Example: resetCacheSystemUrl()letcacheSystem=newSimpleCache();cacheSystem.resetCacheSystemUrl();",
      "metadata": {
        "doc_id": "simplecache_84a81f010179",
        "title": "SimpleCache",
        "section_id": 2,
        "heading": "resetCacheSystemUrl()​",
        "chunk_index": 0,
        "source": "simplecache_84a81f010179/2"
      }
    },
    {
      "text": "Use this constructor to instantiate a new SimpleDateTime object with the current or transferred date and time. Parameter(s): Example: SimpleDateTime()constnowDateTime=newSimpleDateTime();//constregistrationDateTime=newSimpleDateTime(record.registration_datetime);//constyearStartDateTime=newSimpleDateTime('2019-01-01 00:00:00'); You can also use the values in relative format for the SimpleDateTime constructor. SimpleDateTime()constyesterdayDatetime=newSimpleDateTime('yesterday');ss.info(yesterdayDatetime.getValue());// Info: 2022-02-28 00:00:00consttomorrowDatetime=newSimpleDateTime('tomorrow');ss.info(tomorrowDatetime.getValue());// Info: 2022-03-02 00:00:00constyesterdayWorkdayDayStart=newSimpleDateTime('yesterday 06:30');ss.info(yesterdayWorkdayDayStart.getValue());// Info: 2022-02-28 06:30:00constfistDayOfNextMonthStart=newSimpleDateTime('first day of next month 00:00');ss.info(fistDayOfNextMonthStart.getValue());// Info: 2022-04-01 00:00:00constrangeStartDatetime=newSimpleDateTime(`first day of${monthName}`);ss.info(rangeStartDatetime.getValue());// Info: 2022-02-01 00:00:00constYEAR=2022;constMONTH=2;constmonthDatetime=newSimpleDateTime(`${YEAR}-${String(MONTH).padStart(2,'0')}-02 00:00:00`);constmonthName=monthDatetime.getMonthUTC();ss.info(monthName);// Info: February Use this method to change the number of days in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addDays()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addDays(3);ss.info(registrationDateTime.getValue());//Info: 2019-01-04 08:12:10 Use this method to change the number of months in the current SimpleDateTime object according to the current date and time. Parameter(s): Return: Example: addMonths()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addMonths(-1);ss.info(registrationDateTime.getValue());//Info: 2018-12-01 08:12:10 Use this method to change the number of seconds in the current SimpleDateTime object according to the local time.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addSeconds()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addSeconds(3600);ss.info(registrationDateTime.getValue());//Info: 2019-01-01 09:12:10 Use this method to change the number of weeks in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addWeeks()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addWeeks(1);ss.info(registrationDateTime.getValue());//Info: 2019-01-08 08:12:10 Use this method to change the number of years in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addYears()constcontractStartDateTime=newSimpleDateTime('2019-01-01 00:00:00');contractStartDateTime.addYears(1);ss.info(contractStartDateTime.getValue());//Info: 2020-01-01 00:00:00 Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "Since the object keeps date and time in the UTC timezone, ensure the data you pass to the object is in UTC, otherwise your results will be invalid. Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "The positive value of the parameter adds days to the object, the negative value diminishes the number of days. The positive value of the parameter adds the number of days equal to the number of days in this month to the date, the negative value subtracts the number of days equal to the number of days in the previous month from the date. The positive value of the parameter adds seconds to the object, the negative value diminishes the number of seconds. The positive value of the parameter adds weeks to the object, the negative value diminishes the number of weeks. The positive value of the parameter adds years to the object, the negative value diminishes the number of years.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 1,
        "heading": "SimpleDateTime(dateTime)​",
        "chunk_index": 10,
        "source": "simpledatetime_e5089a4b4e17/1"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Use this method to change the number of days in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addDays()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addDays(3);ss.info(registrationDateTime.getValue());//Info: 2019-01-04 08:12:10 Use this method to change the number of months in the current SimpleDateTime object according to the current date and time. Parameter(s): Return: Example: addMonths()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addMonths(-1);ss.info(registrationDateTime.getValue());//Info: 2018-12-01 08:12:10 Use this method to change the number of seconds in the current SimpleDateTime object according to the local time. Parameter(s): Return: Example: addSeconds()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addSeconds(3600);ss.info(registrationDateTime.getValue());//Info: 2019-01-01 09:12:10 Use this method to change the number of weeks in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addWeeks()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addWeeks(1);ss.info(registrationDateTime.getValue());//Info: 2019-01-08 08:12:10 Use this method to change the number of years in the current SimpleDateTime object according to the local date.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addYears()constcontractStartDateTime=newSimpleDateTime('2019-01-01 00:00:00');contractStartDateTime.addYears(1);ss.info(contractStartDateTime.getValue());//Info: 2020-01-01 00:00:00 Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "The positive value of the parameter adds days to the object, the negative value diminishes the number of days. The positive value of the parameter adds the number of days equal to the number of days in this month to the date, the negative value subtracts the number of days equal to the number of days in the previous month from the date. The positive value of the parameter adds seconds to the object, the negative value diminishes the number of seconds. The positive value of the parameter adds weeks to the object, the negative value diminishes the number of weeks. The positive value of the parameter adds years to the object, the negative value diminishes the number of years.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 2,
        "heading": "addDays(days)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/2"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Use this method to change the number of months in the current SimpleDateTime object according to the current date and time. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "The positive value of the parameter adds the number of days equal to the number of days in this month to the date, the negative value subtracts the number of days equal to the number of days in the previous month from the date. The positive value of the parameter adds seconds to the object, the negative value diminishes the number of seconds. The positive value of the parameter adds weeks to the object, the negative value diminishes the number of weeks. The positive value of the parameter adds years to the object, the negative value diminishes the number of years.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addMonths()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addMonths(-1);ss.info(registrationDateTime.getValue());//Info: 2018-12-01 08:12:10 Use this method to change the number of seconds in the current SimpleDateTime object according to the local time. Parameter(s): Return: Example: addSeconds()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addSeconds(3600);ss.info(registrationDateTime.getValue());//Info: 2019-01-01 09:12:10 Use this method to change the number of weeks in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addWeeks()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addWeeks(1);ss.info(registrationDateTime.getValue());//Info: 2019-01-08 08:12:10 Use this method to change the number of years in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addYears()constcontractStartDateTime=newSimpleDateTime('2019-01-01 00:00:00');contractStartDateTime.addYears(1);ss.info(contractStartDateTime.getValue());//Info: 2020-01-01 00:00:00 Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 3,
        "heading": "addMonths(months)​",
        "chunk_index": 10,
        "source": "simpledatetime_e5089a4b4e17/3"
      }
    },
    {
      "text": "Use this method to change the number of seconds in the current SimpleDateTime object according to the local time. Parameter(s): Return: Example: addSeconds()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addSeconds(3600);ss.info(registrationDateTime.getValue());//Info: 2019-01-01 09:12:10 Use this method to change the number of weeks in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addWeeks()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addWeeks(1);ss.info(registrationDateTime.getValue());//Info: 2019-01-08 08:12:10 Use this method to change the number of years in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addYears()constcontractStartDateTime=newSimpleDateTime('2019-01-01 00:00:00');contractStartDateTime.addYears(1);ss.info(contractStartDateTime.getValue());//Info: 2020-01-01 00:00:00 Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "The positive value of the parameter adds seconds to the object, the negative value diminishes the number of seconds. The positive value of the parameter adds weeks to the object, the negative value diminishes the number of weeks. The positive value of the parameter adds years to the object, the negative value diminishes the number of years.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 4,
        "heading": "addSeconds(seconds)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/4"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Use this method to change the number of weeks in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addWeeks()constregistrationDateTime=newSimpleDateTime('2019-01-01 08:12:10');registrationDateTime.addWeeks(1);ss.info(registrationDateTime.getValue());//Info: 2019-01-08 08:12:10 Use this method to change the number of years in the current SimpleDateTime object according to the local date. Parameter(s): Return: Example: addYears()constcontractStartDateTime=newSimpleDateTime('2019-01-01 00:00:00');contractStartDateTime.addYears(1);ss.info(contractStartDateTime.getValue());//Info: 2020-01-01 00:00:00 Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "The positive value of the parameter adds weeks to the object, the negative value diminishes the number of weeks. The positive value of the parameter adds years to the object, the negative value diminishes the number of years.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 5,
        "heading": "addWeeks(weeks)​",
        "chunk_index": 10,
        "source": "simpledatetime_e5089a4b4e17/5"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addYears()constcontractStartDateTime=newSimpleDateTime('2019-01-01 00:00:00');contractStartDateTime.addYears(1);ss.info(contractStartDateTime.getValue());//Info: 2020-01-01 00:00:00 Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Use this method to change the number of years in the current SimpleDateTime object according to the local date. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "The positive value of the parameter adds years to the object, the negative value diminishes the number of years.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 6,
        "heading": "addYears(years)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: after()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartAfterThanEnd=startDateTime.after(endDateTime);ss.info(isStartAfterThanEnd);//Info: false Use this method to compare the date specified by thedateTimeparameter with the current date. Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Use this method to compare the date specified by thedateTimeparameter with the current date. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 7,
        "heading": "after(dateTime)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: before()conststartDateTime=newSimpleDateTime('2018-01-01 07:58:35');constendDateTime=newSimpleDateTime('2019-01-01 08:00:00');constisStartBeforeEnd=startDateTime.before(endDateTime);ss.info(isStartBeforeEnd);//Info: true Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Use this method to compare the date specified by thedateTimeparameter with the current date. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 8,
        "heading": "before(dateTime)​",
        "chunk_index": 9,
        "source": "simpledatetime_e5089a4b4e17/8"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Use this method to compare two date and time objects and determine whether they are equal. Parameter(s): Return: Example: compareTo()constbegin=newSimpleDateTime('2019-04-01 08:15:00');constend=newSimpleDateTime('2019-05-01 01:00:00');ss.info(begin.compareTo(end));// -1ss.info(end.compareTo(begin));// 1ss.info(begin.compareTo(begin));// 0 Use this method to compare date and time objects with an existing value to determine whether they are equal. Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "If not, the method defines which goes after or before the other.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 9,
        "heading": "compareTo(dateTime)​",
        "chunk_index": 8,
        "source": "simpledatetime_e5089a4b4e17/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: equals()constfirstDateTime=newSimpleDateTime('2018-01-01 08:00:00');constsecondDateTime=newSimpleDateTime('2018-01-01 08:15:00');constthirdDateTime=newSimpleDateTime('2018-01-01 08:00:00');ss.info(firstDateTime.equals(secondDateTime));ss.info(thirdDateTime.equals(firstDateTime));//Info: false//Info: true Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid!",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Use this method to compare date and time objects with an existing value to determine whether they are equal.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 10,
        "heading": "equals(dateTime)​",
        "chunk_index": 7,
        "source": "simpledatetime_e5089a4b4e17/10"
      }
    },
    {
      "text": "Use this method to return the date saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDate());//Info: 2019-01-01 Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid!",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 11,
        "heading": "getDate()​",
        "chunk_index": 6,
        "source": "simpledatetime_e5089a4b4e17/11"
      }
    },
    {
      "text": "Use this method to return the day of the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthLocalTime());//Info: 7 Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 12,
        "heading": "getDayOfMonthLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/12"
      }
    },
    {
      "text": "Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 12,
        "heading": "getDayOfMonthLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/12"
      }
    },
    {
      "text": "Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 12,
        "heading": "getDayOfMonthLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/12"
      }
    },
    {
      "text": "Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 12,
        "heading": "getDayOfMonthLocalTime()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/12"
      }
    },
    {
      "text": "Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 12,
        "heading": "getDayOfMonthLocalTime()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/12"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 12,
        "heading": "getDayOfMonthLocalTime()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/12"
      }
    },
    {
      "text": "Use this method to return the day of the month saved by the SimpleDateTime object in the UTC timezone. Return: Example: getDaysofMonthsLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfMonthUTC());//Info: 7 Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 13,
        "heading": "getDayOfMonthUTC()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/13"
      }
    },
    {
      "text": "Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 13,
        "heading": "getDayOfMonthUTC()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/13"
      }
    },
    {
      "text": "Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 13,
        "heading": "getDayOfMonthUTC()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/13"
      }
    },
    {
      "text": "Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 13,
        "heading": "getDayOfMonthUTC()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/13"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 13,
        "heading": "getDayOfMonthUTC()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/13"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 13,
        "heading": "getDayOfMonthUTC()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/13"
      }
    },
    {
      "text": "Use this method to return the day of the week saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDayOfWeekLocalTime()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekLocalTime());// Mon Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 14,
        "heading": "getDayOfWeekLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/14"
      }
    },
    {
      "text": "Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 14,
        "heading": "getDayOfWeekLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/14"
      }
    },
    {
      "text": "Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 14,
        "heading": "getDayOfWeekLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/14"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 14,
        "heading": "getDayOfWeekLocalTime()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 14,
        "heading": "getDayOfWeekLocalTime()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/14"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 14,
        "heading": "getDayOfWeekLocalTime()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/14"
      }
    },
    {
      "text": "Use this method to return the day of the week saved by the SimpleDateTime object in the system timezone. Return: Example: getDayOfWeekUTC()constholidayDateTime=newSimpleDateTime('2019-01-07 08:00:00');ss.info(holidayDateTime.getDayOfWeekUTC());//Info: Mon Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 15,
        "heading": "getDayOfWeekUTC()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/15"
      }
    },
    {
      "text": "Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 15,
        "heading": "getDayOfWeekUTC()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/15"
      }
    },
    {
      "text": "Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 15,
        "heading": "getDayOfWeekUTC()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/15"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 15,
        "heading": "getDayOfWeekUTC()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/15"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 15,
        "heading": "getDayOfWeekUTC()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/15"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 15,
        "heading": "getDayOfWeekUTC()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/15"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 16,
        "heading": "getDaysInMonthLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/16"
      }
    },
    {
      "text": "Use this method to return the number of days in the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getDaysInMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthLocalTime());//Info: 31 Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid!",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 16,
        "heading": "getDaysInMonthLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/16"
      }
    },
    {
      "text": "Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 16,
        "heading": "getDaysInMonthLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/16"
      }
    },
    {
      "text": "Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 16,
        "heading": "getDaysInMonthLocalTime()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/16"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 16,
        "heading": "getDaysInMonthLocalTime()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 16,
        "heading": "getDaysInMonthLocalTime()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/16"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 17,
        "heading": "getDaysInMonthUTC()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/17"
      }
    },
    {
      "text": "Use this method to return the number of days in the month saved by the SimpleDateTime object in the system timezone. Return: Example: getDaysInMonthUTC()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDaysInMonthUTC());//Info: 31 Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 17,
        "heading": "getDaysInMonthUTC()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/17"
      }
    },
    {
      "text": "Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 17,
        "heading": "getDaysInMonthUTC()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/17"
      }
    },
    {
      "text": "Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 17,
        "heading": "getDaysInMonthUTC()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/17"
      }
    },
    {
      "text": "Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 17,
        "heading": "getDaysInMonthUTC()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/17"
      }
    },
    {
      "text": "Use this method to return the date and time value in the current user's display format and timezone. Return: Example: getDisplayValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getDisplayValue());// current user's timezone is Europe/Moscow//Info: 2019-01-01 11:00:00 Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 18,
        "heading": "getDisplayValue()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/18"
      }
    },
    {
      "text": "Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 18,
        "heading": "getDisplayValue()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/18"
      }
    },
    {
      "text": "Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 18,
        "heading": "getDisplayValue()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/18"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 18,
        "heading": "getDisplayValue()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 18,
        "heading": "getDisplayValue()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/18"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 18,
        "heading": "getDisplayValue()​",
        "chunk_index": 5,
        "source": "simpledatetime_e5089a4b4e17/18"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 19,
        "heading": "getErrorMsg()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/19"
      }
    },
    {
      "text": "Use this method to return the error message if the SimpleDateTime object is incorrect. Return: Example: getErrorMsg()conststartDateTime=newSimpleDateTime('2019-zz-01 08:00:00');ss.error(startDateTime.getErrorMsg());//Error: The parsed date or time was invalid! Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 19,
        "heading": "getErrorMsg()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/19"
      }
    },
    {
      "text": "Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 19,
        "heading": "getErrorMsg()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/19"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 19,
        "heading": "getErrorMsg()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 19,
        "heading": "getErrorMsg()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/19"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 20,
        "heading": "getLocalDate()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/20"
      }
    },
    {
      "text": "Use this method to return the date saved by the SimpleDateTime object in the current user's timezone. Return: Example: getLocalDate()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getLocalDate());//Info: 2019-01-01 Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 20,
        "heading": "getLocalDate()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/20"
      }
    },
    {
      "text": "Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 20,
        "heading": "getLocalDate()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/20"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 20,
        "heading": "getLocalDate()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 20,
        "heading": "getLocalDate()​",
        "chunk_index": 4,
        "source": "simpledatetime_e5089a4b4e17/20"
      }
    },
    {
      "text": "Return: Example: getLocalTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getLocalTime();ss.info(\"My local time is \"+time.getByFormat('h:i:s'));//Info: My local time is 02:00:00 Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 21,
        "heading": "getLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/21"
      }
    },
    {
      "text": "Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 21,
        "heading": "getLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/21"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 21,
        "heading": "getLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/21"
      }
    },
    {
      "text": "Use this method to return the time saved in a SimpleDateTime object in the current user's timezone. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 21,
        "heading": "getLocalTime()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/21"
      }
    },
    {
      "text": "Use this method to return the month saved by the SimpleDateTime object in the current user's timezone. Return: Example: getMonthLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthLocalTime());//Info: January Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 22,
        "heading": "getMonthLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/22"
      }
    },
    {
      "text": "Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 22,
        "heading": "getMonthLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/22"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 22,
        "heading": "getMonthLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/22"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 22,
        "heading": "getMonthLocalTime()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/22"
      }
    },
    {
      "text": "Use this method to return the month saved by SimpleDateTime object in the UTC timezone. Return: Example: getMonthUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getMonthUTC());//Info: December Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 23,
        "heading": "getMonthUTC()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/23"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 23,
        "heading": "getMonthUTC()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 23,
        "heading": "getMonthUTC()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/23"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 23,
        "heading": "getMonthUTC()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/23"
      }
    },
    {
      "text": "Use this method to return the Unix timestamp that stores the amount of seconds since January 1, 1970, 00:00:00. Return: Example: getNumericValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getNumericValue());//Info: 1546329600 Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 24,
        "heading": "getNumericValue()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/24"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 24,
        "heading": "getNumericValue()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/24"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 24,
        "heading": "getNumericValue()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/24"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 24,
        "heading": "getNumericValue()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/24"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 25,
        "heading": "getTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/25"
      }
    },
    {
      "text": "Use this method to return a SimpleDateTime object that shows the time value of the SimpleDateTime object. Return: Example: getTime()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');consttime=startDateTime.getTime();ss.info(time.getByFormat('h:i:s'));//Info: 11:01:00 Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 25,
        "heading": "getTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/25"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 25,
        "heading": "getTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/25"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 25,
        "heading": "getTime()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/25"
      }
    },
    {
      "text": "Use this method to return the date and time value in the internal format. Return: Example: getValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');ss.info(startDateTime.getValue());// 2019-01-01 08:00:00 Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 26,
        "heading": "getValue()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/26"
      }
    },
    {
      "text": "Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 26,
        "heading": "getValue()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/26"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 26,
        "heading": "getValue()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/26"
      }
    },
    {
      "text": "Use this method to return the week's number saved by the SimpleDateTime object in the current user's timezone. Return: Example: getWeekOfYearLocalTime()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearLocalTime());//Info: 1 Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone. Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 27,
        "heading": "getWeekOfYearLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/27"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 27,
        "heading": "getWeekOfYearLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/27"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 27,
        "heading": "getWeekOfYearLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/27"
      }
    },
    {
      "text": "Return: Example: getWeekOfYearUTC()conststartDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(startDateTime.getWeekOfYearUTC());//Info: 1 Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 28,
        "heading": "getWeekOfYearUTC()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/28"
      }
    },
    {
      "text": "Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 28,
        "heading": "getWeekOfYearUTC()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/28"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 28,
        "heading": "getWeekOfYearUTC()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/28"
      }
    },
    {
      "text": "Use this method to return the number of the week saved by the SimpleDateTime object in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 28,
        "heading": "getWeekOfYearUTC()​",
        "chunk_index": 3,
        "source": "simpledatetime_e5089a4b4e17/28"
      }
    },
    {
      "text": "Use this method to return the year saved by the SimpleDateTime object in the current user's timezone. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 29,
        "heading": "getYearLocalTime()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/29"
      }
    },
    {
      "text": "Return: Example: getYearLocalTime()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearLocalTime());//Info: 2020 Use this method to return the year saved by the SimpleDateTime object in the system timezone. Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 29,
        "heading": "getYearLocalTime()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/29"
      }
    },
    {
      "text": "Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 29,
        "heading": "getYearLocalTime()​",
        "chunk_index": 2,
        "source": "simpledatetime_e5089a4b4e17/29"
      }
    },
    {
      "text": "Use this method to return the year saved by the SimpleDateTime object in the system timezone. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 30,
        "heading": "getYearUTC()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/30"
      }
    },
    {
      "text": "Return: Example: getYearUTC()constholidayDateTime=newSimpleDateTime('2019-12-31 23:45:00');ss.info(holidayDateTime.getYearUTC());//Info: 2019 Use this method to check whether the specified date and time values are valid. Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 30,
        "heading": "getYearUTC()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/30"
      }
    },
    {
      "text": "Use this method to check whether the specified date and time values are valid. The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 31,
        "heading": "isValid()​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/31"
      }
    },
    {
      "text": "Return: Example: isValid()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2011-aa-01 00:00:00');ss.info(startDateTime.isValid());//Info: false Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 31,
        "heading": "isValid()​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/31"
      }
    },
    {
      "text": "The value of thedateTimeparameter should be in the UTC timezone and the internal format of YYYY-MM-DD hh:mm:ss. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone.",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 32,
        "heading": "setValue(dateTime)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/32"
      }
    },
    {
      "text": "Use this method to define the date and time value within the SimpleDateTime object. Parameter(s): Return: Example: setValue()conststartDateTime=newSimpleDateTime('2019-01-01 08:00:00');startDateTime.setValue('2020-01-01 12:00:00');ss.info(startDateTime.getValue());//Info: 2020-01-01 12:00:00 Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 32,
        "heading": "setValue(dateTime)​",
        "chunk_index": 1,
        "source": "simpledatetime_e5089a4b4e17/32"
      }
    },
    {
      "text": "Use this method to return the amount of time between two SimpleDateTime values. Also, it can subtract the amount of time from the current SimpleDateTime object. cautionThegetDisplayValue()method returns the value in the user's timezone. ThegetValue()method returns data only in the UTC timezone. Parameter(s): Return: Example 1: subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffDuration=newSimpleDateTime().subtract(startDatetime,endDatetime);ss.info(diffDuration.getDurationSeconds());// Info: 388 Same example without using the subtract: without subtract()conststartDatetime=newSimpleDateTime('2019-11-08 20:00:00');constendDatetime=newSimpleDateTime('2019-11-08 20:06:28');constdiffSeconds=endDatetime.getNumericValue()-startDatetime.getNumericValue();ss.info(diffSeconds);// Info: 388 Example 2: subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.subtract(3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00 Same example without using the subtract: without subtract()constdatetime=newSimpleDateTime('2020-08-28 09:00:00');datetime.addSeconds(-3600);ss.info(datetime.getValue());//Info: 2020-08-28 08:00:00",
      "metadata": {
        "doc_id": "simpledatetime_e5089a4b4e17",
        "title": "SimpleDateTime",
        "section_id": 33,
        "heading": "subtract(first, second)​",
        "chunk_index": 0,
        "source": "simpledatetime_e5089a4b4e17/33"
      }
    },
    {
      "text": "Use this method to return an array of delegates. Parameter(s): Return: Example: getDelegatesOfType()letsimpleDelegation=newSimpleDelegation();letresult=simpleDelegation.getDelegatesOfType('approvals','166116760014825307');setResult(result); Use this method to return an array of the employees that delegate authority. Parameter(s): Return: Example: getDelegatorsOfType()letsimpleDelegation=newSimpleDelegation();letresult=simpleDelegation.getDelegatorsOfType('tasks','166116760014825307');setResult(result); Use this method to verify if there is a specific delegation record. Parameter(s): Return: Example: hasDelegationOfType()letsimpleDelegation=newSimpleDelegation();letresult=simpleDelegation.hasDelegationOfType('access',['166116760014825307'],'165951644312968191');setResult(result);",
      "metadata": {
        "doc_id": "simpledelegation_4feaa38662e5",
        "title": "SimpleDelegation",
        "section_id": 1,
        "heading": "getDelegatesOfType()​",
        "chunk_index": 0,
        "source": "simpledelegation_4feaa38662e5/1"
      }
    },
    {
      "text": "Use this method to return an array of the employees that delegate authority. Parameter(s): Return: Example: getDelegatorsOfType()letsimpleDelegation=newSimpleDelegation();letresult=simpleDelegation.getDelegatorsOfType('tasks','166116760014825307');setResult(result); Use this method to verify if there is a specific delegation record. Parameter(s): Return: Example: hasDelegationOfType()letsimpleDelegation=newSimpleDelegation();letresult=simpleDelegation.hasDelegationOfType('access',['166116760014825307'],'165951644312968191');setResult(result);",
      "metadata": {
        "doc_id": "simpledelegation_4feaa38662e5",
        "title": "SimpleDelegation",
        "section_id": 2,
        "heading": "getDelegatorsOfType()​",
        "chunk_index": 0,
        "source": "simpledelegation_4feaa38662e5/2"
      }
    },
    {
      "text": "Use this method to verify if there is a specific delegation record. Parameter(s): Return: Example: hasDelegationOfType()letsimpleDelegation=newSimpleDelegation();letresult=simpleDelegation.hasDelegationOfType('access',['166116760014825307'],'165951644312968191');setResult(result);",
      "metadata": {
        "doc_id": "simpledelegation_4feaa38662e5",
        "title": "SimpleDelegation",
        "section_id": 3,
        "heading": "hasDelegationOfType()​",
        "chunk_index": 0,
        "source": "simpledelegation_4feaa38662e5/3"
      }
    },
    {
      "text": "Use this constructor to instantiate a new SimpleDuration object. Parameter(s): Example: SimpleDuration()constdurationOne=newSimpleDuration(3600);constdurationTwo=newSimpleDuration('00:30:00'); Use this method to add to the current value the value of another SimpleDuration object. The method returns the sum as a new SimpleDuration object. The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 1,
        "heading": "SimpleDuration(duration)​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/1"
      }
    },
    {
      "text": "For example, if an event lasts 2 days 23:59:59, the method returns 2. If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 1,
        "heading": "SimpleDuration(duration)​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: add()constdurationOne=newSimpleDuration(3600);constdurationTwo=newSimpleDuration('00:30:00');consttotalDuration=durationOne.add(durationTwo);ss.info(totalDuration.getDurationValue());// Info: 01:30:00 Use this method to get the duration value in the setformat. Parameter(s): Return: Example: getByFormat()constdatetime=newSimpleDateTime('2019-11-12 15:34:13');constduration=newSimpleDuration(datetime.getNumericValue());ss.info(duration.getByFormat('j F Y (D) H:i:s'));// Info: 12 November 2019 (Tue) 15:34:13 Use this method to get the duration value as a number of full days. Return: Example: getDayPart()constduration=newSimpleDuration('02 01:30:00');ss.info(duration.getDayPart());// Info: 2 Use this method to get the number of days, hours, minutes, and seconds from the SimpleDuration object. Return: Example: getDisplayValue()constduration=newSimpleDuration(3605);ss.info(duration.getDisplayValue());// Info: 1 hour 5 seconds Use this method to return the duration value in seconds. Return: Example: getDurationSeconds()constduration=newSimpleDuration('10:00:00');ss.info(duration.getDurationSeconds());//Info: 36000 Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 1,
        "heading": "SimpleDuration(duration)​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/1"
      }
    },
    {
      "text": "Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 1,
        "heading": "SimpleDuration(duration)​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/1"
      }
    },
    {
      "text": "The value of the current object changes. The value of the current object changes.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 1,
        "heading": "SimpleDuration(duration)​",
        "chunk_index": 4,
        "source": "simpleduration_2a31ac78a84e/1"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 1,
        "heading": "SimpleDuration(duration)​",
        "chunk_index": 5,
        "source": "simpleduration_2a31ac78a84e/1"
      }
    },
    {
      "text": "For example, if an event lasts 2 days 23:59:59, the method returns 2. If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 2,
        "heading": "add(duration)​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: add()constdurationOne=newSimpleDuration(3600);constdurationTwo=newSimpleDuration('00:30:00');consttotalDuration=durationOne.add(durationTwo);ss.info(totalDuration.getDurationValue());// Info: 01:30:00 Use this method to get the duration value in the setformat. Parameter(s): Return: Example: getByFormat()constdatetime=newSimpleDateTime('2019-11-12 15:34:13');constduration=newSimpleDuration(datetime.getNumericValue());ss.info(duration.getByFormat('j F Y (D) H:i:s'));// Info: 12 November 2019 (Tue) 15:34:13 Use this method to get the duration value as a number of full days. Return: Example: getDayPart()constduration=newSimpleDuration('02 01:30:00');ss.info(duration.getDayPart());// Info: 2 Use this method to get the number of days, hours, minutes, and seconds from the SimpleDuration object. Return: Example: getDisplayValue()constduration=newSimpleDuration(3605);ss.info(duration.getDisplayValue());// Info: 1 hour 5 seconds Use this method to return the duration value in seconds. Return: Example: getDurationSeconds()constduration=newSimpleDuration('10:00:00');ss.info(duration.getDurationSeconds());//Info: 36000 Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 2,
        "heading": "add(duration)​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/2"
      }
    },
    {
      "text": "Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 2,
        "heading": "add(duration)​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/2"
      }
    },
    {
      "text": "Use this method to add to the current value the value of another SimpleDuration object. The method returns the sum as a new SimpleDuration object. The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 2,
        "heading": "add(duration)​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/2"
      }
    },
    {
      "text": "The value of the current object changes. The value of the current object changes.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 2,
        "heading": "add(duration)​",
        "chunk_index": 4,
        "source": "simpleduration_2a31ac78a84e/2"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 2,
        "heading": "add(duration)​",
        "chunk_index": 5,
        "source": "simpleduration_2a31ac78a84e/2"
      }
    },
    {
      "text": "For example, if an event lasts 2 days 23:59:59, the method returns 2. If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 3,
        "heading": "getByFormat(format)​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/3"
      }
    },
    {
      "text": "Use this method to get the duration value in the setformat. Parameter(s): Return: Example: getByFormat()constdatetime=newSimpleDateTime('2019-11-12 15:34:13');constduration=newSimpleDuration(datetime.getNumericValue());ss.info(duration.getByFormat('j F Y (D) H:i:s'));// Info: 12 November 2019 (Tue) 15:34:13 Use this method to get the duration value as a number of full days. Return: Example: getDayPart()constduration=newSimpleDuration('02 01:30:00');ss.info(duration.getDayPart());// Info: 2 Use this method to get the number of days, hours, minutes, and seconds from the SimpleDuration object. Return: Example: getDisplayValue()constduration=newSimpleDuration(3605);ss.info(duration.getDisplayValue());// Info: 1 hour 5 seconds Use this method to return the duration value in seconds. Return: Example: getDurationSeconds()constduration=newSimpleDuration('10:00:00');ss.info(duration.getDurationSeconds());//Info: 36000 Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 3,
        "heading": "getByFormat(format)​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/3"
      }
    },
    {
      "text": "Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 3,
        "heading": "getByFormat(format)​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/3"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 3,
        "heading": "getByFormat(format)​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/3"
      }
    },
    {
      "text": "The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 3,
        "heading": "getByFormat(format)​",
        "chunk_index": 4,
        "source": "simpleduration_2a31ac78a84e/3"
      }
    },
    {
      "text": "For example, if an event lasts 2 days 23:59:59, the method returns 2. If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 4,
        "heading": "getDayPart()​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/4"
      }
    },
    {
      "text": "Use this method to get the duration value as a number of full days. Return: Example: getDayPart()constduration=newSimpleDuration('02 01:30:00');ss.info(duration.getDayPart());// Info: 2 Use this method to get the number of days, hours, minutes, and seconds from the SimpleDuration object. Return: Example: getDisplayValue()constduration=newSimpleDuration(3605);ss.info(duration.getDisplayValue());// Info: 1 hour 5 seconds Use this method to return the duration value in seconds. Return: Example: getDurationSeconds()constduration=newSimpleDuration('10:00:00');ss.info(duration.getDurationSeconds());//Info: 36000 Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format. Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 4,
        "heading": "getDayPart()​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/4"
      }
    },
    {
      "text": "Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 4,
        "heading": "getDayPart()​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/4"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 4,
        "heading": "getDayPart()​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/4"
      }
    },
    {
      "text": "The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 4,
        "heading": "getDayPart()​",
        "chunk_index": 4,
        "source": "simpleduration_2a31ac78a84e/4"
      }
    },
    {
      "text": "Use this method to get the number of days, hours, minutes, and seconds from the SimpleDuration object. Return: Example: getDisplayValue()constduration=newSimpleDuration(3605);ss.info(duration.getDisplayValue());// Info: 1 hour 5 seconds Use this method to return the duration value in seconds. Return: Example: getDurationSeconds()constduration=newSimpleDuration('10:00:00');ss.info(duration.getDurationSeconds());//Info: 36000 Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format. Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 5,
        "heading": "getDisplayValue()​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/5"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 5,
        "heading": "getDisplayValue()​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/5"
      }
    },
    {
      "text": "The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 5,
        "heading": "getDisplayValue()​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/5"
      }
    },
    {
      "text": "If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 5,
        "heading": "getDisplayValue()​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/5"
      }
    },
    {
      "text": "Use this method to return the duration value in seconds. Return: Example: getDurationSeconds()constduration=newSimpleDuration('10:00:00');ss.info(duration.getDurationSeconds());//Info: 36000 Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format. Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 6,
        "heading": "getDurationSeconds()​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 6,
        "heading": "getDurationSeconds()​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/6"
      }
    },
    {
      "text": "The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 6,
        "heading": "getDurationSeconds()​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/6"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 6,
        "heading": "getDurationSeconds()​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/6"
      }
    },
    {
      "text": "If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 6,
        "heading": "getDurationSeconds()​",
        "chunk_index": 4,
        "source": "simpleduration_2a31ac78a84e/6"
      }
    },
    {
      "text": "Use this method to get the value from the SimpleDuration object in the 'd H:i:s' format. The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 7,
        "heading": "getDurationValue()​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/7"
      }
    },
    {
      "text": "Return: Example: getDurationValue()constduration=newSimpleDuration(7200);ss.info(duration.getDurationValue());// Info: 02:00:00 Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 7,
        "heading": "getDurationValue()​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/7"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 7,
        "heading": "getDurationValue()​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/7"
      }
    },
    {
      "text": "If the number of hours is less than 12, the method rounds the value down.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 7,
        "heading": "getDurationValue()​",
        "chunk_index": 3,
        "source": "simpleduration_2a31ac78a84e/7"
      }
    },
    {
      "text": "Use this method to return the number of days, taking into account the quantity of hours in the SimpleDuration object. If the number of hours is less than 12, the method rounds the value down. The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 8,
        "heading": "getRoundedDayPart()​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/8"
      }
    },
    {
      "text": "Return: Example: getRoundedDayPart()constduration=newSimpleDuration('5 12:52:22');ss.info(duration.getRoundedDayPart());//Info: 6 Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 8,
        "heading": "getRoundedDayPart()​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/8"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 8,
        "heading": "getRoundedDayPart()​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/8"
      }
    },
    {
      "text": "Use this method to return the date and time value in the internal format. Return: Example 1: getValue()constduration=newSimpleDuration('10 15:00:00');ss.info(duration.getValue());//Info: 1970-01-11 15:00:00 Example 2: getValue()constmyUserId=ss.getUserId();consttimestamp=Number(myUserId.slice(0,10));// User created atconstduration=newSimpleDuration(timestamp);ss.info(duration.getValue());// Info: 2019-05-31 14:02:39 Use this method to set the value in the 'd H:i:s' format. Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 9,
        "heading": "getValue()​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/9"
      }
    },
    {
      "text": "The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 9,
        "heading": "getValue()​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/9"
      }
    },
    {
      "text": "The SimpleDuration objects store duration as a date and time starting with January 1, 1970, 00:00:00.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 9,
        "heading": "getValue()​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setDisplayValue()constduration=newSimpleDuration();duration.setDisplayValue('2 10:00:00');ss.info(duration.getDisplayValue());//Info: 2 days 10 hours Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 10,
        "heading": "setDisplayValue(duration)​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/10"
      }
    },
    {
      "text": "The method returns the subtraction result as a new SimpleDuration object.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 10,
        "heading": "setDisplayValue(duration)​",
        "chunk_index": 1,
        "source": "simpleduration_2a31ac78a84e/10"
      }
    },
    {
      "text": "Use this method to set the value in the 'd H:i:s' format.",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 10,
        "heading": "setDisplayValue(duration)​",
        "chunk_index": 2,
        "source": "simpleduration_2a31ac78a84e/10"
      }
    },
    {
      "text": "Use this method to set the value in the 'YYYY-MM-DD hh:mm:ss' format. Parameter(s): Return: Example: setValue()constdurationOne=newSimpleDuration();durationOne.setValue('2019-08-01 09:00:00');ss.info(durationOne.getByFormat());constdurationTwo=newSimpleDuration();durationTwo.setValue(newSimpleDateTime('2019-09-05 12:00:00'));ss.info(durationTwo.getByFormat());// Info: 2019-08-01 09:00:00// Info: 2019-09-05 12:00:00 Use this method to subtract the value of another SimpleDuration object from the current value. The value of the current object changes. The method returns the subtraction result as a new SimpleDuration object. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 11,
        "heading": "setValue(dateTime)​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/11"
      }
    },
    {
      "text": "Use this method to subtract the value of another SimpleDuration object from the current value. The value of the current object changes. The method returns the subtraction result as a new SimpleDuration object. Parameter(s): Return: Example: subtract()constdurationOne=newSimpleDuration();durationOne.setValue('2019-11-08 20:01:58');constdurationTwo=newSimpleDuration(3600);constdatetime=durationOne.subtract(durationTwo);ss.info(datetime.getByFormat());// Info: 2019-11-08 19:01:58",
      "metadata": {
        "doc_id": "simpleduration_2a31ac78a84e",
        "title": "SimpleDuration",
        "section_id": 12,
        "heading": "subtract(duration)​",
        "chunk_index": 0,
        "source": "simpleduration_2a31ac78a84e/12"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 1,
        "heading": "addAddress(address, displayName)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/1"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 1,
        "heading": "addAddress(address, displayName)​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addAddress()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.addAddress(current.caller.email,current.caller.display_name);})(current,template,email,event); Use this method to populate theBlind carbon copy (BCC)field of theEmail(sys_email) table record with the address specified. Parameter(s): Return: Example: addAddressBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){if(+event.param_2>1000){email.addAddressBcc(current.assigned_user.manager.email,current.assigned_user.manager.display_name);}})(current,template,email,event); Use this method to populate theCarbon copy (CC)field of theEmail(sys_email) table record with the address specified. Parameter(s): Return: Example: addAddressCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.addAddressCc(current.assigned_user.manager.email,current.assigned_user.manager.display_name);})(current,template,email,event); Use this method to get the recipient addresses. Return: Example: getAddresses()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddresses();})(current,template,email,event); Use this method to return a list of recipient addresses stated in theBCCfield. Return: Example: getAddressesBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesBcc();})(current,template,email,event); Use this method to return the recipients' addresses stated in theCCfield.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 1,
        "heading": "addAddress(address, displayName)​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/1"
      }
    },
    {
      "text": "Return: Example: getAddressesCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesCc();})(current,template,email,event); Use this method to get the message body. Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address. Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 1,
        "heading": "addAddress(address, displayName)​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 1,
        "heading": "addAddress(address, displayName)​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/1"
      }
    },
    {
      "text": "Use this method to populate theTofield of theEmail(sys_email) table record with the address specified.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 1,
        "heading": "addAddress(address, displayName)​",
        "chunk_index": 5,
        "source": "simpleemailoutbound_f2d1959c56cc/1"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 2,
        "heading": "addAddressBcc(address, displayName)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/2"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 2,
        "heading": "addAddressBcc(address, displayName)​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addAddressBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){if(+event.param_2>1000){email.addAddressBcc(current.assigned_user.manager.email,current.assigned_user.manager.display_name);}})(current,template,email,event); Use this method to populate theCarbon copy (CC)field of theEmail(sys_email) table record with the address specified. Parameter(s): Return: Example: addAddressCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.addAddressCc(current.assigned_user.manager.email,current.assigned_user.manager.display_name);})(current,template,email,event); Use this method to get the recipient addresses. Return: Example: getAddresses()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddresses();})(current,template,email,event); Use this method to return a list of recipient addresses stated in theBCCfield. Return: Example: getAddressesBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesBcc();})(current,template,email,event); Use this method to return the recipients' addresses stated in theCCfield. Return: Example: getAddressesCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesCc();})(current,template,email,event); Use this method to get the message body.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 2,
        "heading": "addAddressBcc(address, displayName)​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/2"
      }
    },
    {
      "text": "Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address. Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 2,
        "heading": "addAddressBcc(address, displayName)​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 2,
        "heading": "addAddressBcc(address, displayName)​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/2"
      }
    },
    {
      "text": "Use this method to populate theBlind carbon copy (BCC)field of theEmail(sys_email) table record with the address specified.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 2,
        "heading": "addAddressBcc(address, displayName)​",
        "chunk_index": 5,
        "source": "simpleemailoutbound_f2d1959c56cc/2"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 3,
        "heading": "addAddressCc(address, displayName)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/3"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 3,
        "heading": "addAddressCc(address, displayName)​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addAddressCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.addAddressCc(current.assigned_user.manager.email,current.assigned_user.manager.display_name);})(current,template,email,event); Use this method to get the recipient addresses. Return: Example: getAddresses()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddresses();})(current,template,email,event); Use this method to return a list of recipient addresses stated in theBCCfield. Return: Example: getAddressesBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesBcc();})(current,template,email,event); Use this method to return the recipients' addresses stated in theCCfield. Return: Example: getAddressesCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesCc();})(current,template,email,event); Use this method to get the message body. Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 3,
        "heading": "addAddressCc(address, displayName)​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/3"
      }
    },
    {
      "text": "Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 3,
        "heading": "addAddressCc(address, displayName)​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 3,
        "heading": "addAddressCc(address, displayName)​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/3"
      }
    },
    {
      "text": "Use this method to populate theCarbon copy (CC)field of theEmail(sys_email) table record with the address specified.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 3,
        "heading": "addAddressCc(address, displayName)​",
        "chunk_index": 5,
        "source": "simpleemailoutbound_f2d1959c56cc/3"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 4,
        "heading": "getAddresses()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/4"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 4,
        "heading": "getAddresses()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/4"
      }
    },
    {
      "text": "Return: Example: getAddresses()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddresses();})(current,template,email,event); Use this method to return a list of recipient addresses stated in theBCCfield. Return: Example: getAddressesBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesBcc();})(current,template,email,event); Use this method to return the recipients' addresses stated in theCCfield. Return: Example: getAddressesCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesCc();})(current,template,email,event); Use this method to get the message body. Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address. Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 4,
        "heading": "getAddresses()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/4"
      }
    },
    {
      "text": "Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 4,
        "heading": "getAddresses()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 4,
        "heading": "getAddresses()​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/4"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 5,
        "heading": "getAddressesBcc()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/5"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 5,
        "heading": "getAddressesBcc()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/5"
      }
    },
    {
      "text": "Return: Example: getAddressesBcc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesBcc();})(current,template,email,event); Use this method to return the recipients' addresses stated in theCCfield. Return: Example: getAddressesCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesCc();})(current,template,email,event); Use this method to get the message body. Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address. Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 5,
        "heading": "getAddressesBcc()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/5"
      }
    },
    {
      "text": "Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 5,
        "heading": "getAddressesBcc()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/5"
      }
    },
    {
      "text": "Use this method to return a list of recipient addresses stated in theBCCfield.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 5,
        "heading": "getAddressesBcc()​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/5"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 6,
        "heading": "getAddressesCc()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/6"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 6,
        "heading": "getAddressesCc()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/6"
      }
    },
    {
      "text": "Return: Example: getAddressesCc()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getAddressesCc();})(current,template,email,event); Use this method to get the message body. Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address. Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 6,
        "heading": "getAddressesCc()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 6,
        "heading": "getAddressesCc()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/6"
      }
    },
    {
      "text": "Use this method to return the recipients' addresses stated in theCCfield.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 6,
        "heading": "getAddressesCc()​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/6"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 7,
        "heading": "getBody()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/7"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 7,
        "heading": "getBody()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/7"
      }
    },
    {
      "text": "Return: Example: getBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getBody();})(current,template,email,event); Use this method to return a sender's address. Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 7,
        "heading": "getBody()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 7,
        "heading": "getBody()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/7"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 8,
        "heading": "getFrom()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/8"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 8,
        "heading": "getFrom()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/8"
      }
    },
    {
      "text": "Return: Example: getForm()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getFrom();})(current,template,email,event); Use this method to return the address set in theReply tofield. Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 8,
        "heading": "getFrom()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 8,
        "heading": "getFrom()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/8"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 9,
        "heading": "getReplyTo()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/9"
      }
    },
    {
      "text": "Return: Example: getReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getReplyTo();})(current,template,email,event); Use this method to return the subject of a message. Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 9,
        "heading": "getReplyTo()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 9,
        "heading": "getReplyTo()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/9"
      }
    },
    {
      "text": "Use this method to return the address set in theReply tofield.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 9,
        "heading": "getReplyTo()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/9"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 9,
        "heading": "getReplyTo()​",
        "chunk_index": 4,
        "source": "simpleemailoutbound_f2d1959c56cc/9"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 10,
        "heading": "getSubject()​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/10"
      }
    },
    {
      "text": "Return: Example: getSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.getSubject();})(current,template,email,event); Use this method to set the body of a message in theBody (Plain text)field. Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 10,
        "heading": "getSubject()​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/10"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 10,
        "heading": "getSubject()​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/10"
      }
    },
    {
      "text": "Use this method to return the subject of a message.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 10,
        "heading": "getSubject()​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/10"
      }
    },
    {
      "text": "By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 11,
        "heading": "setBody(bodyText)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setBody()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setBody(`Additional comments:${current.sys_updated_by.display_name}: \"${current.additional_comments}\"`);})(current,template,email,event); Use this method to change theFromfield value of an outgoing email. Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 11,
        "heading": "setBody(bodyText)​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/11"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 11,
        "heading": "setBody(bodyText)​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/11"
      }
    },
    {
      "text": "Use this method to set the body of a message in theBody (Plain text)field.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 11,
        "heading": "setBody(bodyText)​",
        "chunk_index": 3,
        "source": "simpleemailoutbound_f2d1959c56cc/11"
      }
    },
    {
      "text": "Use this method to change theFromfield value of an outgoing email. By default, the outgoing emailFromfield contains the address taken from theFromfield of the default email account. To change the default email account, change the value of the system propertydefault.email.account.send. Regardless of the value in theFormfield of an outgoing email, the system conducts the sending authorization with the data set in the default email account.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 12,
        "heading": "setFrom(address)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setFrom()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setFrom('test@example.com');})(current,template,email,event); Use this method to set theReply toaddress. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 12,
        "heading": "setFrom(address)​",
        "chunk_index": 1,
        "source": "simpleemailoutbound_f2d1959c56cc/12"
      }
    },
    {
      "text": "The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty.",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 12,
        "heading": "setFrom(address)​",
        "chunk_index": 2,
        "source": "simpleemailoutbound_f2d1959c56cc/12"
      }
    },
    {
      "text": "Use this method to set theReply toaddress. The parameter value must match the regular expression specified in theemail.validation.reg_expproperty. Parameter(s): Return: Example: setReplyTo()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setReplyTo('test@example.com');})(current,template,email,event); Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 13,
        "heading": "setReplyTo(address)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/13"
      }
    },
    {
      "text": "Use this method to set the subject of an email. Parameter(s): Return: Example: setSubject()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){email.setSubject('Additional comments have been added');})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpleemailoutbound_f2d1959c56cc",
        "title": "SimpleEmailOutbound",
        "section_id": 14,
        "heading": "setSubject(subject)​",
        "chunk_index": 0,
        "source": "simpleemailoutbound_f2d1959c56cc/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setTitle()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`); Use this method to set the header of the notification text body. Parameter(s): Return: Example: setBodyHeader()letbodyHeaderTemplate=`<a href=\"${currentRecordURL}\">${emailSubject}</a> <br> The state of${current.number}changed, new state:${current.getDisplayValue('state')}.`;if(current.state=='3'){//PostponedbodyHeaderTemplate+=`Repeated request:${current.getDisplayValue('resubmission')}`;}bodyHeaderTemplate+=`<br><br>You can add information by replying to this letter, do not change the subject of the letter.`;htmlTemplate.setBodyHeader(bodyHeaderTemplate); Use this method to set the main text body of the email notification. Parameter(s): Return: Example: setBodyText()consthtmlTemplate=newSimpleEmailTemplate(approvalItem.getDisplayValue());constallApproversObject=JSON.parse(current.additional_parameter);htmlTemplate.setBodyText(`Dear${current.getDisplayValue('approver_id')}, you need to approve <a href=\"${ApprovalItemURL}\">${approvalItem.getDisplayValue()}</a> The list of the approval tickets:${transformToTemplateList(allApproversObject)}`); Use this method to set the email notification comment in the following way: Parameter(s): Return: Example: setComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`); Use this method to return the main header of the notification. Return: Example: getTitle()consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);ss.info(htmlTemplate.getTitle());// Result: INC0000XXX Email not working Use this method to return the main header of the text body. Return: Example: getBodyHeader()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);ss.info(htmlTemplate.getBodyHeader());// Result: Incident INC0000XX Email not working Use this method to return the text body.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 1,
        "heading": "setTitle(title)​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/1"
      }
    },
    {
      "text": "Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 1,
        "heading": "setTitle(title)​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/1"
      }
    },
    {
      "text": "Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 1,
        "heading": "setTitle(title)​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/1"
      }
    },
    {
      "text": "Use this method to set the main header of the email notification.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 1,
        "heading": "setTitle(title)​",
        "chunk_index": 3,
        "source": "simpleemailtemplate_b6b5cc5aa147/1"
      }
    },
    {
      "text": "Return: Example: getTitle()consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);ss.info(htmlTemplate.getTitle());// Result: INC0000XXX Email not working Use this method to return the main header of the text body. Return: Example: getBodyHeader()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);ss.info(htmlTemplate.getBodyHeader());// Result: Incident INC0000XX Email not working Use this method to return the text body. Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons. Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 2,
        "heading": "setBodyHeader(bodyHeader)​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 2,
        "heading": "setBodyHeader(bodyHeader)​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/2"
      }
    },
    {
      "text": "Use this method to set the header of the notification text body. Parameter(s): Return: Example: setBodyHeader()letbodyHeaderTemplate=`<a href=\"${currentRecordURL}\">${emailSubject}</a> <br> The state of${current.number}changed, new state:${current.getDisplayValue('state')}.`;if(current.state=='3'){//PostponedbodyHeaderTemplate+=`Repeated request:${current.getDisplayValue('resubmission')}`;}bodyHeaderTemplate+=`<br><br>You can add information by replying to this letter, do not change the subject of the letter.`;htmlTemplate.setBodyHeader(bodyHeaderTemplate); Use this method to set the main text body of the email notification. Parameter(s): Return: Example: setBodyText()consthtmlTemplate=newSimpleEmailTemplate(approvalItem.getDisplayValue());constallApproversObject=JSON.parse(current.additional_parameter);htmlTemplate.setBodyText(`Dear${current.getDisplayValue('approver_id')}, you need to approve <a href=\"${ApprovalItemURL}\">${approvalItem.getDisplayValue()}</a> The list of the approval tickets:${transformToTemplateList(allApproversObject)}`); Use this method to set the email notification comment in the following way: Parameter(s): Return: Example: setComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`); Use this method to return the main header of the notification.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 2,
        "heading": "setBodyHeader(bodyHeader)​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setBodyText()consthtmlTemplate=newSimpleEmailTemplate(approvalItem.getDisplayValue());constallApproversObject=JSON.parse(current.additional_parameter);htmlTemplate.setBodyText(`Dear${current.getDisplayValue('approver_id')}, you need to approve <a href=\"${ApprovalItemURL}\">${approvalItem.getDisplayValue()}</a> The list of the approval tickets:${transformToTemplateList(allApproversObject)}`); Use this method to set the email notification comment in the following way: Parameter(s): Return: Example: setComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`); Use this method to return the main header of the notification. Return: Example: getTitle()consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);ss.info(htmlTemplate.getTitle());// Result: INC0000XXX Email not working Use this method to return the main header of the text body. Return: Example: getBodyHeader()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);ss.info(htmlTemplate.getBodyHeader());// Result: Incident INC0000XX Email not working Use this method to return the text body. Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 3,
        "heading": "setBodyText(bodyText)​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/3"
      }
    },
    {
      "text": "Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 3,
        "heading": "setBodyText(bodyText)​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/3"
      }
    },
    {
      "text": "Use this method to set the main text body of the email notification.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 3,
        "heading": "setBodyText(bodyText)​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/3"
      }
    },
    {
      "text": "Use this method to set the email notification comment in the following way: Parameter(s): Return: Example: setComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`); Use this method to return the main header of the notification. Return: Example: getTitle()consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);ss.info(htmlTemplate.getTitle());// Result: INC0000XXX Email not working Use this method to return the main header of the text body. Return: Example: getBodyHeader()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);ss.info(htmlTemplate.getBodyHeader());// Result: Incident INC0000XX Email not working Use this method to return the text body. Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 4,
        "heading": "setComment(comment)​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 4,
        "heading": "setComment(comment)​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/4"
      }
    },
    {
      "text": "Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 4,
        "heading": "setComment(comment)​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/4"
      }
    },
    {
      "text": "Return: Example: getTitle()consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);ss.info(htmlTemplate.getTitle());// Result: INC0000XXX Email not working Use this method to return the main header of the text body. Return: Example: getBodyHeader()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);ss.info(htmlTemplate.getBodyHeader());// Result: Incident INC0000XX Email not working Use this method to return the text body. Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons. Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 5,
        "heading": "getTitle()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 5,
        "heading": "getTitle()​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/5"
      }
    },
    {
      "text": "Use this method to return the main header of the notification.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 5,
        "heading": "getTitle()​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/5"
      }
    },
    {
      "text": "Return: Example: getBodyHeader()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);ss.info(htmlTemplate.getBodyHeader());// Result: Incident INC0000XX Email not working Use this method to return the text body. Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons. Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 6,
        "heading": "getBodyHeader()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/6"
      }
    },
    {
      "text": "Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 6,
        "heading": "getBodyHeader()​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/6"
      }
    },
    {
      "text": "Use this method to return the main header of the text body.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 6,
        "heading": "getBodyHeader()​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/6"
      }
    },
    {
      "text": "Return: Example: getBodyText()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setBodyText(`Description${current.description}`);ss.info(htmlTemplate.getBodyText());// Result: Description 27.01.2022 Could not log in to my email, the error 'No access'. Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons. Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 7,
        "heading": "getBodyText()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/7"
      }
    },
    {
      "text": "Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 7,
        "heading": "getBodyText()​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/7"
      }
    },
    {
      "text": "Use this method to return the text body. Use this method to return a comment text.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 7,
        "heading": "getBodyText()​",
        "chunk_index": 2,
        "source": "simpleemailtemplate_b6b5cc5aa147/7"
      }
    },
    {
      "text": "Return: Example: getComment()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setComment(`Comment:${current.additional_comments}`);ss.info(htmlTemplate.getComment());// Result: Need more information Use this method to return the array of buttons. Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 8,
        "heading": "getComment()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 8,
        "heading": "getComment()​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/8"
      }
    },
    {
      "text": "Return: Example: getButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');ss.info(htmlTemplate.getButtons());// Results: [{\"text\":\"Approve\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#05C270\"},{\"text\":\"Reject\",\"url\":\"https:\\/\\/instance.example.com\\/\",\"color\":\"#F73422\"}] Use this method to add a new button to the array of buttons. Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 9,
        "heading": "getButtons()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com'); Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 10,
        "heading": "addButton()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/10"
      }
    },
    {
      "text": "Use this method to add a new button to the array of buttons.",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 10,
        "heading": "addButton()​",
        "chunk_index": 1,
        "source": "simpleemailtemplate_b6b5cc5aa147/10"
      }
    },
    {
      "text": "Use this method to remove the last added button. Return: Example: removeButton()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');if(current.state==='2'){// Incident in the 'In Progress' statehtmlTemplate.removeButton();} Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 11,
        "heading": "removeButton()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/11"
      }
    },
    {
      "text": "Use this method to remove all added buttons. Return: Example: removeAllButtons()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.addButton('Approve','https://instance.example.com');htmlTemplate.addButton('Reject','https://instance.example.com');if(current.state==='3'){Incidentinthe'Postponed'statehtmlTemplate.removeAllButtons();} Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 12,
        "heading": "removeAllButtons()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/12"
      }
    },
    {
      "text": "Use this method to set an internal method for input type validation. Parameter(s): Return: Example: setProperty()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setProperty('bodyText',Needinformation about the incident', 'BodyText');ss.info(htmlTemplate.getBodyText());// Result: Need information about the incident Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 13,
        "heading": "setProperty(propertyName, input, propertyTitle)​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/13"
      }
    },
    {
      "text": "Use this method to create and return an HTML template based on the set properties. Return: Example: formEmailTemplate()ss.importIncludeScript('SimpleEmailTemplate');consthtmlTemplate=newSimpleEmailTemplate('');htmlTemplate.setTitle(`${current.number}${current.subject}`);htmlTemplate.setComment(`Comment:${current.additional_comments}`);htmlTemplate.setBodyHeader(`Incident${current.number}${current.subject}`);htmlTemplate.setBodyText(`Description:${current.description}`);email.setBody(htmlTemplate.formEmailTemplate());",
      "metadata": {
        "doc_id": "simpleemailtemplate_b6b5cc5aa147",
        "title": "SimpleEmailTemplate",
        "section_id": 14,
        "heading": "formEmailTemplate()​",
        "chunk_index": 0,
        "source": "simpleemailtemplate_b6b5cc5aa147/14"
      }
    },
    {
      "text": "Use this method to get all engines in a list. Return: Example: getAllEngines()ss.importIncludeScript('SimpleEngine');ss.info(SimpleEngine.getAllEngines()); Use this method to return the engine option by the specified name as a separate option class instance. Parameter(s): Return: Example: getEngineOption()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')ss.info(engine.getEngineOption('Active')) Use this method to get the engine option values for the specified table. Parameter(s): Return: Example: getOptionValueForTable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')ss.info(engine.getOptionValueForTable('Active','itsm_inquiry'))// true Use this method to verify if the engine is enabled for the specified table. Parameter(s): Return: Example: isEngineEnable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')if(engine.isEngineEnable('itsm_inquiry')){ss.info('Following Engine enabled on itsm_inquiry');}else{ss.info('Following Engine disabled on itsm_inquiry');}",
      "metadata": {
        "doc_id": "simpleengine_56e25fb9fff3",
        "title": "SimpleEngine",
        "section_id": 1,
        "heading": "getAllEngines()​",
        "chunk_index": 0,
        "source": "simpleengine_56e25fb9fff3/1"
      }
    },
    {
      "text": "Use this method to return the engine option by the specified name as a separate option class instance. Parameter(s): Return: Example: getEngineOption()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')ss.info(engine.getEngineOption('Active')) Use this method to get the engine option values for the specified table. Parameter(s): Return: Example: getOptionValueForTable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')ss.info(engine.getOptionValueForTable('Active','itsm_inquiry'))// true Use this method to verify if the engine is enabled for the specified table. Parameter(s): Return: Example: isEngineEnable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')if(engine.isEngineEnable('itsm_inquiry')){ss.info('Following Engine enabled on itsm_inquiry');}else{ss.info('Following Engine disabled on itsm_inquiry');}",
      "metadata": {
        "doc_id": "simpleengine_56e25fb9fff3",
        "title": "SimpleEngine",
        "section_id": 2,
        "heading": "getEngineOption(optionName)​",
        "chunk_index": 0,
        "source": "simpleengine_56e25fb9fff3/2"
      }
    },
    {
      "text": "Use this method to get the engine option values for the specified table. Parameter(s): Return: Example: getOptionValueForTable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')ss.info(engine.getOptionValueForTable('Active','itsm_inquiry'))// true Use this method to verify if the engine is enabled for the specified table. Parameter(s): Return: Example: isEngineEnable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')if(engine.isEngineEnable('itsm_inquiry')){ss.info('Following Engine enabled on itsm_inquiry');}else{ss.info('Following Engine disabled on itsm_inquiry');}",
      "metadata": {
        "doc_id": "simpleengine_56e25fb9fff3",
        "title": "SimpleEngine",
        "section_id": 3,
        "heading": "getOptionValueForTable(optionName, tableName)​",
        "chunk_index": 0,
        "source": "simpleengine_56e25fb9fff3/3"
      }
    },
    {
      "text": "Use this method to verify if the engine is enabled for the specified table. Parameter(s): Return: Example: isEngineEnable()ss.importIncludeScript('SimpleEngine');constengine=newSimpleEngine('Following Engine')if(engine.isEngineEnable('itsm_inquiry')){ss.info('Following Engine enabled on itsm_inquiry');}else{ss.info('Following Engine disabled on itsm_inquiry');}",
      "metadata": {
        "doc_id": "simpleengine_56e25fb9fff3",
        "title": "SimpleEngine",
        "section_id": 4,
        "heading": "isEngineEnable(tableName)​",
        "chunk_index": 0,
        "source": "simpleengine_56e25fb9fff3/4"
      }
    },
    {
      "text": "Return: Example: getErrors()constrabbitMq=newSimpleExternalRabbitMQ('nofication-service');constpayload={userIDs:[2344,7444],message:\"Hello! \"}ss.info(rabbitMq.publishMessage('push-notifications',JSON.stringify(payload),{ContentType:\"application/json\",Headers:{\"X-Source\":\"simple\"}}).getErrors()); Use this method to send a message to a selected queue. Parameter(s): Return: Example: publishMessage()constrabbitMq=newSimpleExternalRabbitMQ('nofication-service');constpayload={userIDs:[2344,7444],message:\"Hello! \"}ss.info(rabbitMq.publishMessage('push-notifications',JSON.stringify(payload),{ContentType:\"application/json\",Headers:{\"X-Source\":\"simple\"}}).getErrors()); Use this method to send an array of messages to a selected queue. Parameter(s): Return: Example: publishMultipleMessages()constrabbitMq=newSimpleExternalRabbitMQ('notification-service');constmessages=[{userID:2344,message:\"Hello, Ivan\"},{userID:7444,message:\"Hello, Petr\"}];rabbitMq.publishMultipleMessages('push-notifications',messages.map(m=>JSON.stringify(m)),{ContentType:\"application/json\",Headers:{\"X-Source\":\"simple\"}})ss.info(rabbitMq.getErrors());",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 1,
        "heading": "getErrors()​",
        "chunk_index": 0,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/1"
      }
    },
    {
      "text": "cautionThe maximum message length is 26000 characters. cautionThe maximum message length is 26000 characters.",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 1,
        "heading": "getErrors()​",
        "chunk_index": 1,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/1"
      }
    },
    {
      "text": "Use this method to return error messages if an error occurred while sending the messages.",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 1,
        "heading": "getErrors()​",
        "chunk_index": 2,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: publishMessage()constrabbitMq=newSimpleExternalRabbitMQ('nofication-service');constpayload={userIDs:[2344,7444],message:\"Hello! \"}ss.info(rabbitMq.publishMessage('push-notifications',JSON.stringify(payload),{ContentType:\"application/json\",Headers:{\"X-Source\":\"simple\"}}).getErrors()); Use this method to send an array of messages to a selected queue. Parameter(s): Return: Example: publishMultipleMessages()constrabbitMq=newSimpleExternalRabbitMQ('notification-service');constmessages=[{userID:2344,message:\"Hello, Ivan\"},{userID:7444,message:\"Hello, Petr\"}];rabbitMq.publishMultipleMessages('push-notifications',messages.map(m=>JSON.stringify(m)),{ContentType:\"application/json\",Headers:{\"X-Source\":\"simple\"}})ss.info(rabbitMq.getErrors());",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 2,
        "heading": "publishMessage()​",
        "chunk_index": 0,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/2"
      }
    },
    {
      "text": "cautionThe maximum message length is 26000 characters. cautionThe maximum message length is 26000 characters.",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 2,
        "heading": "publishMessage()​",
        "chunk_index": 1,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/2"
      }
    },
    {
      "text": "Use this method to send a message to a selected queue.",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 2,
        "heading": "publishMessage()​",
        "chunk_index": 2,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/2"
      }
    },
    {
      "text": "Use this method to send an array of messages to a selected queue. cautionThe maximum message length is 26000 characters. Parameter(s): Return: Example: publishMultipleMessages()constrabbitMq=newSimpleExternalRabbitMQ('notification-service');constmessages=[{userID:2344,message:\"Hello, Ivan\"},{userID:7444,message:\"Hello, Petr\"}];rabbitMq.publishMultipleMessages('push-notifications',messages.map(m=>JSON.stringify(m)),{ContentType:\"application/json\",Headers:{\"X-Source\":\"simple\"}})ss.info(rabbitMq.getErrors());",
      "metadata": {
        "doc_id": "simpleexternalrabbitmq_6ed0dd6138ee",
        "title": "SimpleExternalRabbitMQ",
        "section_id": 3,
        "heading": "publishMultipleMessages()​",
        "chunk_index": 0,
        "source": "simpleexternalrabbitmq_6ed0dd6138ee/3"
      }
    },
    {
      "text": "Return: Example: getErrors()constrecord=newSimpleImage();record.getImageUrlById('163273889311202251')ss.info(record.getErrors());//Info: [\"Image with sys_id \\\"163273889311202251\\\" not found.\"] Use this method to get the URL of the specified image at the storage. Parameter(s): Return: Example: getImageUrlById()constimage=newSimpleImage();constimageUrl=image.getImageUrlById('161443499412945709');ss.info(imageUrl);// Info: https://your-instance.simpleone.ru:9000/cover/d/27/tfsnhvtowmw07zxhti5c46brtfyf?... Use this method to receive a base64-encoded image. Parameter(s): Return: Example: readImageBase64()constimage=newSimpleImage();constimageBase64=image.readImageBase64('161443499412945709');ss.info(imageBase64.slice(0,10));// Info: R0lGODlh/g Use this method to create a record with a base64-encoded image in theImage(sys_image) table.",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 1,
        "heading": "getErrors()​",
        "chunk_index": 0,
        "source": "simpleimage_ea2b8dfa7228/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: writeImageBase64()constimage=newSimpleImage();constbase64='iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABHNCSVQICAgIfAhkiAAABYFJREFUeJzt3SGQVVUcwOGLQyDSoGkDGyRpYnJIaFpIQDLiNrdh2jE5NE1Ic5smJaHRJLSlSdNGpGl2TOfIu+/xft+X75lzF977zQnvP+fMwt64uSx/b/sdtunHZTmz7Xd427yz7RcAtkcAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMzwxErWGNQ5+fD+preY9+3g85+Nb3Hw68PhNfUBIicACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDu77Rd4G80M9qwxqPPTn682vseyLMv7X5wOr3lvuTa24MlXw3ss58aHgeqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACAsfSnCssz9rv/upTvD+9y4eH7o+bV+1//pi8er7LNn9uZ74wQAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYXsz1LAs6w32rMGQzt7Zye+aEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C2zbjZO7w2vOXfnozb/IG/D6/mfDa849/HYn95ncYycHbnaZEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE7ezwxMwtPyfPng7v8/XxreE1h0ffD68ZHSCaGYZZ7o3/LTODTa8n/p2H//6V/i9nHJ38tbPfm1FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABC2XzcDPRof0tlVUzf2TAwDzQzdzFhjn5khrTm3hgfVdnWAyAkAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwvZqFmDq9/MzF3CsYK3f6E9dDLKj/2aMcwKAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAsJ28rOB/GL6wYcYqwzATl3zMDPYwZW++N04AECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAELY3Qw3/w/AA0fHBhU28x78cXvxk43vMmrmBaYelvwNOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABCWHoSYdXNigOjupTtDz59e+Xl0i532zennQ8+/fH7ks7kCJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIyw9crDHYM+PGxfPDaz6+fnkDb/Jf129f3fge3x08HV5jgGicEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C7yN1ri043Rq1YPhFU+O7k3tNOr4j2dDz7/47XB4j0sfjM911OcHnAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgLD8MdO3gwvCaw8cvN/Amb8CddycWrTMMxG5yAoAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCw/DDQrvp6YrDn58sPxtccPxpeM+P67atDz4/eJMQcJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMwzEsD9+eDW85pfl943v8fL50ZnhRXFOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABBmeGLC8cGFv7f9Dm/K0clfw2uODy6ssY/P5gqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDM763nDM8CzPx+fg2HX94aXnPu8sPhNa9P7298j8XneZgTAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQZnpizNxeD7Bmf50FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABD2D4/fmKms6poKAAAAAElFTkSuQmCC';constimageId=image.writeImageBase64('mario.png',base64,'image/png','156819163902483433');// photo_id column IdconstmyProfile=ss.getUser();myProfile.photo_id=imageId;ss.info(myProfile.photo_id);// myProfile.update();// Info: 161443574018665376",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 1,
        "heading": "getErrors()​",
        "chunk_index": 1,
        "source": "simpleimage_ea2b8dfa7228/1"
      }
    },
    {
      "text": "To add the image to a particular column, specify the column in theimageColumnIdparameter.",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 1,
        "heading": "getErrors()​",
        "chunk_index": 2,
        "source": "simpleimage_ea2b8dfa7228/1"
      }
    },
    {
      "text": "Use this method to get the URL of the specified image at the storage. Parameter(s): Return: Example: getImageUrlById()constimage=newSimpleImage();constimageUrl=image.getImageUrlById('161443499412945709');ss.info(imageUrl);// Info: https://your-instance.simpleone.ru:9000/cover/d/27/tfsnhvtowmw07zxhti5c46brtfyf?... Use this method to receive a base64-encoded image. Parameter(s): Return: Example: readImageBase64()constimage=newSimpleImage();constimageBase64=image.readImageBase64('161443499412945709');ss.info(imageBase64.slice(0,10));// Info: R0lGODlh/g Use this method to create a record with a base64-encoded image in theImage(sys_image) table.",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 2,
        "heading": "getImageUrlById(imageId)​",
        "chunk_index": 0,
        "source": "simpleimage_ea2b8dfa7228/2"
      }
    },
    {
      "text": "To add the image to a particular column, specify the column in theimageColumnIdparameter.",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 2,
        "heading": "getImageUrlById(imageId)​",
        "chunk_index": 1,
        "source": "simpleimage_ea2b8dfa7228/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: writeImageBase64()constimage=newSimpleImage();constbase64='iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABHNCSVQICAgIfAhkiAAABYFJREFUeJzt3SGQVVUcwOGLQyDSoGkDGyRpYnJIaFpIQDLiNrdh2jE5NE1Ic5smJaHRJLSlSdNGpGl2TOfIu+/xft+X75lzF977zQnvP+fMwt64uSx/b/sdtunHZTmz7Xd427yz7RcAtkcAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMzwxErWGNQ5+fD+preY9+3g85+Nb3Hw68PhNfUBIicACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDu77Rd4G80M9qwxqPPTn682vseyLMv7X5wOr3lvuTa24MlXw3ss58aHgeqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACAsfSnCssz9rv/upTvD+9y4eH7o+bV+1//pi8er7LNn9uZ74wQAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYXsz1LAs6w32rMGQzt7Zye+aEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C2zbjZO7w2vOXfnozb/IG/D6/mfDa849/HYn95ncYycHbnaZEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE7ezwxMwtPyfPng7v8/XxreE1h0ffD68ZHSCaGYZZ7o3/LTODTa8n/p2H//6V/i9nHJ38tbPfm1FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABC2XzcDPRof0tlVUzf2TAwDzQzdzFhjn5khrTm3hgfVdnWAyAkAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwvZqFmDq9/MzF3CsYK3f6E9dDLKj/2aMcwKAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAsJ28rOB/GL6wYcYqwzATl3zMDPYwZW++N04AECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAELY3Qw3/w/AA0fHBhU28x78cXvxk43vMmrmBaYelvwNOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABCWHoSYdXNigOjupTtDz59e+Xl0i532zennQ8+/fH7ks7kCJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIyw9crDHYM+PGxfPDaz6+fnkDb/Jf129f3fge3x08HV5jgGicEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C7yN1ri043Rq1YPhFU+O7k3tNOr4j2dDz7/47XB4j0sfjM911OcHnAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgLD8MdO3gwvCaw8cvN/Amb8CddycWrTMMxG5yAoAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCw/DDQrvp6YrDn58sPxtccPxpeM+P67atDz4/eJMQcJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMwzEsD9+eDW85pfl943v8fL50ZnhRXFOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABBmeGLC8cGFv7f9Dm/K0clfw2uODy6ssY/P5gqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDM763nDM8CzPx+fg2HX94aXnPu8sPhNa9P7298j8XneZgTAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQZnpizNxeD7Bmf50FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABD2D4/fmKms6poKAAAAAElFTkSuQmCC';constimageId=image.writeImageBase64('mario.png',base64,'image/png','156819163902483433');// photo_id column IdconstmyProfile=ss.getUser();myProfile.photo_id=imageId;ss.info(myProfile.photo_id);// myProfile.update();// Info: 161443574018665376",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 2,
        "heading": "getImageUrlById(imageId)​",
        "chunk_index": 2,
        "source": "simpleimage_ea2b8dfa7228/2"
      }
    },
    {
      "text": "Use this method to receive a base64-encoded image. Parameter(s): Return: Example: readImageBase64()constimage=newSimpleImage();constimageBase64=image.readImageBase64('161443499412945709');ss.info(imageBase64.slice(0,10));// Info: R0lGODlh/g Use this method to create a record with a base64-encoded image in theImage(sys_image) table. To add the image to a particular column, specify the column in theimageColumnIdparameter. Parameter(s): Return: Example: writeImageBase64()constimage=newSimpleImage();constbase64='iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABHNCSVQICAgIfAhkiAAABYFJREFUeJzt3SGQVVUcwOGLQyDSoGkDGyRpYnJIaFpIQDLiNrdh2jE5NE1Ic5smJaHRJLSlSdNGpGl2TOfIu+/xft+X75lzF977zQnvP+fMwt64uSx/b/sdtunHZTmz7Xd427yz7RcAtkcAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMzwxErWGNQ5+fD+preY9+3g85+Nb3Hw68PhNfUBIicACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDu77Rd4G80M9qwxqPPTn682vseyLMv7X5wOr3lvuTa24MlXw3ss58aHgeqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACAsfSnCssz9rv/upTvD+9y4eH7o+bV+1//pi8er7LNn9uZ74wQAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYXsz1LAs6w32rMGQzt7Zye+aEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C2zbjZO7w2vOXfnozb/IG/D6/mfDa849/HYn95ncYycHbnaZEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE7ezwxMwtPyfPng7v8/XxreE1h0ffD68ZHSCaGYZZ7o3/LTODTa8n/p2H//6V/i9nHJ38tbPfm1FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABC2XzcDPRof0tlVUzf2TAwDzQzdzFhjn5khrTm3hgfVdnWAyAkAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwvZqFmDq9/MzF3CsYK3f6E9dDLKj/2aMcwKAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAsJ28rOB/GL6wYcYqwzATl3zMDPYwZW++N04AECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAELY3Qw3/w/AA0fHBhU28x78cXvxk43vMmrmBaYelvwNOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABCWHoSYdXNigOjupTtDz59e+Xl0i532zennQ8+/fH7ks7kCJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIyw9crDHYM+PGxfPDaz6+fnkDb/Jf129f3fge3x08HV5jgGicEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C7yN1ri043Rq1YPhFU+O7k3tNOr4j2dDz7/47XB4j0sfjM911OcHnAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgLD8MdO3gwvCaw8cvN/Amb8CddycWrTMMxG5yAoAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCw/DDQrvp6YrDn58sPxtccPxpeM+P67atDz4/eJMQcJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMwzEsD9+eDW85pfl943v8fL50ZnhRXFOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABBmeGLC8cGFv7f9Dm/K0clfw2uODy6ssY/P5gqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDM763nDM8CzPx+fg2HX94aXnPu8sPhNa9P7298j8XneZgTAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQZnpizNxeD7Bmf50FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABD2D4/fmKms6poKAAAAAElFTkSuQmCC';constimageId=image.writeImageBase64('mario.png',base64,'image/png','156819163902483433');// photo_id column IdconstmyProfile=ss.getUser();myProfile.photo_id=imageId;ss.info(myProfile.photo_id);// myProfile.update();// Info: 161443574018665376",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 3,
        "heading": "readImageBase64(imageId)​",
        "chunk_index": 0,
        "source": "simpleimage_ea2b8dfa7228/3"
      }
    },
    {
      "text": "Use this method to create a record with a base64-encoded image in theImage(sys_image) table. To add the image to a particular column, specify the column in theimageColumnIdparameter. Parameter(s): Return: Example: writeImageBase64()constimage=newSimpleImage();constbase64='iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABHNCSVQICAgIfAhkiAAABYFJREFUeJzt3SGQVVUcwOGLQyDSoGkDGyRpYnJIaFpIQDLiNrdh2jE5NE1Ic5smJaHRJLSlSdNGpGl2TOfIu+/xft+X75lzF977zQnvP+fMwt64uSx/b/sdtunHZTmz7Xd427yz7RcAtkcAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMzwxErWGNQ5+fD+preY9+3g85+Nb3Hw68PhNfUBIicACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDu77Rd4G80M9qwxqPPTn682vseyLMv7X5wOr3lvuTa24MlXw3ss58aHgeqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACAsfSnCssz9rv/upTvD+9y4eH7o+bV+1//pi8er7LNn9uZ74wQAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYXsz1LAs6w32rMGQzt7Zye+aEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C2zbjZO7w2vOXfnozb/IG/D6/mfDa849/HYn95ncYycHbnaZEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE7ezwxMwtPyfPng7v8/XxreE1h0ffD68ZHSCaGYZZ7o3/LTODTa8n/p2H//6V/i9nHJ38tbPfm1FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABC2XzcDPRof0tlVUzf2TAwDzQzdzFhjn5khrTm3hgfVdnWAyAkAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwvZqFmDq9/MzF3CsYK3f6E9dDLKj/2aMcwKAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAMAGAsJ28rOB/GL6wYcYqwzATl3zMDPYwZW++N04AECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAELY3Qw3/w/AA0fHBhU28x78cXvxk43vMmrmBaYelvwNOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABCWHoSYdXNigOjupTtDz59e+Xl0i532zennQ8+/fH7ks7kCJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIyw9crDHYM+PGxfPDaz6+fnkDb/Jf129f3fge3x08HV5jgGicEwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCEnd32C7yN1ri043Rq1YPhFU+O7k3tNOr4j2dDz7/47XB4j0sfjM911OcHnAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgTAAgLD8MdO3gwvCaw8cvN/Amb8CddycWrTMMxG5yAoAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCw/DDQrvp6YrDn58sPxtccPxpeM+P67atDz4/eJMQcJwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIMwzEsD9+eDW85pfl943v8fL50ZnhRXFOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABBmeGLC8cGFv7f9Dm/K0clfw2uODy6ssY/P5gqcACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDM763nDM8CzPx+fg2HX94aXnPu8sPhNa9P7298j8XneZgTAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQJAIQZnpizNxeD7Bmf50FOABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABD2D4/fmKms6poKAAAAAElFTkSuQmCC';constimageId=image.writeImageBase64('mario.png',base64,'image/png','156819163902483433');// photo_id column IdconstmyProfile=ss.getUser();myProfile.photo_id=imageId;ss.info(myProfile.photo_id);// myProfile.update();// Info: 161443574018665376",
      "metadata": {
        "doc_id": "simpleimage_ea2b8dfa7228",
        "title": "SimpleImage",
        "section_id": 4,
        "heading": "writeImageBase64(fileName, base64, contentType, imageColumnId)​",
        "chunk_index": 0,
        "source": "simpleimage_ea2b8dfa7228/4"
      }
    },
    {
      "text": "It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "Use this constructor to instantiate a new SimpleImport class object. Example: SimpleImport()constimp=newSimpleImport(); Use this method to get an error message.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 1,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "As a result, there is a table with temporary records: an import set, from which the system imports the records to the target table. The method gets a record from theScheduled Imports(sys_schedule_import) table, imports, and transforms it at the same time.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 2,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "The method contains a message about a successful connection or error. The method contains a message about a successful connection or error.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 3,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: importTransform()constimp=newSimpleImport();imp.importTransform(current); Use this method to verify the connection to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnection(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to verify all connections to the LDAP server.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 4,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "Therecordparameter should be a record from theImport Sources(sys_import_source) table. Therecordparameter must be the record from theScheduled Imports(sys_schedule_import) table. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the entry from theImport Set(sys_import_set) table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 5,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "Return: Example: getErrorMessage()constimp=newSimpleImport();if(imp.transform(current)){ss.addInfoMessage('Import succeeded');}else{ss.addErrorMessage(imp.getErrorMessage());} Use this method to import records. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnections(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to transfer the records from the sourceImport Settable to the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 6,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: import()constcurrent=newSimpleRecord('sys_import_source');current.name='Test Imp JSON'current.format='JSON'current.import_set_table_name='c_imp_text_json2';current.import_text='{\"token\":\"example_Token\",\"user\":\"zabix_user\",\"title\":\"Problem: Agent is not available (for 3m)\",\"message\":\"Problemverity: Average\",\"url\":\"/tr_events.php\",\"url_title\":\"ZabbixUrlTitle\",\"priority\":\"0\"}';current.type='Text';current.insert();ss.info(\"RecordImp: \"+current.getErrors())constimp=newSimpleImport();constresult=imp.import(current);if(result){ss.addInfoMessage(\"Import successful\");return;}else{ss.info(\"Errors Import:  \"+imp.getErrorMessage());ss.addErrorMessage(\"Import failed\");} Use this method to initiate ascheduled import.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 7,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "If its value istrue, the test import is performed and the operation status as \"test\" is displayed.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 8,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "The method takes a record from theImport Sources(sys_import_source) table and imports the records from the attachment to the table created via theImport set table namefield.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 1,
        "heading": "SimpleImport()​",
        "chunk_index": 9,
        "source": "simpleimport_a670528838a2/1"
      }
    },
    {
      "text": "It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "Return: Example: getErrorMessage()constimp=newSimpleImport();if(imp.transform(current)){ss.addInfoMessage('Import succeeded');}else{ss.addErrorMessage(imp.getErrorMessage());} Use this method to import records. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnections(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to transfer the records from the sourceImport Settable to the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 1,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "As a result, there is a table with temporary records: an import set, from which the system imports the records to the target table. The method gets a record from theScheduled Imports(sys_schedule_import) table, imports, and transforms it at the same time.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 2,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "Use this method to get an error message. The method contains a message about a successful connection or error. The method contains a message about a successful connection or error.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 3,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: importTransform()constimp=newSimpleImport();imp.importTransform(current); Use this method to verify the connection to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnection(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to verify all connections to the LDAP server.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 4,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "Therecordparameter should be a record from theImport Sources(sys_import_source) table. Therecordparameter must be the record from theScheduled Imports(sys_schedule_import) table. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the entry from theImport Set(sys_import_set) table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 5,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "If its value istrue, the test import is performed and the operation status as \"test\" is displayed.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 6,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: import()constcurrent=newSimpleRecord('sys_import_source');current.name='Test Imp JSON'current.format='JSON'current.import_set_table_name='c_imp_text_json2';current.import_text='{\"token\":\"example_Token\",\"user\":\"zabix_user\",\"title\":\"Problem: Agent is not available (for 3m)\",\"message\":\"Problemverity: Average\",\"url\":\"/tr_events.php\",\"url_title\":\"ZabbixUrlTitle\",\"priority\":\"0\"}';current.type='Text';current.insert();ss.info(\"RecordImp: \"+current.getErrors())constimp=newSimpleImport();constresult=imp.import(current);if(result){ss.addInfoMessage(\"Import successful\");return;}else{ss.info(\"Errors Import:  \"+imp.getErrorMessage());ss.addErrorMessage(\"Import failed\");} Use this method to initiate ascheduled import.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 7,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "The method takes a record from theImport Sources(sys_import_source) table and imports the records from the attachment to the table created via theImport set table namefield.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 2,
        "heading": "getErrorMessage()​",
        "chunk_index": 8,
        "source": "simpleimport_a670528838a2/2"
      }
    },
    {
      "text": "Use this method to import records. The method takes a record from theImport Sources(sys_import_source) table and imports the records from the attachment to the table created via theImport set table namefield. As a result, there is a table with temporary records: an import set, from which the system imports the records to the target table. The method gets a record from theScheduled Imports(sys_schedule_import) table, imports, and transforms it at the same time.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: importTransform()constimp=newSimpleImport();imp.importTransform(current); Use this method to verify the connection to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnection(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to verify all connections to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnections(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to transfer the records from the sourceImport Settable to the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 1,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 2,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "The method contains a message about a successful connection or error. The method contains a message about a successful connection or error.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 3,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: import()constcurrent=newSimpleRecord('sys_import_source');current.name='Test Imp JSON'current.format='JSON'current.import_set_table_name='c_imp_text_json2';current.import_text='{\"token\":\"example_Token\",\"user\":\"zabix_user\",\"title\":\"Problem: Agent is not available (for 3m)\",\"message\":\"Problemverity: Average\",\"url\":\"/tr_events.php\",\"url_title\":\"ZabbixUrlTitle\",\"priority\":\"0\"}';current.type='Text';current.insert();ss.info(\"RecordImp: \"+current.getErrors())constimp=newSimpleImport();constresult=imp.import(current);if(result){ss.addInfoMessage(\"Import successful\");return;}else{ss.info(\"Errors Import:  \"+imp.getErrorMessage());ss.addErrorMessage(\"Import failed\");} Use this method to initiate ascheduled import.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 4,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "Therecordparameter should be a record from theImport Sources(sys_import_source) table. Therecordparameter must be the record from theScheduled Imports(sys_schedule_import) table. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the entry from theImport Set(sys_import_set) table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 5,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "If its value istrue, the test import is performed and the operation status as \"test\" is displayed.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 3,
        "heading": "import(record, testMode)​",
        "chunk_index": 6,
        "source": "simpleimport_a670528838a2/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: importTransform()constimp=newSimpleImport();imp.importTransform(current); Use this method to verify the connection to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnection(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to verify all connections to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnections(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to transfer the records from the sourceImport Settable to the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 4,
        "heading": "importTransform(record)​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/4"
      }
    },
    {
      "text": "It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 4,
        "heading": "importTransform(record)​",
        "chunk_index": 1,
        "source": "simpleimport_a670528838a2/4"
      }
    },
    {
      "text": "Use this method to initiate ascheduled import. The method gets a record from theScheduled Imports(sys_schedule_import) table, imports, and transforms it at the same time.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 4,
        "heading": "importTransform(record)​",
        "chunk_index": 2,
        "source": "simpleimport_a670528838a2/4"
      }
    },
    {
      "text": "Therecordparameter must be the record from theScheduled Imports(sys_schedule_import) table. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the entry from theImport Set(sys_import_set) table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 4,
        "heading": "importTransform(record)​",
        "chunk_index": 3,
        "source": "simpleimport_a670528838a2/4"
      }
    },
    {
      "text": "The method contains a message about a successful connection or error. The method contains a message about a successful connection or error.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 4,
        "heading": "importTransform(record)​",
        "chunk_index": 4,
        "source": "simpleimport_a670528838a2/4"
      }
    },
    {
      "text": "It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 5,
        "heading": "testLdapConnection(record)​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/5"
      }
    },
    {
      "text": "Use this method to verify the connection to the LDAP server. Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnection(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to verify all connections to the LDAP server.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 5,
        "heading": "testLdapConnection(record)​",
        "chunk_index": 1,
        "source": "simpleimport_a670528838a2/5"
      }
    },
    {
      "text": "Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the entry from theImport Set(sys_import_set) table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 5,
        "heading": "testLdapConnection(record)​",
        "chunk_index": 2,
        "source": "simpleimport_a670528838a2/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnections(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to transfer the records from the sourceImport Settable to the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 5,
        "heading": "testLdapConnection(record)​",
        "chunk_index": 3,
        "source": "simpleimport_a670528838a2/5"
      }
    },
    {
      "text": "The method contains a message about a successful connection or error. The method contains a message about a successful connection or error.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 5,
        "heading": "testLdapConnection(record)​",
        "chunk_index": 4,
        "source": "simpleimport_a670528838a2/5"
      }
    },
    {
      "text": "It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 6,
        "heading": "testLdapConnections(record)​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/6"
      }
    },
    {
      "text": "Therecordparameter must be the filled with the ID of theLDAP Server(sys_ldap_server) table record related to this connection. Therecordparameter must be the entry from theImport Set(sys_import_set) table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 6,
        "heading": "testLdapConnections(record)​",
        "chunk_index": 1,
        "source": "simpleimport_a670528838a2/6"
      }
    },
    {
      "text": "The method contains a message about a successful connection or error.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 6,
        "heading": "testLdapConnections(record)​",
        "chunk_index": 2,
        "source": "simpleimport_a670528838a2/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: testLdapConnection()constimp=newSimpleImport();constresult=imp.testLdapConnections(current);if(result.flash.type===\"success\"){ss.addInfoMessage(result.flash.message);return;}if(result.flash.type===\"error\"){ss.addErrorMessage(result.flash.message);} Use this method to transfer the records from the sourceImport Settable to the target table.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 6,
        "heading": "testLdapConnections(record)​",
        "chunk_index": 3,
        "source": "simpleimport_a670528838a2/6"
      }
    },
    {
      "text": "Use this method to verify all connections to the LDAP server.",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 6,
        "heading": "testLdapConnections(record)​",
        "chunk_index": 4,
        "source": "simpleimport_a670528838a2/6"
      }
    },
    {
      "text": "Use this method to transfer the records from the sourceImport Settable to the target table. It uses the active transform map, which is located in theTransform Maps(sys_transform_map) table. Therecordparameter must be the entry from theImport Set(sys_import_set) table. A transform map is a set of records that determine how the fields of the import table correspond to the fields of the target table. Parameter(s): Return: Example: transform()constimp=newSimpleImport();imp.transform(current);",
      "metadata": {
        "doc_id": "simpleimport_a670528838a2",
        "title": "SimpleImport",
        "section_id": 7,
        "heading": "transform(record)​",
        "chunk_index": 0,
        "source": "simpleimport_a670528838a2/7"
      }
    },
    {
      "text": "Use this method to remove the temporary tables that contain the logs from the previous unpacking. Parameter(s): Return: Example: removeUnpacked()constlogArchive=newSimpleLogArchive();logArchive.removeUnpacked('161478566913431857'); Use this method to pack outdated logs into an archive. Return: Example: runPacking()constlogArchive=newSimpleLogArchive();logArchive.runPacking(); Use this method to unpack a log archive. When the unpacking is finished, the logs are placed in the related log tables. Parameter(s): Return: Example: runUnpacking()constlogArchive=newSimpleLogArchive();logArchive.runUnpacking('161478566913431857');",
      "metadata": {
        "doc_id": "simplelogarchive_97796802f8bb",
        "title": "SimpleLogArchive",
        "section_id": 1,
        "heading": "removeUnpacked(sysLogArchiveId)​",
        "chunk_index": 0,
        "source": "simplelogarchive_97796802f8bb/1"
      }
    },
    {
      "text": "By default, the logs older than one month are considered outdated. By default, the logs older than one month are considered outdated.",
      "metadata": {
        "doc_id": "simplelogarchive_97796802f8bb",
        "title": "SimpleLogArchive",
        "section_id": 1,
        "heading": "removeUnpacked(sysLogArchiveId)​",
        "chunk_index": 1,
        "source": "simplelogarchive_97796802f8bb/1"
      }
    },
    {
      "text": "You can edit the archiving period with thesimple.logs.rotate_period_in_dayssystem property. You can edit the archiving period with thesimple.logs.rotate_period_in_dayssystem property.",
      "metadata": {
        "doc_id": "simplelogarchive_97796802f8bb",
        "title": "SimpleLogArchive",
        "section_id": 1,
        "heading": "removeUnpacked(sysLogArchiveId)​",
        "chunk_index": 2,
        "source": "simplelogarchive_97796802f8bb/1"
      }
    },
    {
      "text": "Use this method to pack outdated logs into an archive. By default, the logs older than one month are considered outdated. You can edit the archiving period with thesimple.logs.rotate_period_in_dayssystem property.",
      "metadata": {
        "doc_id": "simplelogarchive_97796802f8bb",
        "title": "SimpleLogArchive",
        "section_id": 2,
        "heading": "runPacking()​",
        "chunk_index": 0,
        "source": "simplelogarchive_97796802f8bb/2"
      }
    },
    {
      "text": "Return: Example: runPacking()constlogArchive=newSimpleLogArchive();logArchive.runPacking(); Use this method to unpack a log archive. When the unpacking is finished, the logs are placed in the related log tables. Parameter(s): Return: Example: runUnpacking()constlogArchive=newSimpleLogArchive();logArchive.runUnpacking('161478566913431857');",
      "metadata": {
        "doc_id": "simplelogarchive_97796802f8bb",
        "title": "SimpleLogArchive",
        "section_id": 2,
        "heading": "runPacking()​",
        "chunk_index": 1,
        "source": "simplelogarchive_97796802f8bb/2"
      }
    },
    {
      "text": "Use this method to unpack a log archive. When the unpacking is finished, the logs are placed in the related log tables. See theSystem Auditarticles to learn more. Parameter(s): Return: Example: runUnpacking()constlogArchive=newSimpleLogArchive();logArchive.runUnpacking('161478566913431857');",
      "metadata": {
        "doc_id": "simplelogarchive_97796802f8bb",
        "title": "SimpleLogArchive",
        "section_id": 3,
        "heading": "runUnpacking(sysLogArchiveId)​",
        "chunk_index": 0,
        "source": "simplelogarchive_97796802f8bb/3"
      }
    },
    {
      "text": "Use this constructor to instantiate a new empty object of the SimpleMail class. Example: SimpleMail()constmail=newSimpleMail(); Use this method to perform a test check with the email server based on the configuration parameters (login, password, protocol, and others). Parameter(s): Return: Example: checkConnection()constcurrent=newSimpleRecord('sys_email_account');current.get('157425284611357796');constmail=newSimpleMail();if(mail.checkConnection(current)){ss.addInfoMessage('Сonnection successful');}else{ss.addErrorMessage('Connection failed');}",
      "metadata": {
        "doc_id": "simplemail_4d6e50b9471c",
        "title": "SimpleMail",
        "section_id": 1,
        "heading": "SimpleMail()​",
        "chunk_index": 0,
        "source": "simplemail_4d6e50b9471c/1"
      }
    },
    {
      "text": "Use this method to perform a test check with the email server based on the configuration parameters (login, password, protocol, and others). Parameter(s): Return: Example: checkConnection()constcurrent=newSimpleRecord('sys_email_account');current.get('157425284611357796');constmail=newSimpleMail();if(mail.checkConnection(current)){ss.addInfoMessage('Сonnection successful');}else{ss.addErrorMessage('Connection failed');}",
      "metadata": {
        "doc_id": "simplemail_4d6e50b9471c",
        "title": "SimpleMail",
        "section_id": 2,
        "heading": "checkConnection(current)​",
        "chunk_index": 0,
        "source": "simplemail_4d6e50b9471c/2"
      }
    },
    {
      "text": "Use this constructor to instantiate a new empty object of the SimpleMessage class. Example: SimpleMessage()constmessage=newSimpleMessage(); Use this method to translate the specified message. Parameter(s): Return: Example: getMessage()constmessage=newSimpleMessage();constmessageValue=message.getMessage('cannot be blank','app',{\"column_translated_title\":\"Field Name\",\"column_name\":\"field_name\"});ss.info(messageValue);// Info: The \"{column_translated_title}\" [{column_name}] field is mandatory. And as an example, the message settings are as follows:  Example: getMessage()constmessage=newSimpleMessage();constlocalizedMessage=message.getMessage('Spaces are not allowed in a table name');ss.addErrorMessage(localizedMessage); You can also add localized messageswithoutthegetMessagemethod: errorMessage()ss.addErrorMessage('Spaces are not allowed in a table name'); See theLocalization and Multi-Language Supportarticle to learn more about message configurations.",
      "metadata": {
        "doc_id": "simplemessage_e2de791e4a7d",
        "title": "SimpleMessage",
        "section_id": 1,
        "heading": "SimpleMessage()​",
        "chunk_index": 0,
        "source": "simplemessage_e2de791e4a7d/1"
      }
    },
    {
      "text": "Use this method to translate the specified message. Parameter(s): Return: Example: getMessage()constmessage=newSimpleMessage();constmessageValue=message.getMessage('cannot be blank','app',{\"column_translated_title\":\"Field Name\",\"column_name\":\"field_name\"});ss.info(messageValue);// Info: The \"{column_translated_title}\" [{column_name}] field is mandatory. And as an example, the message settings are as follows:  Example: getMessage()constmessage=newSimpleMessage();constlocalizedMessage=message.getMessage('Spaces are not allowed in a table name');ss.addErrorMessage(localizedMessage); You can also add localized messageswithoutthegetMessagemethod: errorMessage()ss.addErrorMessage('Spaces are not allowed in a table name'); See theLocalization and Multi-Language Supportarticle to learn more about message configurations.",
      "metadata": {
        "doc_id": "simplemessage_e2de791e4a7d",
        "title": "SimpleMessage",
        "section_id": 2,
        "heading": "getMessage(message, category, params, language)​",
        "chunk_index": 0,
        "source": "simplemessage_e2de791e4a7d/2"
      }
    },
    {
      "text": "Use this method to restore a deleted record. Parameter(s): Return: Example: restore()constdeletionLog=newSimpleRecordDeletionLog();if(deletionLog.restore(current.sys_id)){ss.addSuccessMessage('The record is restored');}",
      "metadata": {
        "doc_id": "simplerecorddeletionlog_971f4c49d550",
        "title": "SimpleRecordDeletionLog",
        "section_id": 1,
        "heading": "restore(recordDeletionLogId)​",
        "chunk_index": 0,
        "source": "simplerecorddeletionlog_971f4c49d550/1"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "This object allows you to access the fields of the record in the Reference field with dot-walking. cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "The script example: Use this method to add an encoded query to select records from the database. You can also use a decoded query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theaddOrCondition()method value. {reference_field_name}instead of the record ID as theaddQuery()method value. {reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Use curly brackets when setting a filter argument for the textfields of typeString, Text, Translated Text, Conditions, and URL. Using parenthesis for the argument may cause a filter query error.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records is empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records will be empty.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "You can also specify a RE model attribute of a specific table. Use the following operators without a value: You can also specify a RE model attribute of a specific table. You can also specify a RE model attribute of a specific table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "In this method, you can use any necessary operator from thecondition operatorslist, specified in lower- or uppercase. In this method, you can use any required operator from thecondition operatorslist, specified in lower- or uppercase. The condition operators and their system names are listed in thecondition operatorsarticle.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "tipSimpleReference object has a number of methods similar to the methods of the SimpleRecord:getValue()getLabel(property)setValue()getAttributes()hasAttachment()getDisplayValue() Example: getValue() using SimpleReference objectletrecord=newSimpleRecord('task');record.setLimit(1);record.query();record.next();ss.info(record.caller.getValue('username')); Use the method to add the OR condition to an existing query. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constrelatedTask=newSimpleRecord('task');relatedTask.addQuery('caller',task.caller);relatedTask.addOrCondition('assigned_user',task.caller);relatedTask.query();ss.info('Tasks count: '+relatedTask.getRowCount());// Info: Tasks count: 122 Use this method to add a condition to make a selection of records from the database. Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Parameter(s): Example: SimpleRecord()consttaskRecord=newSimpleRecord('task'); noteAny conversion of a SimpleRecord object to a string returns the object ID.constuser=newSimpleRecord('user').get('100000000000000000');ss.info(String(user))// Info: 100000000000000000 The SimpleRecord class has a special object forRecord Extended Models–rem_attrthat contains information about the REM attributes. tiprem_attr has a number of methods similar to the methods of the SimpleRecord:getValue()setValue()getTitle()getDisplayValue()Example:record.rem_attr.getValue('my_rem_attribute'); Example: get() using REMconstrecord=newSimpleRecord('task');record.get('160638931615274614');if(record.getReModelId()){ss.info(record.rem_attr.description);} When you call the fields of theReferencetype, the response contains a special SimpleReference object. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "It works in conjunction with theaddQuery()method. Specify the operator names in uppercase according to their system names,\nas this method does not verify incomnig data, unlike theaddQuery()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Use the constructor to instantiate an object of the SimpleRecord class for a particular table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Use the system names of the operators in the scripts. Use the system names of the operators in the scripts.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Use it to read and edit REM attribute values of the current record with the methods as shown below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 36,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 37,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 38,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 39,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 40,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 41,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 42,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 43,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 44,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 45,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 46,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 47,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 48,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 49,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 1,
        "heading": "SimpleRecord(tableName)​",
        "chunk_index": 50,
        "source": "simplerecord-server-side_0b2f7b6f4678/1"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "This object allows you to access the fields of the record in the Reference field with dot-walking. cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Use curly brackets when setting a filter argument for the textfields of typeString, Text, Translated Text, Conditions, and URL. Using parenthesis for the argument may cause a filter query error.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "The script example: Use this method to add an encoded query to select records from the database. You can also use a decoded query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "It works in conjunction with theaddQuery()method. Specify the operator names in uppercase according to their system names,\nas this method does not verify incomnig data, unlike theaddQuery()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theaddOrCondition()method value. {reference_field_name}instead of the record ID as theaddQuery()method value. {reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records is empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records will be empty.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "tipSimpleReference object has a number of methods similar to the methods of the SimpleRecord:getValue()getLabel(property)setValue()getAttributes()hasAttachment()getDisplayValue() Example: getValue() using SimpleReference objectletrecord=newSimpleRecord('task');record.setLimit(1);record.query();record.next();ss.info(record.caller.getValue('username')); Use the method to add the OR condition to an existing query. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constrelatedTask=newSimpleRecord('task');relatedTask.addQuery('caller',task.caller);relatedTask.addOrCondition('assigned_user',task.caller);relatedTask.query();ss.info('Tasks count: '+relatedTask.getRowCount());// Info: Tasks count: 122 Use this method to add a condition to make a selection of records from the database. Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "You can also specify a RE model attribute of a specific table. Use the following operators without a value: You can also specify a RE model attribute of a specific table. You can also specify a RE model attribute of a specific table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Use it to read and edit REM attribute values of the current record with the methods as shown below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Use the system names of the operators in the scripts. Use the system names of the operators in the scripts.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "tiprem_attr has a number of methods similar to the methods of the SimpleRecord:getValue()setValue()getTitle()getDisplayValue()Example:record.rem_attr.getValue('my_rem_attribute'); Example: get() using REMconstrecord=newSimpleRecord('task');record.get('160638931615274614');if(record.getReModelId()){ss.info(record.rem_attr.description);} When you call the fields of theReferencetype, the response contains a special SimpleReference object. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "In this method, you can use any necessary operator from thecondition operatorslist, specified in lower- or uppercase. In this method, you can use any required operator from thecondition operatorslist, specified in lower- or uppercase. The condition operators and their system names are listed in thecondition operatorsarticle.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 36,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 37,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 38,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 39,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 40,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 41,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 42,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 43,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 44,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 45,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 46,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 47,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 48,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 49,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "The SimpleRecord class has a special object forRecord Extended Models–rem_attrthat contains information about the REM attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 2,
        "heading": "REM attribute object​",
        "chunk_index": 50,
        "source": "simplerecord-server-side_0b2f7b6f4678/2"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "tipSimpleReference object has a number of methods similar to the methods of the SimpleRecord:getValue()getLabel(property)setValue()getAttributes()hasAttachment()getDisplayValue() Example: getValue() using SimpleReference objectletrecord=newSimpleRecord('task');record.setLimit(1);record.query();record.next();ss.info(record.caller.getValue('username')); Use the method to add the OR condition to an existing query. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constrelatedTask=newSimpleRecord('task');relatedTask.addQuery('caller',task.caller);relatedTask.addOrCondition('assigned_user',task.caller);relatedTask.query();ss.info('Tasks count: '+relatedTask.getRowCount());// Info: Tasks count: 122 Use this method to add a condition to make a selection of records from the database. Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records is empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records will be empty.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Use curly brackets when setting a filter argument for the textfields of typeString, Text, Translated Text, Conditions, and URL. Using parenthesis for the argument may cause a filter query error.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "This object allows you to access the fields of the record in the Reference field with dot-walking. cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theaddOrCondition()method value. {reference_field_name}instead of the record ID as theaddQuery()method value. {reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "In this method, you can use any necessary operator from thecondition operatorslist, specified in lower- or uppercase. In this method, you can use any required operator from thecondition operatorslist, specified in lower- or uppercase. The condition operators and their system names are listed in thecondition operatorsarticle.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "It works in conjunction with theaddQuery()method. Specify the operator names in uppercase according to their system names,\nas this method does not verify incomnig data, unlike theaddQuery()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Use the system names of the operators in the scripts. Use the system names of the operators in the scripts.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "The script example: Use this method to add an encoded query to select records from the database. You can also use a decoded query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "When you call the fields of theReferencetype, the response contains a special SimpleReference object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 36,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "You can also specify a RE model attribute of a specific table. Use the following operators without a value: You can also specify a RE model attribute of a specific table. You can also specify a RE model attribute of a specific table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 37,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 38,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 39,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 40,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 41,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 42,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 43,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 44,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 45,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 46,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 47,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 3,
        "heading": "SimpleReference object​",
        "chunk_index": 48,
        "source": "simplerecord-server-side_0b2f7b6f4678/3"
      }
    },
    {
      "text": "The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constrelatedTask=newSimpleRecord('task');relatedTask.addQuery('caller',task.caller);relatedTask.addOrCondition('assigned_user',task.caller);relatedTask.query();ss.info('Tasks count: '+relatedTask.getRowCount());// Info: Tasks count: 122 Use this method to add a condition to make a selection of records from the database. Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Use curly brackets when setting a filter argument for the textfields of typeString, Text, Translated Text, Conditions, and URL. Using parenthesis for the argument may cause a filter query error.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Use the method to add the OR condition to an existing query. If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records is empty. To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theaddOrCondition()method value. {reference_field_name}instead of the record ID as theaddQuery()method value. {reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "In this method, you can use any necessary operator from thecondition operatorslist, specified in lower- or uppercase. In this method, you can use any required operator from thecondition operatorslist, specified in lower- or uppercase. The condition operators and their system names are listed in thecondition operatorsarticle.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "It works in conjunction with theaddQuery()method. Specify the operator names in uppercase according to their system names,\nas this method does not verify incomnig data, unlike theaddQuery()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "You can also specify a RE model attribute of a specific table. Use the following operators without a value: You can also specify a RE model attribute of a specific table. You can also specify a RE model attribute of a specific table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "The script example: Use this method to add an encoded query to select records from the database. You can also use a decoded query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 36,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 37,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 38,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 39,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 40,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 41,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Use the system names of the operators in the scripts. Use the system names of the operators in the scripts.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 42,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 43,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 44,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 45,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 4,
        "heading": "addOrCondition(property, operator, value)​",
        "chunk_index": 46,
        "source": "simplerecord-server-side_0b2f7b6f4678/4"
      }
    },
    {
      "text": "Parameter(s): Return: Examples: addQuery()consttask=newSimpleRecord('task');task.addQuery('active',true);task.addQuery('subject','like','email');task.addQuery('sys_created_at','<','2019-04-01 00:00:00');task.query();ss.info('Count: '+task.getRowCount());// Info: Count: 0 addQuery() with REM attributeletrecord=newSimpleRecord('task');record.addQuery('166972638116358001:description','not work');record.query();ss.info(\"Total rows: \"+record.getRowCount());// Info: Total rows: 1 cautionA condition with an undefined ornullvalue is skipped. Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found!",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theaddQuery()method value. {reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Use this method to add a condition to make a selection of records from the database. If such criteria are built using the AND operator, the selection of records is empty. To return records that match a condition, use the OR operator. If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "The script example: Use this method to add an encoded query to select records from the database. You can also use a decoded query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Use curly brackets when setting a filter argument for the textfields of typeString, Text, Translated Text, Conditions, and URL. Using parenthesis for the argument may cause a filter query error.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "To filter records, use the operators corresponding to the attribute type. To filter records, use the operators corresponding to the attribute type.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "In this method, you can use any required operator from thecondition operatorslist, specified in lower- or uppercase. The condition operators and their system names are listed in thecondition operatorsarticle.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Specify the operator names in uppercase according to their system names,\nas this method does not verify incomnig data, unlike theaddQuery()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 36,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 37,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 38,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 39,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Use the system names of the operators in the scripts.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 40,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Use the following operators without a value: You can also specify a RE model attribute of a specific table. You can also specify a RE model attribute of a specific table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 41,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 42,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "cautionThe condition may contain criteria based on the attributes of different RE models. cautionThe condition may contain criteria based on the attributes of different RE models.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 43,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 5,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 44,
        "source": "simplerecord-server-side_0b2f7b6f4678/5"
      }
    },
    {
      "text": "Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Use curly brackets when setting a filter argument for the textfields of typeString, Text, Translated Text, Conditions, and URL. Using parenthesis for the argument may cause a filter query error.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "You can also specify a RE model attribute of a specific table. cautionThe condition may contain criteria based on the attributes of different RE models.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Use this method to add an encoded query to select records from the database. You can also use a decoded query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "If such criteria are built using the AND operator, the selection of records will be empty. To return records that match a condition, use the OR operator.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Specify the operator names in uppercase according to their system names,\nas this method does not verify incomnig data, unlike theaddQuery()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "The condition operators and their system names are listed in thecondition operatorsarticle.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 36,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 37,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 38,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 39,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 40,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "To filter records, use the operators corresponding to the attribute type.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 6,
        "heading": "addEncodedQuery(condition)​",
        "chunk_index": 41,
        "source": "simplerecord-server-side_0b2f7b6f4678/6"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Use this method to check whether the current user can create records in the specified table according to theAccess Control Rules(ACL). Return: Example: canCreate()current.canCreate(); Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 7,
        "heading": "canCreate()​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/7"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Use the method to check whether the current user can delete records in the specified table according to theAccess Control Rule(ACL). Return: Example: canDelete()current.canDelete(); Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 8,
        "heading": "canDelete()​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/8"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Use the method to check whether the current user can read records in the specified table according to theAccess Control Rule(ACL). Return: Example: canRead()current.canRead(); Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 9,
        "heading": "canRead()​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/9"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: canUpdate()current.canUpdate(); Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Use this method to check whether the current user can edit records in the specified table according to theAccess Control Rule(ACL).",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 10,
        "heading": "canUpdate()​",
        "chunk_index": 35,
        "source": "simplerecord-server-side_0b2f7b6f4678/10"
      }
    },
    {
      "text": "Return: Example: deleteMultiple()constrecord=newSimpleRecord('sys_activity_feed_item');record.addQuery('content','isempty');record.query();ss.info(record.getRowCount());ss.info(record.deleteMultiple());// Info: 0// Info: true Use this method to delete a record. Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Use this method to delete multiple records form the selection. Always delete each record separately. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "The attachments of the deleted records are not deleted. Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "cautionDo not use this method for the tables that have dependencies.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 11,
        "heading": "deleteMultiple()​",
        "chunk_index": 34,
        "source": "simplerecord-server-side_0b2f7b6f4678/11"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Use this method to delete a record. When the method is called in a selection of records with the parameter set, the record with a specific ID is deleted. Ifidis not specified in the parameter, the method deletes the current record. warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: deleteRecord()consttask=newSimpleRecord('task');task.get('155931135900000000');if(!task.sys_id){return;}constisDeleted=task.deleteRecord();if(isDeleted){ss.info('Task with ID '+task.sys_id+' was deleted! Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "{reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "');return;}ss.error(task.getErrors()); Use this method to load an object from a database by the field value, or, in a specific case, by the ID.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 32,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 12,
        "heading": "deleteRecord(id)​",
        "chunk_index": 33,
        "source": "simplerecord-server-side_0b2f7b6f4678/12"
      }
    },
    {
      "text": "Use this method to load an object from a database by the field value, or, in a specific case, by the ID. {reference_field_name}instead of the record ID as theget()method value. For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: get()constcurrent=newSimpleRecord('task');current.get('163663310116371174'); noteIt is possible to pass the value of the Reference field ascurrent. The script example:Pass SimpleRecord as an argumentconsttask=newSimpleRecord('task');task.setLimit(1);task.query();if(!task.next()){ss.info('No tasks found! ');return;}constuser=newSimpleRecord('user');user.get(task.caller);user.language_id='156628684306541141';// Englishss.info(user.update());// Info: 167515292501757147 Use the method to return an object with the current record attributes as the keys and key values. Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "ThepropertyOrValueparameter is the ID value of the record or the property name. If the value is the property name, thevalueparameter is mandatory. cautionWhen you pass thenullvalue or an empty string in thepropertyOrValueparameter, the system throws an exception:Argument 1 passed to \"get()\" must not be empty.If thevalueis undefined,nullor an empty string, the method returns a new record object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 13,
        "heading": "get(propertyOrValue, value)​",
        "chunk_index": 31,
        "source": "simplerecord-server-side_0b2f7b6f4678/13"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Return: Example: getAttributes()constuserRecord=ss.getUser();ss.info(userRecord.getAttributes());// Info: {\"sys_id\":\"155931135900000001\",\"sys_created_at\":\"2019-09-30 00:00:00\",\"sys_updated_at\":\"2021-06-28... Use this method to return the title of the current table. Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Use the method to return an object with the current record attributes as the keys and key values. With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 14,
        "heading": "getAttributes()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/14"
      }
    },
    {
      "text": "Return: Example: getClassDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getClassDisplayValue());// Info: Task Use this method to return the current query condition. Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Use this method to return the title of the current table. (record id: )\",... Use this method to get the field title. Instead, use thegetTitle()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "For example, for the Reference field the record name is returned, not the ID. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 15,
        "heading": "getClassDisplayValue()​",
        "chunk_index": 30,
        "source": "simplerecord-server-side_0b2f7b6f4678/15"
      }
    },
    {
      "text": "Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Return: Example: getConditionQuery()consttask=newSimpleRecord('task');constcondition=task.addQuery('state','7');condition.addOrCondition('priority','<','3');ss.info('Condition before query: '+task.getConditionQuery());task.query();ss.info('Condition after query: '+task.getConditionQuery());// Info: Condition before query: (state=7)^OR(priority<3)// Info: Condition after query: Use this method to return the displayed value of the record parameter. Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 16,
        "heading": "getConditionQuery()​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/16"
      }
    },
    {
      "text": "Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()constcurrent=newSimpleRecord('task');current.get('163663310116371174');ss.info(current.getDisplayValue('caller'));ss.info(current.getValue('caller'));// Info: John Doe// Info: 155931135900000001 Use this method to get an error message in case of failure of a record creating, updating or deleting. Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method. Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Use this method to return the displayed value of the record parameter. With no parameter specified, the method returns the display value of the record from the field with theDisplay by refcheckbox selected. Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the field types inthe table. Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "For example, for the Reference field the record name is returned, not the ID. (record id: )\",... Use this method to get the field title. If the field is of the Reference or List types, the method returns its ID value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 17,
        "heading": "getDisplayValue(property)​",
        "chunk_index": 29,
        "source": "simplerecord-server-side_0b2f7b6f4678/17"
      }
    },
    {
      "text": "Return: Example: getErrors()constrecord=newSimpleRecord('user');constinsertedRecordId=record.insert();if(insertedRecordId==0){ss.info(record.getErrors());}// Info: [\"The \\\"\\\"Login\\\" [username]\\\" field is mandatory. Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "(record id: )\",... Use this method to get the field title. Instead, use thegetTitle()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Use this method to get an error message in case of failure of a record creating, updating or deleting. If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Use this method to control the execution of an operation with a record in a script.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "warningIt is highly recommended to use this method as some validation errors may not be displayed within the debug process.For example, errors in the condition queries passed using theaddEncodedQuery(condition)or similar methods can be retrieved by callinggetErrors.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 26,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 27,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 18,
        "heading": "getErrors()​",
        "chunk_index": 28,
        "source": "simplerecord-server-side_0b2f7b6f4678/18"
      }
    },
    {
      "text": "Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getLabel()constcurrent=ss.getUser();constfieldLabel=current.getLabel('username');ss.addErrorMessage('Field'+fieldLabel+'cannot be blank');// Field \"Login\" cannot be blank Use this method to retrieve the ID of the RE model related to the current record. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Use this method to get the field title. Instead, use thegetTitle()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 19,
        "heading": "getLabel(property)​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/19"
      }
    },
    {
      "text": "Use this method to retrieve the ID of the RE model related to the current record. To set a new model ID use thesetReModelIdmethod. To get the model ID, use thegetReModelIdmethod. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Return: Example: getReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){if(current.getReModelId()){constmodel=newSimpleRecord('sys_rmc_model');model.get(current.getReModelId());// current modelcurrent.$$service=model.getValue('cmdb_service_id');// pass service if field exists}})(current,previous); Use this method to get the number of the items in a selection. Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 20,
        "heading": "getReModelId()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/20"
      }
    },
    {
      "text": "Return: Example: getRowCount()consttask=newSimpleRecord('task');task.query();ss.addInfoMessage('All Tasks Count: '+task.getRowCount());// All Tasks Count: 2 Use this method to get the name of the current table. Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Use this method to get the number of the items in a selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 21,
        "heading": "getRowCount()​",
        "chunk_index": 25,
        "source": "simplerecord-server-side_0b2f7b6f4678/21"
      }
    },
    {
      "text": "Use this method to get the name of the current table. Return: Example: getTableName()constcurrent=ss.getUser();ss.info('/list/'+current.getTableName()+'/'+current.sys_id);// Info: /list/user/155931135900000001 Use this method to get the title of the defined RE attribute. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 22,
        "heading": "getTableName()​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/22"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Use this method to get the title of the defined RE attribute. Parameter(s): Return: Example: getTitle()constcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completedconstcurrent=newSimpleRecord('task');current.get('163638951512716126');if(current.sys_id){ss.info(current.rem_attr.getTitle('reviewed'));}// Info: Review completed noteTo return the columns, the titles of which are not a part of REM, use thegetLabel()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 23,
        "heading": "getTitle(attribute)​",
        "chunk_index": 24,
        "source": "simplerecord-server-side_0b2f7b6f4678/23"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcurrent=ss.getUser();constuser=newSimpleRecord('user');user.addQuery('timezone_id',current.getValue('timezone_id'));user.selectAttributes('sys_id');user.query();ss.info(user.getRowCount()+' users have the same timezone as you');// Info: 24 users have the same timezone as you noteYou can also directly interact with the value of a reference field using the context processing with the '$$' operator. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "If the field is of the Reference or List types, the method returns its ID value. To get the model ID, use thegetReModelIdmethod.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "It allows you to check for additional fields and get their values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "cautionUse this method to get values of theReferencetype fields instead ofdot-walking.For example, use thecurrent.getValue('reference_field')structure instead of thecurrent.reference_field.sys_idone.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 19,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 20,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 21,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Use this method to return the value of the specified object attribute.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 22,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Find the values represented in the server scripts according to the other field types inthe table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 24,
        "heading": "getValue(property)​",
        "chunk_index": 23,
        "source": "simplerecord-server-side_0b2f7b6f4678/24"
      }
    },
    {
      "text": "Return: Example: hasAttachment()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){ss.addErrorMessage('File should be attached');return;}current.state='2';// Opencurrent.update(); Use this method to populate all available fields with their predefined default values. Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Use this method to check whether the specified record has an attachment or not.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 25,
        "heading": "hasAttachment()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/25"
      }
    },
    {
      "text": "Return: Example: initialize()consttaskRecord=newSimpleRecord('task');ss.info(taskRecord.getAttributes().caller);taskRecord.initialize();ss.info(taskRecord.getAttributes().caller);// Info:// Info: 155931135900000001 Use this method to create a new record with the field values of an object. Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Use this method to populate all available fields with their predefined default values.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "This method is applicable only for the new records that have never been saved. This method is called automatically when a record is created.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 26,
        "heading": "initialize()​",
        "chunk_index": 18,
        "source": "simplerecord-server-side_0b2f7b6f4678/26"
      }
    },
    {
      "text": "Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Return: Example: insert()constnewTask=newSimpleRecord('task');newTask.subject='Subtask';constinsertedTaskID=newTask.insert();ss.info(`/record/task/${insertedTaskID}`);// Info: /record/task/163675231910113745 Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table. Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "If a record is not created, method returns '0' (zero) and generates an error message, which you can get with thegetErrors()method. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Use this method to create a new record with the field values of an object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 27,
        "heading": "insert()​",
        "chunk_index": 17,
        "source": "simplerecord-server-side_0b2f7b6f4678/27"
      }
    },
    {
      "text": "Return: Example: isTableVcsEnabled()constcurrent=newSimpleRecord('user');ss.info(current.isTableVcsEnabled());// Info: false Use this method to verify whether the current record meets the specified condition. Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Use this method to verify whether theIs VCS enabledcheckbox is selected in the specified table.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 28,
        "heading": "isTableVcsEnabled()​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: matchesCondition()consttask=newSimpleRecord('task');task.description='emaio';ss.info(task.matchesCondition('descriptionLIKEemail'));// falsetask.description='email';ss.info(task.matchesCondition('descriptionLIKEemail'));// true Use this method to get the next record in the query. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object. Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Use this method to verify whether the current record meets the specified condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 29,
        "heading": "matchesCondition(condition)​",
        "chunk_index": 16,
        "source": "simplerecord-server-side_0b2f7b6f4678/29"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Return: Example: next()constuser=newSimpleRecord('user');user.setLimit(1);user.query();user.next();ss.info(user.sys_id);// Info: 100000000000000000 Use this method to sort the records in the ascending order. Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Use this method to get the next record in the query.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 30,
        "heading": "next()​",
        "chunk_index": 15,
        "source": "simplerecord-server-side_0b2f7b6f4678/30"
      }
    },
    {
      "text": "Use this method to sort the records in the ascending order. tipCall this method several times to order by multiple columns. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constfirstLog=newSimpleRecord('sys_log');firstLog.orderBy('sys_created_at');// oldest record firstfirstLog.addQuery('message','like','Connection');firstLog.setLimit(1);firstLog.selectAttributes(['message','sys_created_at']);firstLog.query();firstLog.next();ss.info(firstLog.sys_created_at+' - '+firstLog.message);// Info: 2021-06-03 06:34:02 - IMAP IMAP (Default): Connection error: ... Use this method to sort the records in the descending order. Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 31,
        "heading": "orderBy(column)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/31"
      }
    },
    {
      "text": "Use this method to sort the records in the descending order. tipCall this method several times to order by multiple columns.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderByDesc()constlastComment=newSimpleRecord('sys_activities_stream_field');lastComment.orderByDesc('sys_created_at');// newest record firstlastComment.setLimit(1);lastComment.selectAttributes(['value','sys_created_by']);lastComment.query();lastComment.next();ss.info(lastComment.sys_created_by.display_name+': '+lastComment.value);// Info: John Doe: Test comment Use this method to apply a query to retrieve a selection from a database. Return: Example: query()consttasks=newSimpleRecord('task');tasks.addQuery('sys_created_at','>','2020-01-01');tasks.orderBy('sys_created_at');tasks.setLimit(2);tasks.query();while(tasks.next()){ss.info('Task number: '+tasks.number);}// Info: Task number: TSK0000001// Info: Task number: TSK0000003 Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 13,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 32,
        "heading": "orderByDesc(column)​",
        "chunk_index": 14,
        "source": "simplerecord-server-side_0b2f7b6f4678/32"
      }
    },
    {
      "text": "Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Use this method to apply a query to retrieve a selection from a database. The selection will be stored in the object for which this method was called.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 33,
        "heading": "query()​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/33"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "cautionWhen using theselectAttributes()andmatchCondition()methods at the same time, ensure that all attributes listed in thematchesCondition()are also specified in theselectAttributes()method. Otherwise, thematchesCondition()method returnsfalse. The number of attributes specified in theselectAttributes()method is not limited to the attributes from thematchCondition()method.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Return: Examples: selectAttributes (String)constrecord=newSimpleRecord('user');record.selectAttributes('email');record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"sys_id\":\"162423321917274937\"} selectAttributes (Array)constrecord=newSimpleRecord('user');record.selectAttributes(['email','username']);record.query();record.next();ss.info(record.getAttributes());// Info: {\"email\":\"john.doe@email.com\",\"username\":\"john.doe\",\"sys_id\":\"162423321917274937\"} Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Parameter(s): Pass a single attribute name as a string. If you need to pass more than one attribute names, use theArraytype as shown in code example below.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Otherwise the system throws an exception:You cannot update the record with the set of shortened attributes.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 9,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "warningDo not use this method to select records that can be updated or deleted after the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 10,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 11,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Use this method to optimize the database queries, especially when it is necessary to get only several object fields, not the whole object.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 34,
        "heading": "selectAttributes(attributes)​",
        "chunk_index": 12,
        "source": "simplerecord-server-side_0b2f7b6f4678/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setAbortAction()constcurrent=newSimpleRecord('task');current.get('163663310116371174');consthasAttach=current.hasAttachment();if(!hasAttach){current.setAbortAction(true,'No attachments');}current.state='2';// Opencurrent.update(); Use this method to limit the number of the records in a selection done according to a condition. Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "cautionNote that the script is not executed if it is written after calling this method in the script body.It is not recommended to use this method with theasyncbusiness rulesas it may cause unpredictable system behavior.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "To do so, in themessageparameter, enter asource messageof theappcategory as the value.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "Use this method to interrupt the current operation and display an error toast message in the lower right corner of the user's screen.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 6,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 7,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 35,
        "heading": "setAbortAction(flag, message)​",
        "chunk_index": 8,
        "source": "simplerecord-server-side_0b2f7b6f4678/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('user');record.setLimit(3);record.query();ss.info(record.getRowCount());// Info: 3 Use this method to set the field values for each record in the current selection. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 36,
        "heading": "setLimit(maxNumRecords)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 36,
        "heading": "setLimit(maxNumRecords)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/36"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 36,
        "heading": "setLimit(maxNumRecords)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/36"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 36,
        "heading": "setLimit(maxNumRecords)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/36"
      }
    },
    {
      "text": "Use this method to limit the number of the records in a selection done according to a condition.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 36,
        "heading": "setLimit(maxNumRecords)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/36"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 36,
        "heading": "setLimit(maxNumRecords)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMultipleValue()consttask=newSimpleRecord('task');task.addQuery('state','7');// Drafttask.query();ss.info(task.getRowCount());task.setMultipleValue('state','2');// Open// task.updateMultiple(); Use this method to specify the ID of a particular RE model. Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 37,
        "heading": "setMultipleValue(property,value)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/37"
      }
    },
    {
      "text": "(record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 37,
        "heading": "setMultipleValue(property,value)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/37"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 37,
        "heading": "setMultipleValue(property,value)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/37"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 37,
        "heading": "setMultipleValue(property,value)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/37"
      }
    },
    {
      "text": "Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 37,
        "heading": "setMultipleValue(property,value)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/37"
      }
    },
    {
      "text": "Use this method to set the field values for each record in the current selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 37,
        "heading": "setMultipleValue(property,value)​",
        "chunk_index": 5,
        "source": "simplerecord-server-side_0b2f7b6f4678/37"
      }
    },
    {
      "text": "Use this method to specify the ID of a particular RE model. To get the model ID, use thegetReModelIdmethod. Parameter(s): If thereModelIdparameter is set to null, the REM related to the record is detached.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 38,
        "heading": "setReModelId(reModelId)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/38"
      }
    },
    {
      "text": "Return: Example: getReModelId()consttask=newSimpleRecord('task');task.get('163352033916904699');if(task.getValue('service')==='164069027812962298'){// Email Server Servicetask.setReModelId('158569205818704980');// Email Server Access Request}else{task.setReModelId(null);}task.update(); cautionWhen you call the method on aSimpleRecordinstance, the values of its attributes bound to the previous model are reset.After calling the method and updating the current record, the attribute values bound to the previous model will be lost. Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 38,
        "heading": "setReModelId(reModelId)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/38"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 38,
        "heading": "setReModelId(reModelId)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/38"
      }
    },
    {
      "text": "Example: setReModelId()(functionexecuteRule(current,previous=null/*not null only when action is update*/){// before rule triggered by service changess.importIncludeScript('getRemAttributes');constrmc=newSimpleRecord('sys_rmc_model');rmc.addQuery('cmdb_service_id',current.getValue('service'));rmc.addQuery('active',true);rmc.selectAttributes('sys_id');rmc.setLimit(1);rmc.query();if(rmc.next()){constpreviousModelAttributes=getRemAttributes(current);current.setReModelId(rmc.sys_id);constcurrentModelAttributes=getRemAttributes(current);Object.keys(previousModelAttributes).forEach(attributeName=>{if(currentModelAttributes.hasOwnProperty(attributeName)){current.rem_attr[attributeName]=previousModelAttributes[attributeName];}})}else{current.setReModelId(null);}})(current,previous); Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 38,
        "heading": "setReModelId(reModelId)​",
        "chunk_index": 3,
        "source": "simplerecord-server-side_0b2f7b6f4678/38"
      }
    },
    {
      "text": "(record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 38,
        "heading": "setReModelId(reModelId)​",
        "chunk_index": 4,
        "source": "simplerecord-server-side_0b2f7b6f4678/38"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()consttask=newSimpleRecord('task');task.setValue('subject','mail');task.insert(); Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 39,
        "heading": "setValue(property, value)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/39"
      }
    },
    {
      "text": "noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 39,
        "heading": "setValue(property, value)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/39"
      }
    },
    {
      "text": "Use this method to set a field value of the current record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 39,
        "heading": "setValue(property, value)​",
        "chunk_index": 2,
        "source": "simplerecord-server-side_0b2f7b6f4678/39"
      }
    },
    {
      "text": "Parameter(s): Return: Example: silentMode()consttask=newSimpleRecord('task');task.addQuery('active',false);task.addQuery('approval_state','isempty');task.query();ss.info(task.getRowCount());task.silentMode();task.setMultipleValue('approval_state','not_requested');// set Default value //task.updateMultiple(); Use this method to update a record in the database. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 40,
        "heading": "silentMode(enable)​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/40"
      }
    },
    {
      "text": "Use this method to update a record without executing related business logic that is implemented with the business rules, notifications, workflows and others. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record.",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 40,
        "heading": "silentMode(enable)​",
        "chunk_index": 1,
        "source": "simplerecord-server-side_0b2f7b6f4678/40"
      }
    },
    {
      "text": "Use this method to update a record in the database. noteUse this method for existing records.If the record exists, the changes are applied.If the record does not exist, thegetErrors()method will return the error: \"Unable to update new record. Useinsert()instead. (record id: )\" Return: Example: update()constcurrent=newSimpleRecord('user');current.get(ss.getUserId());current.timezone_id='156076775207670452';// UTCss.info(current.update());ss.info(current.getErrors());// Info: 155931135900000001// Info: [] Use this method to update all the records in the selection. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 41,
        "heading": "update()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/41"
      }
    },
    {
      "text": "Use this method to update all the records in the selection. Return: Example: updateMultiple()consttask=newSimpleRecord('task');task.addQuery('state','0');// Opentask.query();ss.info(task.getRowCount());task.setMultipleValue('state','10');// Canceledtask.updateMultiple();",
      "metadata": {
        "doc_id": "simplerecord-server-side_0b2f7b6f4678",
        "title": "SimpleRecord Server-Side",
        "section_id": 42,
        "heading": "updateMultiple()​",
        "chunk_index": 0,
        "source": "simplerecord-server-side_0b2f7b6f4678/42"
      }
    },
    {
      "text": "In this case, the name of the POST request parameter should look like an array of elements. The script uses example data for thesetRequestUrl(requestUrl)method and thepayloadconstant. To get a request URL, use thegetRequestUrl()method. To get the method name, use thegetRequestMethod()method. To get the request body, use the GET method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "For example, if there is one file, the parameter can be calledfiles. If there are two files, they should be calledfiles[1]andfiles[2].",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "To create a SimpleRestRequest object, use thesws.restRequestV1method as described below. Return: Example: Creating a SimpleRestRequest object/* Create a 'Telegram' request in the REST Requests (sys_rest_requests) tableand the 'Send Message' method in the REST Request Methods (sys_rest_request_method) table related with the 'Telegram' request.Also create the 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related with the 'Send Message' method*/constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute();// ORconstrequest=sws.restRequestV1();request.setRequestUrl('https://api.telegram.org/bot1860462740:AAHyP6BMH2Mh-cXezrTVu2sJUoNYvimMRMQ/sendMessage');request.setQueryParameter('chat_id','123456789');request.setQueryParameter('text','telegram');constresponse=request.execute(); Use the method to prepare a file in binary format for sending it in a request. Return: Example: execute()constrequest=sws.restRequestV1();request.setRequestUrl(`https://jsonplaceholder.typicode.com/todos/1`);request.setRequestMethod('GET');constresponse=request.execute(); Use this method to set a user name and password to authorize on a web service if the resource requires the basic authorization. Parameter(s): Return: Example: setBasicAuth()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('admin','password');request.setRequestHeader('Content-type','application/json');request.setRequestBody(JSON.stringify(scriptJSON));constresponse=request.execute();ss.info(response.getBody());// Info: {\"messages\":[],\"status\":\"OK\",\"data\":{\"result\":null,\"info\":\"Info: 20... Auth methodconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/auth/login');request.setRequestMethod('POST');request.setRequestHeader('Content-type','application/json');constpayload={'username':'admin','password':'qwerty123456'}request.setRequestBody(JSON.stringify(payload));constresponse=request.execute();ss.info(JSON.parse(response.getBody()).data.auth_key);// Info: 5WvOT9Ejlxd6Gb8bkCWMtG3XXMYcoDDJ Use this method to set the request URL.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');ss.info(request.getRequestUrl());// Info: https://instance.example.com/v1/ajax-script/run Use the method to set the request method (GET, POST, PURGE, and others). Parameter(s): Return: Example: setRequestMethod()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');ss.info(request.getRequestUrl());ss.info(request.getRequestMethod());// Info: https://instance.example.com/v1/ajax-script/run// Info: POST Use the method to set the response timeout of the request in seconds. Parameter(s): Return: Example: setRequestTimeout()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('GET');request.setRequestTimeout(60);constresponse=request.execute(); Use this method to add a parameter generated as \"name=value\" to the end of the request URL. Parameter(s): Return: Example: setQueryParameter()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/rest/v1/table/user');request.setRequestMethod('GET');request.setRequestHeader('Authorization','Bearer '+newSimpleUser().getAccessToken());request.setQueryParameter('sysparm_query','active=true^emailLIKEyours^ORDERBYDESCcompany');consturl=request.getRequestUrl();ss.info(url);// Info: https://instance.example.com/rest/v1/table/user?sysparm_query=active%3Dtrue%5EemailLIKEyours%5EORDERBYDESCcompany Use this method to set the request body when using the PUT or POST methods. Parameter(s): Return: Example: setRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));constresponse=request.execute(); Use the method to set the request variable with a name specified in thenameparameter into thevalueparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setStringParameter()/* Create the 'Telegram' request in the **REST Requests** (**sys_rest_requests**) tableand the 'Send Message' method in the **REST Request Methods** (**sys_rest_request_method**) table related with the 'Telegram' request.Also create the 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related with the 'Send Message' method*/constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute(); Use the method to set the HTTP header in the request with the value specified. Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 5,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 6,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 7,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "You must specify the URLs with thehttporhttpsprotocols. You must specify the URLs with thehttporhttpsprotocols. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 8,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Parameter(s): noteProvide values for parameters as shown below:ParameterValuerequestNameSpecify the value of theNamefield taken from the record in theREST Requests(sys_rest_requests) table.methodNameSpecify the value of theNamefield taken from the record in theREST Request Methods(sys_rest_request_method) table related with this request.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 9,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "The script example below shows how to retrieve the authorization token with a user login and password.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 10,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Return: Examples: Adding two filesconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example1.com/some/service');//the URL from which the files are downloadedconstdownloadResponse=request.execute();request.setRequestUrl('https://instance.example2.com/v1/attachments/upload/task/165469349718887155');// the URL where to upload filesrequest.addFileContent(downloadResponse.getContentBase64(),'files[1]','file.png');request.addFileContent(downloadResponse.getContentBase64(),'files[2]','file2.png');constuploadResponse=request.execute(); Adding one fileconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example1.com/some/service');//the URL from which the file is downloadedconstdownloadResponse=request.execute();request.setRequestUrl('https://instance.example2.com/v1/attachments/upload/task/165469349718887155');// the URL where to upload filesrequest.addFileContent(downloadResponse.getContentBase64(),'files','file.mp3');constuploadResponse=request.execute(); Use the method to end the REST request.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 11,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Replace it with the real data before use this script example.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 12,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "Parameter(s): noteIt is possible to add several files to one request.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 1,
        "heading": "SimpleRestRequest object​",
        "chunk_index": 13,
        "source": "simplerestrequest_035a011af253/1"
      }
    },
    {
      "text": "In this case, the name of the POST request parameter should look like an array of elements. The script uses example data for thesetRequestUrl(requestUrl)method and thepayloadconstant. To get a request URL, use thegetRequestUrl()method. To get the method name, use thegetRequestMethod()method. To get the request body, use the GET method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "For example, if there is one file, the parameter can be calledfiles. If there are two files, they should be calledfiles[1]andfiles[2].",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "You must specify the URLs with thehttporhttpsprotocols. You must specify the URLs with thehttporhttpsprotocols. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Return: Example: execute()constrequest=sws.restRequestV1();request.setRequestUrl(`https://jsonplaceholder.typicode.com/todos/1`);request.setRequestMethod('GET');constresponse=request.execute(); Use this method to set a user name and password to authorize on a web service if the resource requires the basic authorization. Parameter(s): Return: Example: setBasicAuth()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('admin','password');request.setRequestHeader('Content-type','application/json');request.setRequestBody(JSON.stringify(scriptJSON));constresponse=request.execute();ss.info(response.getBody());// Info: {\"messages\":[],\"status\":\"OK\",\"data\":{\"result\":null,\"info\":\"Info: 20... Auth methodconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/auth/login');request.setRequestMethod('POST');request.setRequestHeader('Content-type','application/json');constpayload={'username':'admin','password':'qwerty123456'}request.setRequestBody(JSON.stringify(payload));constresponse=request.execute();ss.info(JSON.parse(response.getBody()).data.auth_key);// Info: 5WvOT9Ejlxd6Gb8bkCWMtG3XXMYcoDDJ Use this method to set the request URL. Parameter(s): Return: Example: setRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');ss.info(request.getRequestUrl());// Info: https://instance.example.com/v1/ajax-script/run Use the method to set the request method (GET, POST, PURGE, and others). Parameter(s): Return: Example: setRequestMethod()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');ss.info(request.getRequestUrl());ss.info(request.getRequestMethod());// Info: https://instance.example.com/v1/ajax-script/run// Info: POST Use the method to set the response timeout of the request in seconds.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 5,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 6,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Use the method to prepare a file in binary format for sending it in a request.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 7,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Replace it with the real data before use this script example.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 8,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Return: Examples: Adding two filesconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example1.com/some/service');//the URL from which the files are downloadedconstdownloadResponse=request.execute();request.setRequestUrl('https://instance.example2.com/v1/attachments/upload/task/165469349718887155');// the URL where to upload filesrequest.addFileContent(downloadResponse.getContentBase64(),'files[1]','file.png');request.addFileContent(downloadResponse.getContentBase64(),'files[2]','file2.png');constuploadResponse=request.execute(); Adding one fileconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example1.com/some/service');//the URL from which the file is downloadedconstdownloadResponse=request.execute();request.setRequestUrl('https://instance.example2.com/v1/attachments/upload/task/165469349718887155');// the URL where to upload filesrequest.addFileContent(downloadResponse.getContentBase64(),'files','file.mp3');constuploadResponse=request.execute(); Use the method to end the REST request.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 9,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "The script example below shows how to retrieve the authorization token with a user login and password.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 10,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Parameter(s): noteIt is possible to add several files to one request.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 2,
        "heading": "addFileContent(content, paramName, fileName)​",
        "chunk_index": 11,
        "source": "simplerestrequest_035a011af253/2"
      }
    },
    {
      "text": "Use the method to end the REST request. The script uses example data for thesetRequestUrl(requestUrl)method and thepayloadconstant. To get a request URL, use thegetRequestUrl()method. To get the method name, use thegetRequestMethod()method. To get the request body, use the GET method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "You must specify the URLs with thehttporhttpsprotocols. You must specify the URLs with thehttporhttpsprotocols. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "Return: Example: execute()constrequest=sws.restRequestV1();request.setRequestUrl(`https://jsonplaceholder.typicode.com/todos/1`);request.setRequestMethod('GET');constresponse=request.execute(); Use this method to set a user name and password to authorize on a web service if the resource requires the basic authorization. Parameter(s): Return: Example: setBasicAuth()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('admin','password');request.setRequestHeader('Content-type','application/json');request.setRequestBody(JSON.stringify(scriptJSON));constresponse=request.execute();ss.info(response.getBody());// Info: {\"messages\":[],\"status\":\"OK\",\"data\":{\"result\":null,\"info\":\"Info: 20... Auth methodconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/auth/login');request.setRequestMethod('POST');request.setRequestHeader('Content-type','application/json');constpayload={'username':'admin','password':'qwerty123456'}request.setRequestBody(JSON.stringify(payload));constresponse=request.execute();ss.info(JSON.parse(response.getBody()).data.auth_key);// Info: 5WvOT9Ejlxd6Gb8bkCWMtG3XXMYcoDDJ Use this method to set the request URL. Parameter(s): Return: Example: setRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');ss.info(request.getRequestUrl());// Info: https://instance.example.com/v1/ajax-script/run Use the method to set the request method (GET, POST, PURGE, and others). Parameter(s): Return: Example: setRequestMethod()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');ss.info(request.getRequestUrl());ss.info(request.getRequestMethod());// Info: https://instance.example.com/v1/ajax-script/run// Info: POST Use the method to set the response timeout of the request in seconds.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "The script example below shows how to retrieve the authorization token with a user login and password.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 5,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "Replace it with the real data before use this script example.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 6,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 3,
        "heading": "execute()​",
        "chunk_index": 7,
        "source": "simplerestrequest_035a011af253/3"
      }
    },
    {
      "text": "You must specify the URLs with thehttporhttpsprotocols. cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "The script uses example data for thesetRequestUrl(requestUrl)method and thepayloadconstant. To get a request URL, use thegetRequestUrl()method. To get the method name, use thegetRequestMethod()method. To get the request body, use the GET method. To get request headers, use thegetRequestHeaders()method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setBasicAuth()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('admin','password');request.setRequestHeader('Content-type','application/json');request.setRequestBody(JSON.stringify(scriptJSON));constresponse=request.execute();ss.info(response.getBody());// Info: {\"messages\":[],\"status\":\"OK\",\"data\":{\"result\":null,\"info\":\"Info: 20... Auth methodconstrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/auth/login');request.setRequestMethod('POST');request.setRequestHeader('Content-type','application/json');constpayload={'username':'admin','password':'qwerty123456'}request.setRequestBody(JSON.stringify(payload));constresponse=request.execute();ss.info(JSON.parse(response.getBody()).data.auth_key);// Info: 5WvOT9Ejlxd6Gb8bkCWMtG3XXMYcoDDJ Use this method to set the request URL. Parameter(s): Return: Example: setRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');ss.info(request.getRequestUrl());// Info: https://instance.example.com/v1/ajax-script/run Use the method to set the request method (GET, POST, PURGE, and others). Parameter(s): Return: Example: setRequestMethod()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');ss.info(request.getRequestUrl());ss.info(request.getRequestMethod());// Info: https://instance.example.com/v1/ajax-script/run// Info: POST Use the method to set the response timeout of the request in seconds. Parameter(s): Return: Example: setRequestTimeout()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('GET');request.setRequestTimeout(60);constresponse=request.execute(); Use this method to add a parameter generated as \"name=value\" to the end of the request URL.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setQueryParameter()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/rest/v1/table/user');request.setRequestMethod('GET');request.setRequestHeader('Authorization','Bearer '+newSimpleUser().getAccessToken());request.setQueryParameter('sysparm_query','active=true^emailLIKEyours^ORDERBYDESCcompany');consturl=request.getRequestUrl();ss.info(url);// Info: https://instance.example.com/rest/v1/table/user?sysparm_query=active%3Dtrue%5EemailLIKEyours%5EORDERBYDESCcompany Use this method to set the request body when using the PUT or POST methods. Parameter(s): Return: Example: setRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));constresponse=request.execute(); Use the method to set the request variable with a name specified in thenameparameter into thevalueparameter. Parameter(s): Return: Example: setStringParameter()/* Create the 'Telegram' request in the **REST Requests** (**sys_rest_requests**) tableand the 'Send Message' method in the **REST Request Methods** (**sys_rest_request_method**) table related with the 'Telegram' request.Also create the 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related with the 'Send Message' method*/constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute(); Use the method to set the HTTP header in the request with the value specified. Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 5,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "Replace it with the real data before use this script example.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 6,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "The script example below shows how to retrieve the authorization token with a user login and password.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 7,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "Use this method to set a user name and password to authorize on a web service if the resource requires the basic authorization.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 4,
        "heading": "setBasicAuth(userName, userPassword)​",
        "chunk_index": 8,
        "source": "simplerestrequest_035a011af253/4"
      }
    },
    {
      "text": "You must specify the URLs with thehttporhttpsprotocols. cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "Specify the method name within themethodNameparameter. To get the method name, use thegetRequestMethod()method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');ss.info(request.getRequestUrl());// Info: https://instance.example.com/v1/ajax-script/run Use the method to set the request method (GET, POST, PURGE, and others). Parameter(s): Return: Example: setRequestMethod()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');ss.info(request.getRequestUrl());ss.info(request.getRequestMethod());// Info: https://instance.example.com/v1/ajax-script/run// Info: POST Use the method to set the response timeout of the request in seconds. Parameter(s): Return: Example: setRequestTimeout()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('GET');request.setRequestTimeout(60);constresponse=request.execute(); Use this method to add a parameter generated as \"name=value\" to the end of the request URL. Parameter(s): Return: Example: setQueryParameter()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/rest/v1/table/user');request.setRequestMethod('GET');request.setRequestHeader('Authorization','Bearer '+newSimpleUser().getAccessToken());request.setQueryParameter('sysparm_query','active=true^emailLIKEyours^ORDERBYDESCcompany');consturl=request.getRequestUrl();ss.info(url);// Info: https://instance.example.com/rest/v1/table/user?sysparm_query=active%3Dtrue%5EemailLIKEyours%5EORDERBYDESCcompany Use this method to set the request body when using the PUT or POST methods. Parameter(s): Return: Example: setRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));constresponse=request.execute(); Use the method to set the request variable with a name specified in thenameparameter into thevalueparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setStringParameter()/* Create the 'Telegram' request in the **REST Requests** (**sys_rest_requests**) tableand the 'Send Message' method in the **REST Request Methods** (**sys_rest_request_method**) table related with the 'Telegram' request.Also create the 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related with the 'Send Message' method*/constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute(); Use the method to set the HTTP header in the request with the value specified. Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "Use this method to set the request URL. To get a request URL, use thegetRequestUrl()method. To get the request body, use the GET method. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 5,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 5,
        "heading": "setRequestUrl(requestUrl)​",
        "chunk_index": 6,
        "source": "simplerestrequest_035a011af253/5"
      }
    },
    {
      "text": "Specify the method name within themethodNameparameter. To get the method name, use thegetRequestMethod()method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 6,
        "heading": "setRequestMethod(methodName)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 6,
        "heading": "setRequestMethod(methodName)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 6,
        "heading": "setRequestMethod(methodName)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/6"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 6,
        "heading": "setRequestMethod(methodName)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/6"
      }
    },
    {
      "text": "Use the method to set the request method (GET, POST, PURGE, and others). To get the request body, use the GET method. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 6,
        "heading": "setRequestMethod(methodName)​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/6"
      }
    },
    {
      "text": "To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 6,
        "heading": "setRequestMethod(methodName)​",
        "chunk_index": 5,
        "source": "simplerestrequest_035a011af253/6"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 7,
        "heading": "setRequestTimeout(timeout)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/7"
      }
    },
    {
      "text": "Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 7,
        "heading": "setRequestTimeout(timeout)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/7"
      }
    },
    {
      "text": "Use the method to set the response timeout of the request in seconds.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 7,
        "heading": "setRequestTimeout(timeout)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/7"
      }
    },
    {
      "text": "To get the request body, use the GET method. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 7,
        "heading": "setRequestTimeout(timeout)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/7"
      }
    },
    {
      "text": "Use this method to add a parameter generated as \"name=value\" to the end of the request URL. To get the request body, use the GET method. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 8,
        "heading": "setQueryParameter(name, value)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/8"
      }
    },
    {
      "text": "To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 8,
        "heading": "setQueryParameter(name, value)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/8"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 8,
        "heading": "setQueryParameter(name, value)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setQueryParameter()constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/rest/v1/table/user');request.setRequestMethod('GET');request.setRequestHeader('Authorization','Bearer '+newSimpleUser().getAccessToken());request.setQueryParameter('sysparm_query','active=true^emailLIKEyours^ORDERBYDESCcompany');consturl=request.getRequestUrl();ss.info(url);// Info: https://instance.example.com/rest/v1/table/user?sysparm_query=active%3Dtrue%5EemailLIKEyours%5EORDERBYDESCcompany Use this method to set the request body when using the PUT or POST methods. Parameter(s): Return: Example: setRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));constresponse=request.execute(); Use the method to set the request variable with a name specified in thenameparameter into thevalueparameter. Parameter(s): Return: Example: setStringParameter()/* Create the 'Telegram' request in the **REST Requests** (**sys_rest_requests**) tableand the 'Send Message' method in the **REST Request Methods** (**sys_rest_request_method**) table related with the 'Telegram' request.Also create the 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related with the 'Send Message' method*/constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute(); Use the method to set the HTTP header in the request with the value specified. Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 8,
        "heading": "setQueryParameter(name, value)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/8"
      }
    },
    {
      "text": "Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 8,
        "heading": "setQueryParameter(name, value)​",
        "chunk_index": 4,
        "source": "simplerestrequest_035a011af253/8"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 9,
        "heading": "setRequestBody(body)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/9"
      }
    },
    {
      "text": "Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 9,
        "heading": "setRequestBody(body)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/9"
      }
    },
    {
      "text": "Use this method to set the request body when using the PUT or POST methods. To get the request body, use the GET method. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 9,
        "heading": "setRequestBody(body)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/9"
      }
    },
    {
      "text": "To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 9,
        "heading": "setRequestBody(body)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/9"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 10,
        "heading": "setStringParameter(name, value)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/10"
      }
    },
    {
      "text": "Use the method to set the request variable with a name specified in thenameparameter into thevalueparameter. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 10,
        "heading": "setStringParameter(name, value)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setStringParameter()/* Create the 'Telegram' request in the **REST Requests** (**sys_rest_requests**) tableand the 'Send Message' method in the **REST Request Methods** (**sys_rest_request_method**) table related with the 'Telegram' request.Also create the 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related with the 'Send Message' method*/constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute(); Use the method to set the HTTP header in the request with the value specified. Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 10,
        "heading": "setStringParameter(name, value)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/10"
      }
    },
    {
      "text": "Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 10,
        "heading": "setStringParameter(name, value)​",
        "chunk_index": 3,
        "source": "simplerestrequest_035a011af253/10"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 11,
        "heading": "setRequestHeader(name, value)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setRequestHeader()constscriptJSON={'script':'ss.info(new SimpleDateTime().getValue())'}constrequest=sws.restRequestV1();request.setRequestUrl('https://instance.example.com/v1/ajax-script/run');request.setRequestMethod('POST');request.setBasicAuth('username','password');request.setRequestBody(JSON.stringify(scriptJSON));request.setRequestHeader('Content-type','application/json');constresponse=request.execute(); Use the method to return the request URL with parameters. Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 11,
        "heading": "setRequestHeader(name, value)​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/11"
      }
    },
    {
      "text": "Use the method to set the HTTP header in the request with the value specified. To get request headers, use thegetRequestHeaders()method. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 11,
        "heading": "setRequestHeader(name, value)​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/11"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 12,
        "heading": "getRequestUrl()​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/12"
      }
    },
    {
      "text": "Return: Example: getRequestUrl()constrequest=sws.restRequestV1();request.setRequestUrl(ss.getProperty('simple.instance.uri')+'/v1/ajax-script/run');consturl=request.getRequestUrl();ss.info(url);// Info: https://your-instance-url/v1/ajax-script/run Use the method to return the request body. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 12,
        "heading": "getRequestUrl()​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/12"
      }
    },
    {
      "text": "Use the method to return the request URL with parameters. To set a request URL, use thesetRequestUrl(requestUrl)method. To set a request body, use thesetRequestBody(body)method. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 12,
        "heading": "getRequestUrl()​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/12"
      }
    },
    {
      "text": "Use the method to return the request body. To set a request body, use thesetRequestBody(body)method. Return: Example: getRequestBody()constrecordURL=ss.getProperty('simple.instance.uri')+'/record/'+current.getTableName()+'/'+current.sys_id;constdataJSON={'text':`New Request has been assigned to DevOps Team <${recordURL}|View Request>`};constrequest=sws.restRequestV1('DevOps Team Request','send_message_to_channel');request.setRequestBody(JSON.stringify(dataJSON));request.execute();constbody=request.getRequestBody();ss.info(body);//Info: {\"text\":\"New Request has been assigned to DevOps Team <https://your-instance-url.simpleone.ru\\/record\\/task\\/161123123123123123|View Request>\"} Use the method to return all request headers. To set request headers, use thesetRequestHeader(name, value)method. Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 13,
        "heading": "getRequestBody()​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/13"
      }
    },
    {
      "text": "To set the request method, use thesetRequestMethod(methodName)method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 13,
        "heading": "getRequestBody()​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/13"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 13,
        "heading": "getRequestBody()​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/13"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 14,
        "heading": "getRequestHeaders()​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/14"
      }
    },
    {
      "text": "Use the method to return all request headers. To set request headers, use thesetRequestHeader(name, value)method. To set the request method, use thesetRequestMethod(methodName)method.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 14,
        "heading": "getRequestHeaders()​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/14"
      }
    },
    {
      "text": "Return: Example: getRequestHeaders()constrequest=sws.restRequestV1();request.setRequestHeader('Content-type','application/json');constheader=request.getRequestHeaders();ss.info(header);// Info: {\"content-type\":[\"application\\/json\"]} Use the method to return the request method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 14,
        "heading": "getRequestHeaders()​",
        "chunk_index": 2,
        "source": "simplerestrequest_035a011af253/14"
      }
    },
    {
      "text": "Use the method to return the request method. To set the request method, use thesetRequestMethod(methodName)method. Return: Example: getRequestMethod()constrequest=sws.restRequestV1();request.setRequestMethod('GET');constmethod=request.getRequestMethod();ss.info(method);//Info: GET Use the method to make use of the HTTP/2 protocol obligatory. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 15,
        "heading": "getRequestMethod()​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/15"
      }
    },
    {
      "text": "cautionUsing this method requires the host that also supports the HTTP/2 protocol.",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 15,
        "heading": "getRequestMethod()​",
        "chunk_index": 1,
        "source": "simplerestrequest_035a011af253/15"
      }
    },
    {
      "text": "Use the method to make use of the HTTP/2 protocol obligatory. cautionUsing this method requires the host that also supports the HTTP/2 protocol. Parameter(s): Return: Example: useHttp2()constrequest=sws.restRequestV1();request.setRequestUrl('https://http2.pro/api/v1');request.setRequestMethod('GET');request.useHttp2();constresponse=request.execute(); To disable the usage of HTTP/2, call the method passing thefalseparameter. useHttp2()request.useHttp2(false);",
      "metadata": {
        "doc_id": "simplerestrequest_035a011af253",
        "title": "SimpleRestRequest",
        "section_id": 16,
        "heading": "useHttp2(value)​",
        "chunk_index": 0,
        "source": "simplerestrequest_035a011af253/16"
      }
    },
    {
      "text": "Use this method to return a response body. Return: getBody()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getBody());//  Info: {//  \"userId\": 1,//  \"id\": 1,//  \"title\": \"delectus aut autem\",//  \"completed\": false//  } Use this method to return an array that contains the response headers. Return: getAllHeaders()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getAllHeaders());// Info: {\"http-code\":[\"200\"],\"date\":[\"Mon, 31... Use this method to return a base64 encoded content. Return: getContentBase64()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constURL_BASE=(simpleInstanceUri.startsWith('https://'))?simpleInstanceUri:`https://${simpleInstanceUri}`;constrequest=sws.restRequestV1();request.setRequestUrl('https://s3-home.simpleone.ru/public-attachment/4/9f/istzt33ycijsiym7rv7ax92yd76l2arr?response-content-disposition=inline%3B%20filename%3D%22spacer24.gif%22&response-content-type=image%2Fgif%3B');//the URL from which the file is downloadedconstdownloadResponse=request.execute();request.setRequestUrl(`${URL_BASE}/v1/attachments/upload/user/${ss.getUserId()}`);// the URL on which the file is uploadedrequest.setRequestHeader('Authorization',`Bearer${newSimpleUser().getAccessToken()}`);request.addFileContent(downloadResponse.getContentBase64(),'files','spacer24.gif');constuploadResponse=request.execute(); Use this method to return the HTTP status code of the performed request. Return: getStatusCode()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getStatusCode());// Info: 200 Use this method to check whether any error occurred during the REST transaction.",
      "metadata": {
        "doc_id": "simplerestresponse_83eb8f0ee8dd",
        "title": "SimpleRestResponse",
        "section_id": 1,
        "heading": "getBody()​",
        "chunk_index": 0,
        "source": "simplerestresponse_83eb8f0ee8dd/1"
      }
    },
    {
      "text": "Return: getAllHeaders()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getAllHeaders());// Info: {\"http-code\":[\"200\"],\"date\":[\"Mon, 31... Use this method to return a base64 encoded content. Return: getContentBase64()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constURL_BASE=(simpleInstanceUri.startsWith('https://'))?simpleInstanceUri:`https://${simpleInstanceUri}`;constrequest=sws.restRequestV1();request.setRequestUrl('https://s3-home.simpleone.ru/public-attachment/4/9f/istzt33ycijsiym7rv7ax92yd76l2arr?response-content-disposition=inline%3B%20filename%3D%22spacer24.gif%22&response-content-type=image%2Fgif%3B');//the URL from which the file is downloadedconstdownloadResponse=request.execute();request.setRequestUrl(`${URL_BASE}/v1/attachments/upload/user/${ss.getUserId()}`);// the URL on which the file is uploadedrequest.setRequestHeader('Authorization',`Bearer${newSimpleUser().getAccessToken()}`);request.addFileContent(downloadResponse.getContentBase64(),'files','spacer24.gif');constuploadResponse=request.execute(); Use this method to return the HTTP status code of the performed request. Return: getStatusCode()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getStatusCode());// Info: 200 Use this method to check whether any error occurred during the REST transaction. Return: haveError()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.haveError());// Info: false",
      "metadata": {
        "doc_id": "simplerestresponse_83eb8f0ee8dd",
        "title": "SimpleRestResponse",
        "section_id": 2,
        "heading": "getAllHeaders()​",
        "chunk_index": 0,
        "source": "simplerestresponse_83eb8f0ee8dd/2"
      }
    },
    {
      "text": "Use this method to return an array that contains the response headers.",
      "metadata": {
        "doc_id": "simplerestresponse_83eb8f0ee8dd",
        "title": "SimpleRestResponse",
        "section_id": 2,
        "heading": "getAllHeaders()​",
        "chunk_index": 1,
        "source": "simplerestresponse_83eb8f0ee8dd/2"
      }
    },
    {
      "text": "Use this method to return a base64 encoded content. Use it to get a file in binary format. Return: getContentBase64()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constURL_BASE=(simpleInstanceUri.startsWith('https://'))?simpleInstanceUri:`https://${simpleInstanceUri}`;constrequest=sws.restRequestV1();request.setRequestUrl('https://s3-home.simpleone.ru/public-attachment/4/9f/istzt33ycijsiym7rv7ax92yd76l2arr?response-content-disposition=inline%3B%20filename%3D%22spacer24.gif%22&response-content-type=image%2Fgif%3B');//the URL from which the file is downloadedconstdownloadResponse=request.execute();request.setRequestUrl(`${URL_BASE}/v1/attachments/upload/user/${ss.getUserId()}`);// the URL on which the file is uploadedrequest.setRequestHeader('Authorization',`Bearer${newSimpleUser().getAccessToken()}`);request.addFileContent(downloadResponse.getContentBase64(),'files','spacer24.gif');constuploadResponse=request.execute(); Use this method to return the HTTP status code of the performed request. Return: getStatusCode()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getStatusCode());// Info: 200 Use this method to check whether any error occurred during the REST transaction. Return: haveError()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.haveError());// Info: false",
      "metadata": {
        "doc_id": "simplerestresponse_83eb8f0ee8dd",
        "title": "SimpleRestResponse",
        "section_id": 3,
        "heading": "getContentBase64()​",
        "chunk_index": 0,
        "source": "simplerestresponse_83eb8f0ee8dd/3"
      }
    },
    {
      "text": "Use this method to return the HTTP status code of the performed request. Return: getStatusCode()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.getStatusCode());// Info: 200 Use this method to check whether any error occurred during the REST transaction. Return: haveError()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.haveError());// Info: false",
      "metadata": {
        "doc_id": "simplerestresponse_83eb8f0ee8dd",
        "title": "SimpleRestResponse",
        "section_id": 4,
        "heading": "getStatusCode()​",
        "chunk_index": 0,
        "source": "simplerestresponse_83eb8f0ee8dd/4"
      }
    },
    {
      "text": "Use this method to check whether any error occurred during the REST transaction. Return: haveError()constrequest=sws.restRequestV1();request.setRequestUrl('https://jsonplaceholder.typicode.com/todos/1');request.setRequestMethod('GET');constresponse=request.execute();ss.info(response.haveError());// Info: false",
      "metadata": {
        "doc_id": "simplerestresponse_83eb8f0ee8dd",
        "title": "SimpleRestResponse",
        "section_id": 5,
        "heading": "haveError()​",
        "chunk_index": 0,
        "source": "simplerestresponse_83eb8f0ee8dd/5"
      }
    },
    {
      "text": "Parameter(s): Example: SimpleScheduleconstschedule=newSimpleSchedule('157165292607666710','UTC'); Use this method to get the time difference between thestartDatetimeandendDatetimevalues, based on the schedule, its time zone or, if not specified, the time zone of the session. cautionThe value passed in thedatetimeparameter should be in the schedule. To verify that, use theisInSchedule(datetime)method. Parameter(s): Return: Example: duration()conststartDatetime=newSimpleDateTime('2022-01-25 08:00:00');constendDatetime=newSimpleDateTime('2022-01-29 08:00:00');constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idconstduration=schedule.duration(startDatetime,endDatetime);ss.info(duration.getValue());// Info: 1970-01-02 08:00:00 Use this method to get the name of the specified schedule. Return: Example: getName()constschedule=newSimpleSchedule('157165292607666710');ss.info(schedule.getName());// Info: 8x5 excluding Russian Holidays Use this method to verify that the current schedule includes the given date and time.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 1,
        "heading": "SimpleSchedule(id, timezoneTitle)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isInSchedule()constnowDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isInSchedule(nowDatetime));// Info: false Use this method to verify that the specified schedule is valid. Return: Example: isValid()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isValid());// Info: true Use this method to verify that the provided date and time is a working time. Parameter(s): Return: Example: isWorkingTime()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idconstfirstDatetime=newSimpleDateTime('2020-12-15 05:59:59');constsecondDatetime=newSimpleDateTime('2020-12-15 06:00:00');ss.info(schedule.isWorkingTime(firstDatetime));// Info: falsess.info(schedule.isWorkingTime(secondDatetime));// Info: true Use this method to initialize a schedule specified with the ID according to the time zone. Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule. Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 1,
        "heading": "SimpleSchedule(id, timezoneTitle)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 1,
        "heading": "SimpleSchedule(id, timezoneTitle)​",
        "chunk_index": 2,
        "source": "simpleschedule_b57045e62eac/1"
      }
    },
    {
      "text": "noteThis method returnstruewhen verifying excluded schedule segments. noteA schedule is considered as invalid when:The schedule passed does not exist.The schedule does not contain the schedule elements of the working type, for example,Time offorExcluded.In both cases, theisValid()method returnsfalse.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 1,
        "heading": "SimpleSchedule(id, timezoneTitle)​",
        "chunk_index": 3,
        "source": "simpleschedule_b57045e62eac/1"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 1,
        "heading": "SimpleSchedule(id, timezoneTitle)​",
        "chunk_index": 4,
        "source": "simpleschedule_b57045e62eac/1"
      }
    },
    {
      "text": "cautionThe value passed in thedatetimeparameter should be in the schedule. cautionThefinalWorkingSecondsparameter does not support negative values.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 2,
        "heading": "duration(startDateTime, endDateTime)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/2"
      }
    },
    {
      "text": "Use this method to get the time difference between thestartDatetimeandendDatetimevalues, based on the schedule, its time zone or, if not specified, the time zone of the session. To verify that, use theisInSchedule(datetime)method. Parameter(s): Return: Example: duration()conststartDatetime=newSimpleDateTime('2022-01-25 08:00:00');constendDatetime=newSimpleDateTime('2022-01-29 08:00:00');constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idconstduration=schedule.duration(startDatetime,endDatetime);ss.info(duration.getValue());// Info: 1970-01-02 08:00:00 Use this method to get the name of the specified schedule. Return: Example: getName()constschedule=newSimpleSchedule('157165292607666710');ss.info(schedule.getName());// Info: 8x5 excluding Russian Holidays Use this method to verify that the current schedule includes the given date and time. Parameter(s): Return: Example: isInSchedule()constnowDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isInSchedule(nowDatetime));// Info: false Use this method to verify that the specified schedule is valid.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 2,
        "heading": "duration(startDateTime, endDateTime)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/2"
      }
    },
    {
      "text": "Return: Example: isValid()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isValid());// Info: true Use this method to verify that the provided date and time is a working time. Parameter(s): Return: Example: isWorkingTime()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idconstfirstDatetime=newSimpleDateTime('2020-12-15 05:59:59');constsecondDatetime=newSimpleDateTime('2020-12-15 06:00:00');ss.info(schedule.isWorkingTime(firstDatetime));// Info: falsess.info(schedule.isWorkingTime(secondDatetime));// Info: true Use this method to initialize a schedule specified with the ID according to the time zone. Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule. Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 2,
        "heading": "duration(startDateTime, endDateTime)​",
        "chunk_index": 2,
        "source": "simpleschedule_b57045e62eac/2"
      }
    },
    {
      "text": "Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 2,
        "heading": "duration(startDateTime, endDateTime)​",
        "chunk_index": 3,
        "source": "simpleschedule_b57045e62eac/2"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 2,
        "heading": "duration(startDateTime, endDateTime)​",
        "chunk_index": 4,
        "source": "simpleschedule_b57045e62eac/2"
      }
    },
    {
      "text": "noteThis method returnstruewhen verifying excluded schedule segments. noteA schedule is considered as invalid when:The schedule passed does not exist.The schedule does not contain the schedule elements of the working type, for example,Time offorExcluded.In both cases, theisValid()method returnsfalse.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 2,
        "heading": "duration(startDateTime, endDateTime)​",
        "chunk_index": 5,
        "source": "simpleschedule_b57045e62eac/2"
      }
    },
    {
      "text": "Use this method to get the name of the specified schedule. Return: Example: getName()constschedule=newSimpleSchedule('157165292607666710');ss.info(schedule.getName());// Info: 8x5 excluding Russian Holidays Use this method to verify that the current schedule includes the given date and time. Parameter(s): Return: Example: isInSchedule()constnowDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isInSchedule(nowDatetime));// Info: false Use this method to verify that the specified schedule is valid. Return: Example: isValid()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isValid());// Info: true Use this method to verify that the provided date and time is a working time. Parameter(s): Return: Example: isWorkingTime()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idconstfirstDatetime=newSimpleDateTime('2020-12-15 05:59:59');constsecondDatetime=newSimpleDateTime('2020-12-15 06:00:00');ss.info(schedule.isWorkingTime(firstDatetime));// Info: falsess.info(schedule.isWorkingTime(secondDatetime));// Info: true Use this method to initialize a schedule specified with the ID according to the time zone.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 3,
        "heading": "getName()​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule. Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 3,
        "heading": "getName()​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/3"
      }
    },
    {
      "text": "noteThis method returnstruewhen verifying excluded schedule segments. noteA schedule is considered as invalid when:The schedule passed does not exist.The schedule does not contain the schedule elements of the working type, for example,Time offorExcluded.In both cases, theisValid()method returnsfalse.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 3,
        "heading": "getName()​",
        "chunk_index": 2,
        "source": "simpleschedule_b57045e62eac/3"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 3,
        "heading": "getName()​",
        "chunk_index": 3,
        "source": "simpleschedule_b57045e62eac/3"
      }
    },
    {
      "text": "noteThis method returnstruewhen verifying excluded schedule segments. noteA schedule is considered as invalid when:The schedule passed does not exist.The schedule does not contain the schedule elements of the working type, for example,Time offorExcluded.In both cases, theisValid()method returnsfalse.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 4,
        "heading": "isInSchedule(datetime)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/4"
      }
    },
    {
      "text": "Use this method to verify that the current schedule includes the given date and time. Parameter(s): Return: Example: isInSchedule()constnowDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isInSchedule(nowDatetime));// Info: false Use this method to verify that the specified schedule is valid. Return: Example: isValid()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isValid());// Info: true Use this method to verify that the provided date and time is a working time. Parameter(s): Return: Example: isWorkingTime()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idconstfirstDatetime=newSimpleDateTime('2020-12-15 05:59:59');constsecondDatetime=newSimpleDateTime('2020-12-15 06:00:00');ss.info(schedule.isWorkingTime(firstDatetime));// Info: falsess.info(schedule.isWorkingTime(secondDatetime));// Info: true Use this method to initialize a schedule specified with the ID according to the time zone. Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 4,
        "heading": "isInSchedule(datetime)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 4,
        "heading": "isInSchedule(datetime)​",
        "chunk_index": 2,
        "source": "simpleschedule_b57045e62eac/4"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 4,
        "heading": "isInSchedule(datetime)​",
        "chunk_index": 3,
        "source": "simpleschedule_b57045e62eac/4"
      }
    },
    {
      "text": "Use this method to verify that the specified schedule is valid. noteA schedule is considered as invalid when:The schedule passed does not exist.The schedule does not contain the schedule elements of the working type, for example,Time offorExcluded.In both cases, theisValid()method returnsfalse. Return: Example: isValid()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idss.info(schedule.isValid());// Info: true Use this method to verify that the provided date and time is a working time. Parameter(s): Return: Example: isWorkingTime()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idconstfirstDatetime=newSimpleDateTime('2020-12-15 05:59:59');constsecondDatetime=newSimpleDateTime('2020-12-15 06:00:00');ss.info(schedule.isWorkingTime(firstDatetime));// Info: falsess.info(schedule.isWorkingTime(secondDatetime));// Info: true Use this method to initialize a schedule specified with the ID according to the time zone. Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 5,
        "heading": "isValid()​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 5,
        "heading": "isValid()​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/5"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 5,
        "heading": "isValid()​",
        "chunk_index": 2,
        "source": "simpleschedule_b57045e62eac/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isWorkingTime()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idconstfirstDatetime=newSimpleDateTime('2020-12-15 05:59:59');constsecondDatetime=newSimpleDateTime('2020-12-15 06:00:00');ss.info(schedule.isWorkingTime(firstDatetime));// Info: falsess.info(schedule.isWorkingTime(secondDatetime));// Info: true Use this method to initialize a schedule specified with the ID according to the time zone. Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule. Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 6,
        "heading": "isWorkingTime(datetime)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/6"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 6,
        "heading": "isWorkingTime(datetime)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/6"
      }
    },
    {
      "text": "Use this method to verify that the provided date and time is a working time.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 6,
        "heading": "isWorkingTime(datetime)​",
        "chunk_index": 2,
        "source": "simpleschedule_b57045e62eac/6"
      }
    },
    {
      "text": "Use this method to initialize a schedule specified with the ID according to the time zone. Parameter(s): Return: Example: load()constschedule=newSimpleSchedule();schedule.load('157165292607666710');// sys_schedule.sys_id Use this method to set a time zone for the current schedule. Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 7,
        "heading": "load(sysId, timezoneTitle)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/7"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 7,
        "heading": "load(sysId, timezoneTitle)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/7"
      }
    },
    {
      "text": "Use this method to set a time zone for the current schedule. Parameter(s): Return: Example: setTimeZone()constschedule=newSimpleSchedule('157165292607666710');// sys_schedule.sys_idschedule.setTimeZone('US/Central'); Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 8,
        "heading": "setTimeZone(timezoneTitle)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/8"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 8,
        "heading": "setTimeZone(timezoneTitle)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/8"
      }
    },
    {
      "text": "Use this method to get the time left, as aSimpleDurationobject, until the next schedule element begins. Parameter(s): Return: Example: whenNext()conststartDatetime=newSimpleDateTime();constschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info('Seconds Left: '+schedule.whenNext(startDatetime).getDurationSeconds());// Info: Seconds Left: 6052 Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 9,
        "heading": "whenNext(datetime, timezoneTitle)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/9"
      }
    },
    {
      "text": "Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull.",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 9,
        "heading": "whenNext(datetime, timezoneTitle)​",
        "chunk_index": 1,
        "source": "simpleschedule_b57045e62eac/9"
      }
    },
    {
      "text": "Use this method to calculate the date and time when the time value set in thefinalWorkingSecondsparameter in seconds finishes after the time set in thestartDateTime. All calculations are done based on the specified schedule. cautionThefinalWorkingSecondsparameter does not support negative values. Parameter(s): Return: cautionIf theSimpleScheduleclass object is not valid (theisValid()method returnsfalsefor this object), thewhenWillExpire()method returnsnull. Example: whenWillExpire()conststartDatetime=newSimpleDateTime('2022-01-23 08:00:00');constfinalWorkingSeconds=5*8*3600;// duration of 5 eight-hour days in secondsconstschedule=newSimpleSchedule('161050499417811121');// sys_schedule.sys_idss.info(schedule.whenWillExpire(startDatetime,finalWorkingSeconds).getValue());// Info: 2022-01-28 18:30:00",
      "metadata": {
        "doc_id": "simpleschedule_b57045e62eac",
        "title": "SimpleSchedule",
        "section_id": 10,
        "heading": "whenWillExpire(startDateTime, finalWorkingSeconds)​",
        "chunk_index": 0,
        "source": "simpleschedule_b57045e62eac/10"
      }
    },
    {
      "text": "This method reindexes all columns and REM attributes with the activeFull text searchattribute in the system. Return: Example: recreateAllIndices()constsimpleSearch=newSimpleSearch();simpleSearch.recreateAllIndices(); This method reindexes all columns and REM attributes with the activeFull text searchattribute within the table specified and its child tables. Parameter(s): Return: Example: recreateIndicesByTableName()constsimpleSearch=newSimpleSearch();simpleSearch.recreateIndicesByTableName('task'); This method reindexes a column or REM attribute, including the values of child table records, based on its ID. Parameter(s): Return: Example: recreateIndicesByColumnId()constsimpleSearch=newSimpleSearch();simpleSearch.recreateIndicesByColumnId('155931135900001085');// recreating indices for Description column of Task table Use this method to perform a search query against tables. Parameter(s): Return: Example: recreateIndicesByColumnId()constsearchManager=newSimpleSearch();constresults=searchManager.search('email',['155931135900000083'/* task */]);results.map(foundRecord=>{ss.info(`/record/${foundRecord.getTableName()}/${foundRecord.sys_id}`);});//Info: /record/task/164579004293577819//Info: /record/task/163696164398828017//...",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 1,
        "heading": "recreateAllIndiсes()​",
        "chunk_index": 0,
        "source": "simplesearch_0ed3d36c6b85/1"
      }
    },
    {
      "text": "tipThe search is only performed in the tables for which atext search tableis added.",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 1,
        "heading": "recreateAllIndiсes()​",
        "chunk_index": 1,
        "source": "simplesearch_0ed3d36c6b85/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: recreateIndicesByTableName()constsimpleSearch=newSimpleSearch();simpleSearch.recreateIndicesByTableName('task'); This method reindexes a column or REM attribute, including the values of child table records, based on its ID. Parameter(s): Return: Example: recreateIndicesByColumnId()constsimpleSearch=newSimpleSearch();simpleSearch.recreateIndicesByColumnId('155931135900001085');// recreating indices for Description column of Task table Use this method to perform a search query against tables. Parameter(s): Return: Example: recreateIndicesByColumnId()constsearchManager=newSimpleSearch();constresults=searchManager.search('email',['155931135900000083'/* task */]);results.map(foundRecord=>{ss.info(`/record/${foundRecord.getTableName()}/${foundRecord.sys_id}`);});//Info: /record/task/164579004293577819//Info: /record/task/163696164398828017//...",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 2,
        "heading": "recreateIndicesByTableName(tableName)​",
        "chunk_index": 0,
        "source": "simplesearch_0ed3d36c6b85/2"
      }
    },
    {
      "text": "tipThe search is only performed in the tables for which atext search tableis added.",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 2,
        "heading": "recreateIndicesByTableName(tableName)​",
        "chunk_index": 1,
        "source": "simplesearch_0ed3d36c6b85/2"
      }
    },
    {
      "text": "This method reindexes all columns and REM attributes with the activeFull text searchattribute within the table specified and its child tables.",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 2,
        "heading": "recreateIndicesByTableName(tableName)​",
        "chunk_index": 2,
        "source": "simplesearch_0ed3d36c6b85/2"
      }
    },
    {
      "text": "This method reindexes a column or REM attribute, including the values of child table records, based on its ID. Parameter(s): Return: Example: recreateIndicesByColumnId()constsimpleSearch=newSimpleSearch();simpleSearch.recreateIndicesByColumnId('155931135900001085');// recreating indices for Description column of Task table Use this method to perform a search query against tables. ThetableIDsparameter is an array of the ID type. tipThe search is only performed in the tables for which atext search tableis added. Parameter(s): Return: Example: recreateIndicesByColumnId()constsearchManager=newSimpleSearch();constresults=searchManager.search('email',['155931135900000083'/* task */]);results.map(foundRecord=>{ss.info(`/record/${foundRecord.getTableName()}/${foundRecord.sys_id}`);});//Info: /record/task/164579004293577819//Info: /record/task/163696164398828017//...",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 3,
        "heading": "recreateIndicesByColumnId(columnId)​",
        "chunk_index": 0,
        "source": "simplesearch_0ed3d36c6b85/3"
      }
    },
    {
      "text": "Use this method to perform a search query against tables. ThetableIDsparameter is an array of the ID type. tipThe search is only performed in the tables for which atext search tableis added. Parameter(s): Return: Example: recreateIndicesByColumnId()constsearchManager=newSimpleSearch();constresults=searchManager.search('email',['155931135900000083'/* task */]);results.map(foundRecord=>{ss.info(`/record/${foundRecord.getTableName()}/${foundRecord.sys_id}`);});//Info: /record/task/164579004293577819//Info: /record/task/163696164398828017//...",
      "metadata": {
        "doc_id": "simplesearch_0ed3d36c6b85",
        "title": "SimpleSearch",
        "section_id": 4,
        "heading": "search(text, tableIDs)​",
        "chunk_index": 0,
        "source": "simplesearch_0ed3d36c6b85/4"
      }
    },
    {
      "text": "Use this method to return the field value containing the IP-address of the client. Return: Example: getClientIP()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);// Info: 127.0.0.1",
      "metadata": {
        "doc_id": "simplesession_650841cae601",
        "title": "SimpleSession",
        "section_id": 1,
        "heading": "getClientIP()​",
        "chunk_index": 0,
        "source": "simplesession_650841cae601/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "To do so, in the message parameter, enter thesource_messagevalue of a record from theappcategory. To do so, in the message parameter, enter thesource_messagevalue of a record from theappcategory. To do so, in the message parameter, enter thesource_messagevalue of a record from the app category.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message. Use theparamsparameters to define values for the dynamic parts of the translated message. Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "SeeLocalization and Multi-Language Supportto learn more. SeeLocalization and Multi-Language Supportto learn more. SeeLocalization and Multi-Language Supportto learn more.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.addSuccessMessage()ss.addSuccessMessage('Successfully updated');// ORss.addSuccessMessage('Successfully {action_name}',{action_name:\"updated\"}); Use this method to add an information message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.info()consttask=newSimpleRecord('task');task.orderByDesc('sys_created_at');task.setLimit(1);task.selectAttributes('number');task.query();while(task.next()){ss.info(task.number);} Use this method to add a debug message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.debug()constinsertedID=inquiry.insert();if(insertedID==0){ss.debug(inquiry.getErrors());}else{ss.debug(`Create inquiry with ID${insertedID}`)} Use this method to add a warning message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.warning()consttask=newSimpleRecord('task');task.query();while(task.next()){ss.warning(task.sys_id);} Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Use this method to display an informational toast message in the lower right corner according to the current user locale. Parameter(s): Return: Example: ss.addInfoMessage()ss.addInfoMessage('Three days left');// ORss.addInfoMessage('{count} {noun} left',{\"count\":\"Three\",\"noun\":\"days\"}); Use this method to display an error toast message in the lower right corner according to the current user locale. Parameter(s): Return: Example: ss.addErrorMessage()ss.addErrorMessage('\"Name\" cannot be blank');// ORss.addErrorMessage('\"{title}\" cannot be blank',{title:\"Name\"}); Use this method to display a success toast message in the lower right corner according to the current user locale.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 24,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 25,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 26,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 27,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "ss.addInfoMessage(message, params)​",
        "chunk_index": 28,
        "source": "simplesystem_3710cced739a/1"
      }
    },
    {
      "text": "Use this method to display an error toast message in the lower right corner according to the current user locale. Parameter(s): Return: Example: ss.addErrorMessage()ss.addErrorMessage('\"Name\" cannot be blank');// ORss.addErrorMessage('\"{title}\" cannot be blank',{title:\"Name\"}); Use this method to display a success toast message in the lower right corner according to the current user locale. A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message. Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.addSuccessMessage()ss.addSuccessMessage('Successfully updated');// ORss.addSuccessMessage('Successfully {action_name}',{action_name:\"updated\"}); Use this method to add an information message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.info()consttask=newSimpleRecord('task');task.orderByDesc('sys_created_at');task.setLimit(1);task.selectAttributes('number');task.query();while(task.next()){ss.info(task.number);} Use this method to add a debug message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.debug()constinsertedID=inquiry.insert();if(insertedID==0){ss.debug(inquiry.getErrors());}else{ss.debug(`Create inquiry with ID${insertedID}`)} Use this method to add a warning message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.warning()consttask=newSimpleRecord('task');task.query();while(task.next()){ss.warning(task.sys_id);} Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "To do so, in the message parameter, enter thesource_messagevalue of a record from theappcategory. To do so, in the message parameter, enter thesource_messagevalue of a record from the app category.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "SeeLocalization and Multi-Language Supportto learn more. SeeLocalization and Multi-Language Supportto learn more.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 24,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 25,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 26,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "ss.addErrorMessage(message, params)​",
        "chunk_index": 27,
        "source": "simplesystem_3710cced739a/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Use this method to display a success toast message in the lower right corner according to the current user locale. A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.addSuccessMessage()ss.addSuccessMessage('Successfully updated');// ORss.addSuccessMessage('Successfully {action_name}',{action_name:\"updated\"}); Use this method to add an information message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.info()consttask=newSimpleRecord('task');task.orderByDesc('sys_created_at');task.setLimit(1);task.selectAttributes('number');task.query();while(task.next()){ss.info(task.number);} Use this method to add a debug message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.debug()constinsertedID=inquiry.insert();if(insertedID==0){ss.debug(inquiry.getErrors());}else{ss.debug(`Create inquiry with ID${insertedID}`)} Use this method to add a warning message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.warning()consttask=newSimpleRecord('task');task.query();while(task.next()){ss.warning(task.sys_id);} Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Use theparamsparameters to define values for the dynamic parts of the translated message.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "To do so, in the message parameter, enter thesource_messagevalue of a record from the app category.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 24,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 25,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 3,
        "heading": "ss.addSuccessMessage(message, params)​",
        "chunk_index": 26,
        "source": "simplesystem_3710cced739a/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Use this method to add an information message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.info()consttask=newSimpleRecord('task');task.orderByDesc('sys_created_at');task.setLimit(1);task.selectAttributes('number');task.query();while(task.next()){ss.info(task.number);} Use this method to add a debug message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.debug()constinsertedID=inquiry.insert();if(insertedID==0){ss.debug(inquiry.getErrors());}else{ss.debug(`Create inquiry with ID${insertedID}`)} Use this method to add a warning message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.warning()consttask=newSimpleRecord('task');task.query();while(task.next()){ss.warning(task.sys_id);} Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 4,
        "heading": "ss.info(message)​",
        "chunk_index": 24,
        "source": "simplesystem_3710cced739a/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Use this method to add a debug message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.debug()constinsertedID=inquiry.insert();if(insertedID==0){ss.debug(inquiry.getErrors());}else{ss.debug(`Create inquiry with ID${insertedID}`)} Use this method to add a warning message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.warning()consttask=newSimpleRecord('task');task.query();while(task.next()){ss.warning(task.sys_id);} Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 5,
        "heading": "ss.debug(message)​",
        "chunk_index": 24,
        "source": "simplesystem_3710cced739a/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Use this method to add a warning message into the system journal located in theMain Log(sys_log) table. Parameter(s): Return: Example: ss.warning()consttask=newSimpleRecord('task');task.query();while(task.next()){ss.warning(task.sys_id);} Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 6,
        "heading": "ss.warning(message)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.error()(functionexecuteRule(current,previous/*null when async*/){constnowDateTime=newSimpleDateTime();consttargetDateTime=newSimpleDateTime(current.appropriate_datetime);constsecondsLeft=targetDateTime.getNumericValue()-nowDateTime.getNumericValue();if(secondsLeft<1800){// less than half an hour leftss.addErrorMessage('Appropriate Datetime cannot be less than half an hour');ss.error(`Too Urgent Request:${secondsLeft}to process`);current.setAbortAction(true);}})(current,previous); Use this method to queue an event based on its name and optional parameters. Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Use this method to add an error message into the system journal located in theMain Log(sys_log) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 7,
        "heading": "ss.error(message)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.eventQueue()if(current.state!='10'){// Not Closedss.eventQueue('incident.close',current,ss.getUserID());} Use this method to queue an event and run it at a specified time. Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Thenameargument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it. The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Use this method to queue an event based on its name and optional parameters.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 8,
        "heading": "ss.eventQueue(name, current, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "The name argument should be the same as the record name in theEvent Registers(sys_event_register) table. The table of the passed current object should be the same as the table specified in the record of theEvent Register(sys_event_register) table or the tableextended from it.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theEvent(event) table. If the ACL check is disabled in server scripts, the system does not check this ACL rule for users with vendor privileges. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.eventQueueScheduled()if(current.state!='10'){// Not ClosedconstplusThreeDays=newSimpleDateTime();// nowplusThreeDays.addDays(3);// + 3 daysss.eventQueueScheduled('incident.autoclose',current,plusThreeDays,ss.getUserID());} Use this method to generate a token, for example, when the password resetting has been requested. Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Use this method to queue an event and run it at a specified time.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 21,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 22,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 9,
        "heading": "ss.eventQueueScheduled(name, current, process_started_at, param_1, param_2, param_3, param_4, param_5)​",
        "chunk_index": 23,
        "source": "simplesystem_3710cced739a/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment. See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Return: Example: generateResetToken()constresetToken=ss.generateResetToken();ss.info(resetToken);//Info: l_kxwLi-TsTwmgLYk3euOCeXeA14nE2U_1610699284 Use this method to return a URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Use this method to generate a token, for example, when the password resetting has been requested.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 19,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 10,
        "heading": "ss.generateResetToken()​",
        "chunk_index": 20,
        "source": "simplesystem_3710cced739a/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.generateUrlAction()constsimpleInstanceUri=ss.getProperty('simple.instance.uri');constinstanceUrl=simpleInstanceUri.startsWith('https://')?simpleInstanceUri:'https://'+simpleInstanceUri;constаctionScript=`const task = new SimpleRecord('task');task.get('${current.sys_id}');if (task.state == '7') { // Completedtask.state = '10'; // Closedtask.update();}message = null;redirectUrl = '${instanceUrl}' + '/record/task/' + '${current.sys_id}';`;constnowDateTime=newSimpleDateTime();nowDateTime.addDays(3);consturl=ss.generateUrlAction(current.getValue('caller'),аctionScript,nowDateTime.getValue());ss.info(url);//Info: your-instance-uri.simpleone.ru/url-action/run?key=Q2GqNFRXCRY2 Use this method to return the ID of theapplicationthat the current user is using at the moment. See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theURL Action(sys_url_action) table. When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "Use this method to return a URL. If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "To redirect a user to another page, enter its address into theredirectUrlvariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "A toast messageThe action is completedis shown by default. To deactivate the toast message, set themessagevariable asnullor ''.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 15,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "After following it, the script specified in thescriptparameter is executed.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 16,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "By default, the main page opens after following the URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 17,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "To change the message text, redefine themessagevariable within the script.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 11,
        "heading": "ss.generateUrlAction(userId, script, expire)​",
        "chunk_index": 18,
        "source": "simplesystem_3710cced739a/11"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "Use this method to return the ID of theapplicationthat the current user is using at the moment. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theCreateoperation in theApplication(sys_application) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "Return: Example: ss.getApplicationId()constappId=ss.getApplicationId();ss.info(appId);//Info: 155931135900000002 Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 12,
        "heading": "ss.getApplicationId()​",
        "chunk_index": 14,
        "source": "simplesystem_3710cced739a/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theSystem Property(sys_property) table and theValue(value) column. When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "Use this method to return a value from the specified in thenameparameter record from theSystem Properties(sys_property) table. Parameter(s): Return: Example: ss.getProperty()ss.info(ss.getProperty('simple.passwordreset.enabled'));//Info: false Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 13,
        "heading": "ss.getProperty(name)​",
        "chunk_index": 13,
        "source": "simplesystem_3710cced739a/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.setProperty()ss.setProperty('user.timezone.default','Europe/Moscow','Define the default user time zone'); Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theRead,Create,Updateoperations in theSystem Property(sys_property) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "If the record exists, the method updates its value and description.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 11,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "Use this method to verify, using thenameparameter that there is a record in theSystem Property(sys_property) table.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 14,
        "heading": "ss.setProperty(name, value, description)​",
        "chunk_index": 12,
        "source": "simplesystem_3710cced739a/14"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "Use this method to get information on the current authorization session. Return: Example: ss.getSession()constsession=ss.getSession();constipAddress=session.getClientIP();ss.info(ipAddress);//Info: 127.0.0.1 Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 15,
        "heading": "ss.getSession()​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/15"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation for the record and columns of theUser(user) table. When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "cautionThe attributes of theEmployee(employee) table and otherUser(user) child tables are not available in the returned object.letuser=ss.getUser();user.work_schedule='157165229904988595';/* 24/7 */user.update(); Return: Example: ss.getSession()ss.info(ss.getUser().username);//Info: admin Use this method to return the current user ID.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 9,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "Use this method to return theSimpleRecordobject of the current user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 16,
        "heading": "ss.getUser()​",
        "chunk_index": 10,
        "source": "simplesystem_3710cced739a/16"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "Return: Example: ss.getUserID()constapproval=newSimpleRecord('sys_approval');approval.addQuery('approver_id',ss.getUserID());approval.addQuery('state','requested');approval.selectAttributes('sys_id');approval.query();if(approval.getRowCount()>0){//...} Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "When this method is executed, the system checks the ACL rules configured for the user for theReadoperation in theUser(user) table. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 17,
        "heading": "ss.getUserID()​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/17"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "Use this methods to return a record Document ID (32-character UUID value) based on the table ID and the table record ID. Parameter(s): Return: Example: ss.getDocIdByIds()constdocID=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constapproval=newSimpleRecord('sys_approval');approval.addQuery('item',docID);approval.query(); Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 18,
        "heading": "ss.getDocIdByIds(tableId,recordId)​",
        "chunk_index": 8,
        "source": "simplesystem_3710cced739a/18"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "Use this method to return the table ID based on the Document ID record (32-character UUID value) specified. Parameter(s): Return: Example: ss.getTableIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at);//Info: 2020-05-24 16:30:21 Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 19,
        "heading": "ss.getTableIdByDocId(docId)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/19"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: ss.getRecordIdByDocId()consttableID=ss.getTableIdByDocId(current.item);consttable=newSimpleRecord('sys_db_table');table.get(tableID);constrecord=newSimpleRecord(table.name);constrecordID=ss.getRecordIdByDocId(current.item);record.get(recordID);ss.addInfoMessage(record.sys_created_at); Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "Use this method to return a record ID based on the DocumentID record (32-character UUID value) specified.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 20,
        "heading": "ss.getRecordIdByDocId(docId)​",
        "chunk_index": 7,
        "source": "simplesystem_3710cced739a/20"
      }
    },
    {
      "text": "!userHasRole.next();returnisManager Use this method to importscript includes. Parameter(s): Return: Example: ss.hasRole()ss.importIncludeScript('calculateCAB');constapprovers=[];if(!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "Use this method to verify that the current user has the specified or theadminrole. If the role specified has theElevated privilegecheckbox selected and theadminrole is not elevated up to the specified one, the method returnsfalse. Parameter(s): Return: Example: ss.hasRole()constisUserManager=ss.hasRole('process_manager');// true or falsereturnisUserManager; cautionThe method always returnstrueif a user has a specific oradminrole. To verify that the user has a particular role, use the following script:ss.hasRoleconstMANAGER_ROLE='process_manager';constuserHasRole=newSimpleRecord('sys_user_has_role');userHasRole.addQuery('user_id',ss.getUserId());userHasRole.addQuery('role_id.name',MANAGER_ROLE);userHasRole.setLimit(1);userHasRole.selectAttributes(['sys_id']);userHasRole.query();constisManager=!",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 5,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 21,
        "heading": "ss.hasRole(role)​",
        "chunk_index": 6,
        "source": "simplesystem_3710cced739a/21"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user. When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 22,
        "heading": "ss.importIncludeScript(name)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/22"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 22,
        "heading": "ss.importIncludeScript(name)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/22"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 22,
        "heading": "ss.importIncludeScript(name)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/22"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 22,
        "heading": "ss.importIncludeScript(name)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/22"
      }
    },
    {
      "text": "!current.customized_cab){approvers=approvers.concat(current.customized_cab.split(','));}if(!current.ignore_automatically_generated_cab){constincludeScriptResult=calculateCAB(current);approvers=approvers.concat(includeScriptResult);} Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 22,
        "heading": "ss.importIncludeScript(name)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/22"
      }
    },
    {
      "text": "See the example below:Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: ss.setRedirect()ss.setRedirect(`/list/${current.getTableName()}`);// Redirect to the list view of the current tabless.setRedirect('/record/task');// Redirect to the default view of the Task table",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 23,
        "heading": "ss.setRedirect(url)​",
        "chunk_index": 0,
        "source": "simplesystem_3710cced739a/23"
      }
    },
    {
      "text": "If the URL is not provided, the system refreshes the current page after calling the method.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 23,
        "heading": "ss.setRedirect(url)​",
        "chunk_index": 1,
        "source": "simplesystem_3710cced739a/23"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to the scalability issues.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 23,
        "heading": "ss.setRedirect(url)​",
        "chunk_index": 2,
        "source": "simplesystem_3710cced739a/23"
      }
    },
    {
      "text": "When this method is executed, the system does not check the ACL rules configured for the user.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 23,
        "heading": "ss.setRedirect(url)​",
        "chunk_index": 3,
        "source": "simplesystem_3710cced739a/23"
      }
    },
    {
      "text": "Use this method to redirect a user to the specified URL.",
      "metadata": {
        "doc_id": "simplesystem_3710cced739a",
        "title": "SimpleSystem",
        "section_id": 23,
        "heading": "ss.setRedirect(url)​",
        "chunk_index": 4,
        "source": "simplesystem_3710cced739a/23"
      }
    },
    {
      "text": "Use this constructor to instantiate a new SimpleTable object. Example: SimpleTable()lettable=newSimpleTable('task'); Use this method to get information about the parent tables of all inheritance levels related to the table specified in the object constructor. Return: Example: getParentTables()lettable=newSimpleTable('sys_report_chart');ss.info(table.getParentTables());//Info: [{\"sys_id\":\"156636381105818096\",\"name\":\"sys_report\"}] Use this method to get information about the child tables to any table, detailing all levels of inheritance. Return: Example: getChildTables()lettable=newSimpleTable('sys_report_chart');ss.info(table.getChildTables());//Info: [{\"sys_id\":\"156836096302084733\",\"name\":\"sys_report_chart_pie\"},{\"sys_id\":\"156836096401430308\",\"name\":\"sys_report_chart_timed_trends\"},//{\"sys_id\":\"156636392206287762\",\"name\":\"sys_report_chart_timed\"},{\"sys_id\":\"156636392003126252\",\"name\":\"sys_report_chart_bar\"},{\"sys_id\":\"156836096101018153\",//\"name\":\"sys_report_chart_timed_line\"}]",
      "metadata": {
        "doc_id": "simpletable_c7aaa141190c",
        "title": "SimpleTable",
        "section_id": 1,
        "heading": "SimpleTable()​",
        "chunk_index": 0,
        "source": "simpletable_c7aaa141190c/1"
      }
    },
    {
      "text": "Use this method to get information about the parent tables of all inheritance levels related to the table specified in the object constructor. Return: Example: getParentTables()lettable=newSimpleTable('sys_report_chart');ss.info(table.getParentTables());//Info: [{\"sys_id\":\"156636381105818096\",\"name\":\"sys_report\"}] Use this method to get information about the child tables to any table, detailing all levels of inheritance. Return: Example: getChildTables()lettable=newSimpleTable('sys_report_chart');ss.info(table.getChildTables());//Info: [{\"sys_id\":\"156836096302084733\",\"name\":\"sys_report_chart_pie\"},{\"sys_id\":\"156836096401430308\",\"name\":\"sys_report_chart_timed_trends\"},//{\"sys_id\":\"156636392206287762\",\"name\":\"sys_report_chart_timed\"},{\"sys_id\":\"156636392003126252\",\"name\":\"sys_report_chart_bar\"},{\"sys_id\":\"156836096101018153\",//\"name\":\"sys_report_chart_timed_line\"}]",
      "metadata": {
        "doc_id": "simpletable_c7aaa141190c",
        "title": "SimpleTable",
        "section_id": 2,
        "heading": "getParentTables()​",
        "chunk_index": 0,
        "source": "simpletable_c7aaa141190c/2"
      }
    },
    {
      "text": "Use this method to get information about the child tables to any table, detailing all levels of inheritance. Return: Example: getChildTables()lettable=newSimpleTable('sys_report_chart');ss.info(table.getChildTables());//Info: [{\"sys_id\":\"156836096302084733\",\"name\":\"sys_report_chart_pie\"},{\"sys_id\":\"156836096401430308\",\"name\":\"sys_report_chart_timed_trends\"},//{\"sys_id\":\"156636392206287762\",\"name\":\"sys_report_chart_timed\"},{\"sys_id\":\"156636392003126252\",\"name\":\"sys_report_chart_bar\"},{\"sys_id\":\"156836096101018153\",//\"name\":\"sys_report_chart_timed_line\"}]",
      "metadata": {
        "doc_id": "simpletable_c7aaa141190c",
        "title": "SimpleTable",
        "section_id": 3,
        "heading": "getChildTables()​",
        "chunk_index": 0,
        "source": "simpletable_c7aaa141190c/3"
      }
    },
    {
      "text": "To do so, specify the name and table to which the object template belongs. The attribute name of thetemplateDataobject is the system name of the column.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 1,
        "heading": "SimpleTemplate(templateName)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/1"
      }
    },
    {
      "text": "Use this constructor to instantiate a new object of the SimpleTemplate class. Parameter(s): Example: SimpleTemplate()consttemplate=newSimpleTemplate('Standard task template'); Use this method to apply the current template to the given object. Parameter(s): Return: Example: applyTo()consttask=newSimpleRecord('task');consttemplate=newSimpleTemplate('Standard task template');template.applyTo(task);task.subject='From template Task';ss.info('Created Task ID: '+task.insert());ss.info(task.getErrors());// Info: Created Task ID: 163777658710999477// Info: [] Use this method to apply the value from theTemplate typefield to the object given. Parameter(s): Return: Example: applyToByTemplateField()consttemplateRecord=newSimpleRecord('some_template_dict');templateRecord.get('156837247306928785');consttask=newSimpleRecord('task');consttemplate=newSimpleTemplate();template.applyToByTemplateField(task,templateRecord.template);ss.info(task.getAttributes());task.insert(); Use this method to create a template from a SimpleRecord object with a specified name. The method returns the ID of the created template.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 1,
        "heading": "SimpleTemplate(templateName)​",
        "chunk_index": 1,
        "source": "simpletemplate_392612bce25b/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: createBySimpleRecord()consttask=newSimpleRecord('task');task.get('156837247306928785');consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createBySimpleRecord(task,'New task template'))); Use this method to create a template. Parameter(s): Return: Example: createByTemplateData()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateData({'subject':'New subject'},'task','new task template'))); Use this method to create a template with the specified name and a table to which the template object belongs. Parameter(s): Return: Example: createByTemplateField()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateField({'subject':'New subject'},'task','New task template'))); Use this method to get a template from the template storage by its unique name. Parameter(s): Return: Example: get()consttemplate=newSimpleTemplate();template.get('Record template');",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 1,
        "heading": "SimpleTemplate(templateName)​",
        "chunk_index": 2,
        "source": "simpletemplate_392612bce25b/1"
      }
    },
    {
      "text": "cautionWhen applying a template and inserting a record, remember that the template should match the form of the record in terms of content and mandatory fields, as differences with the SimpleRecord table can cause the server validation to fail.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 1,
        "heading": "SimpleTemplate(templateName)​",
        "chunk_index": 3,
        "source": "simpletemplate_392612bce25b/1"
      }
    },
    {
      "text": "As a result, an error messageCurrent template doesn't match to this recordor a log appears.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 1,
        "heading": "SimpleTemplate(templateName)​",
        "chunk_index": 4,
        "source": "simpletemplate_392612bce25b/1"
      }
    },
    {
      "text": "Use this method to apply the current template to the given object. Parameter(s): Return: Example: applyTo()consttask=newSimpleRecord('task');consttemplate=newSimpleTemplate('Standard task template');template.applyTo(task);task.subject='From template Task';ss.info('Created Task ID: '+task.insert());ss.info(task.getErrors());// Info: Created Task ID: 163777658710999477// Info: [] Use this method to apply the value from theTemplate typefield to the object given. Parameter(s): Return: Example: applyToByTemplateField()consttemplateRecord=newSimpleRecord('some_template_dict');templateRecord.get('156837247306928785');consttask=newSimpleRecord('task');consttemplate=newSimpleTemplate();template.applyToByTemplateField(task,templateRecord.template);ss.info(task.getAttributes());task.insert(); Use this method to create a template from a SimpleRecord object with a specified name. The method returns the ID of the created template. Parameter(s): Return: Example: createBySimpleRecord()consttask=newSimpleRecord('task');task.get('156837247306928785');consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createBySimpleRecord(task,'New task template'))); Use this method to create a template.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 2,
        "heading": "applyTo(SimpleRecord)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/2"
      }
    },
    {
      "text": "To do so, specify the name and table to which the object template belongs. Parameter(s): Return: Example: createByTemplateData()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateData({'subject':'New subject'},'task','new task template'))); Use this method to create a template with the specified name and a table to which the template object belongs. Parameter(s): Return: Example: createByTemplateField()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateField({'subject':'New subject'},'task','New task template'))); Use this method to get a template from the template storage by its unique name. Parameter(s): Return: Example: get()consttemplate=newSimpleTemplate();template.get('Record template');",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 2,
        "heading": "applyTo(SimpleRecord)​",
        "chunk_index": 1,
        "source": "simpletemplate_392612bce25b/2"
      }
    },
    {
      "text": "The attribute name of thetemplateDataobject is the system name of the column.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 2,
        "heading": "applyTo(SimpleRecord)​",
        "chunk_index": 2,
        "source": "simpletemplate_392612bce25b/2"
      }
    },
    {
      "text": "cautionWhen applying a template and inserting a record, remember that the template should match the form of the record in terms of content and mandatory fields, as differences with the SimpleRecord table can cause the server validation to fail.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 2,
        "heading": "applyTo(SimpleRecord)​",
        "chunk_index": 3,
        "source": "simpletemplate_392612bce25b/2"
      }
    },
    {
      "text": "As a result, an error messageCurrent template doesn't match to this recordor a log appears.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 2,
        "heading": "applyTo(SimpleRecord)​",
        "chunk_index": 4,
        "source": "simpletemplate_392612bce25b/2"
      }
    },
    {
      "text": "To do so, specify the name and table to which the object template belongs. The attribute name of thetemplateDataobject is the system name of the column.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 3,
        "heading": "applyToByTemplateField(SimpleRecord, template)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: applyToByTemplateField()consttemplateRecord=newSimpleRecord('some_template_dict');templateRecord.get('156837247306928785');consttask=newSimpleRecord('task');consttemplate=newSimpleTemplate();template.applyToByTemplateField(task,templateRecord.template);ss.info(task.getAttributes());task.insert(); Use this method to create a template from a SimpleRecord object with a specified name. The method returns the ID of the created template. Parameter(s): Return: Example: createBySimpleRecord()consttask=newSimpleRecord('task');task.get('156837247306928785');consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createBySimpleRecord(task,'New task template'))); Use this method to create a template. Parameter(s): Return: Example: createByTemplateData()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateData({'subject':'New subject'},'task','new task template'))); Use this method to create a template with the specified name and a table to which the template object belongs. Parameter(s): Return: Example: createByTemplateField()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateField({'subject':'New subject'},'task','New task template'))); Use this method to get a template from the template storage by its unique name.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 3,
        "heading": "applyToByTemplateField(SimpleRecord, template)​",
        "chunk_index": 1,
        "source": "simpletemplate_392612bce25b/3"
      }
    },
    {
      "text": "Use this method to apply the value from theTemplate typefield to the object given.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 3,
        "heading": "applyToByTemplateField(SimpleRecord, template)​",
        "chunk_index": 2,
        "source": "simpletemplate_392612bce25b/3"
      }
    },
    {
      "text": "Use this method to create a template from a SimpleRecord object with a specified name. The method returns the ID of the created template. Parameter(s): Return: Example: createBySimpleRecord()consttask=newSimpleRecord('task');task.get('156837247306928785');consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createBySimpleRecord(task,'New task template'))); Use this method to create a template. To do so, specify the name and table to which the object template belongs. Parameter(s): Return: Example: createByTemplateData()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateData({'subject':'New subject'},'task','new task template'))); Use this method to create a template with the specified name and a table to which the template object belongs.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 4,
        "heading": "createBySimpleRecord(SimpleRecord, templateName)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: createByTemplateField()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateField({'subject':'New subject'},'task','New task template'))); Use this method to get a template from the template storage by its unique name. Parameter(s): Return: Example: get()consttemplate=newSimpleTemplate();template.get('Record template');",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 4,
        "heading": "createBySimpleRecord(SimpleRecord, templateName)​",
        "chunk_index": 1,
        "source": "simpletemplate_392612bce25b/4"
      }
    },
    {
      "text": "The attribute name of thetemplateDataobject is the system name of the column.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 4,
        "heading": "createBySimpleRecord(SimpleRecord, templateName)​",
        "chunk_index": 2,
        "source": "simpletemplate_392612bce25b/4"
      }
    },
    {
      "text": "To do so, specify the name and table to which the object template belongs. Parameter(s): Return: Example: createByTemplateData()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateData({'subject':'New subject'},'task','new task template'))); Use this method to create a template with the specified name and a table to which the template object belongs. Parameter(s): Return: Example: createByTemplateField()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateField({'subject':'New subject'},'task','New task template'))); Use this method to get a template from the template storage by its unique name. Parameter(s): Return: Example: get()consttemplate=newSimpleTemplate();template.get('Record template');",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 5,
        "heading": "createByTemplateData(templateData, tableName, templateName, templateTableName)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/5"
      }
    },
    {
      "text": "The attribute name of thetemplateDataobject is the system name of the column.",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 5,
        "heading": "createByTemplateData(templateData, tableName, templateName, templateTableName)​",
        "chunk_index": 1,
        "source": "simpletemplate_392612bce25b/5"
      }
    },
    {
      "text": "Use this method to create a template with the specified name and a table to which the template object belongs. Parameter(s): Return: Example: createByTemplateField()consttemplate=newSimpleTemplate();ss.info(JSON.stringify(template.createByTemplateField({'subject':'New subject'},'task','New task template'))); Use this method to get a template from the template storage by its unique name. Parameter(s): Return: Example: get()consttemplate=newSimpleTemplate();template.get('Record template');",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 6,
        "heading": "createByTemplateField(template, tableName, templateName)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/6"
      }
    },
    {
      "text": "Use this method to get a template from the template storage by its unique name. Parameter(s): Return: Example: get()consttemplate=newSimpleTemplate();template.get('Record template');",
      "metadata": {
        "doc_id": "simpletemplate_392612bce25b",
        "title": "SimpleTemplate",
        "section_id": 7,
        "heading": "get(templateName)​",
        "chunk_index": 0,
        "source": "simpletemplate_392612bce25b/7"
      }
    },
    {
      "text": "Use this method to return the strings from the message body that were produced by theprint()method. Return: Example: getPrint()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.getPrint();})(current,template,email,event); Use this message to return the number of spaces in the message body that were produced by thespace(spaces)method. Return: Example: getSpace()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.getSpace();})(current,template,email,event); Use this method to insert the text string into the message body. Parameter(s): Return: Example: print()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.print('SimpleOne');})(current,template,email,event); Use this method to insert a sequence of spaces (one after another) in the message body. Parameter(s): Return: Example: space()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.space(3);})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpletemplateprinter_d3440867889e",
        "title": "SimpleTemplatePrinter",
        "section_id": 1,
        "heading": "getPrint()​",
        "chunk_index": 0,
        "source": "simpletemplateprinter_d3440867889e/1"
      }
    },
    {
      "text": "Use this message to return the number of spaces in the message body that were produced by thespace(spaces)method. Return: Example: getSpace()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.getSpace();})(current,template,email,event); Use this method to insert the text string into the message body. Parameter(s): Return: Example: print()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.print('SimpleOne');})(current,template,email,event); Use this method to insert a sequence of spaces (one after another) in the message body. Parameter(s): Return: Example: space()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.space(3);})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpletemplateprinter_d3440867889e",
        "title": "SimpleTemplatePrinter",
        "section_id": 2,
        "heading": "getSpace()​",
        "chunk_index": 0,
        "source": "simpletemplateprinter_d3440867889e/2"
      }
    },
    {
      "text": "Use this method to insert the text string into the message body. Parameter(s): Return: Example: print()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.print('SimpleOne');})(current,template,email,event); Use this method to insert a sequence of spaces (one after another) in the message body. Parameter(s): Return: Example: space()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.space(3);})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpletemplateprinter_d3440867889e",
        "title": "SimpleTemplatePrinter",
        "section_id": 3,
        "heading": "print(string)​",
        "chunk_index": 0,
        "source": "simpletemplateprinter_d3440867889e/3"
      }
    },
    {
      "text": "Use this method to insert a sequence of spaces (one after another) in the message body. Parameter(s): Return: Example: space()(functionrunNotificationScript(/* SimpleRecord */current,/* SimpleTemplatePrinter */template,/* SimpleEmailOutbound */email,/* SimpleRecord */event){template.space(3);})(current,template,email,event);",
      "metadata": {
        "doc_id": "simpletemplateprinter_d3440867889e",
        "title": "SimpleTemplatePrinter",
        "section_id": 4,
        "heading": "space(spaces)​",
        "chunk_index": 0,
        "source": "simpletemplateprinter_d3440867889e/4"
      }
    },
    {
      "text": "Parameter(s): Example: SimpleTime()constreportTime=newSimpleTime();ss.info(reportTime.getByFormat());//Info: 03:00:00 Use this method to get time value in theformatyou need. Parameter(s): Return: Example: getByFormat()constreportTime=newSimpleTime();reportTime.setValue('12:00:00');ss.info(reportTime.getByFormat('H:i'));//Info: 12:00 Use this method to get the time in the 'H:i:s' format. Return: Example: getDisplayValue()constreportTime=newSimpleTime('12:00:00');ss.info(reportTime.getDisplayValue());//Info: 12:00:00 Use this method to get the hours of the current time in the local time zone. Return: getHourLocalTime()constreportTime=newSimpleTime();reportTime.setValue('12:00:00');ss.info(reportTime.getHourLocalTime());//Info: 12 Use this method to get the hours of the current time in UTC. Return: getHourUTC()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getHourUTC());//Info: 09 Use this method to get a time value stored in the SimpleTime object that has the internal format (‘H:i:s’) and is in the system time zone.",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 1,
        "heading": "SimpleTime(time)​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/1"
      }
    },
    {
      "text": "Return: getValue()conststartPoint=newSimpleTime('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00 Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 1,
        "heading": "SimpleTime(time)​",
        "chunk_index": 1,
        "source": "simpletime_9258ddd30744/1"
      }
    },
    {
      "text": "Use this method to get time value in theformatyou need. Parameter(s): Return: Example: getByFormat()constreportTime=newSimpleTime();reportTime.setValue('12:00:00');ss.info(reportTime.getByFormat('H:i'));//Info: 12:00 Use this method to get the time in the 'H:i:s' format. Return: Example: getDisplayValue()constreportTime=newSimpleTime('12:00:00');ss.info(reportTime.getDisplayValue());//Info: 12:00:00 Use this method to get the hours of the current time in the local time zone. Return: getHourLocalTime()constreportTime=newSimpleTime();reportTime.setValue('12:00:00');ss.info(reportTime.getHourLocalTime());//Info: 12 Use this method to get the hours of the current time in UTC. Return: getHourUTC()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getHourUTC());//Info: 09 Use this method to get a time value stored in the SimpleTime object that has the internal format (‘H:i:s’) and is in the system time zone.",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 2,
        "heading": "getByFormat(format)​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/2"
      }
    },
    {
      "text": "Return: getValue()conststartPoint=newSimpleTime('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00 Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 2,
        "heading": "getByFormat(format)​",
        "chunk_index": 1,
        "source": "simpletime_9258ddd30744/2"
      }
    },
    {
      "text": "Return: Example: getDisplayValue()constreportTime=newSimpleTime('12:00:00');ss.info(reportTime.getDisplayValue());//Info: 12:00:00 Use this method to get the hours of the current time in the local time zone. Return: getHourLocalTime()constreportTime=newSimpleTime();reportTime.setValue('12:00:00');ss.info(reportTime.getHourLocalTime());//Info: 12 Use this method to get the hours of the current time in UTC. Return: getHourUTC()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getHourUTC());//Info: 09 Use this method to get a time value stored in the SimpleTime object that has the internal format (‘H:i:s’) and is in the system time zone. Return: getValue()conststartPoint=newSimpleTime('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00 Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 3,
        "heading": "getDisplayValue()​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/3"
      }
    },
    {
      "text": "Use this method to get the time in the 'H:i:s' format.",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 3,
        "heading": "getDisplayValue()​",
        "chunk_index": 1,
        "source": "simpletime_9258ddd30744/3"
      }
    },
    {
      "text": "Use this method to get the hours of the current time in the local time zone. Return: getHourLocalTime()constreportTime=newSimpleTime();reportTime.setValue('12:00:00');ss.info(reportTime.getHourLocalTime());//Info: 12 Use this method to get the hours of the current time in UTC. Return: getHourUTC()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getHourUTC());//Info: 09 Use this method to get a time value stored in the SimpleTime object that has the internal format (‘H:i:s’) and is in the system time zone. Return: getValue()conststartPoint=newSimpleTime('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00 Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 4,
        "heading": "getHourLocalTime()​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/4"
      }
    },
    {
      "text": "Use this method to get the hours of the current time in UTC. Return: getHourUTC()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getHourUTC());//Info: 09 Use this method to get a time value stored in the SimpleTime object that has the internal format (‘H:i:s’) and is in the system time zone. Return: getValue()conststartPoint=newSimpleTime('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00 Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 5,
        "heading": "getHourUTC()​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/5"
      }
    },
    {
      "text": "Use this method to get a time value stored in the SimpleTime object that has the internal format (‘H:i:s’) and is in the system time zone. Return: getValue()conststartPoint=newSimpleTime('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00 Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 6,
        "heading": "getValue()​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/6"
      }
    },
    {
      "text": "Use this method to determine the time of the SimpleTime object in the current time zone. Parameter(s): Return: setValue()conststartPoint=newSimpleTime();startPoint.setValue('12:00:00');ss.info(startPoint.getValue());//Info: 09:00:00",
      "metadata": {
        "doc_id": "simpletime_9258ddd30744",
        "title": "SimpleTime",
        "section_id": 7,
        "heading": "setValue(time)​",
        "chunk_index": 0,
        "source": "simpletime_9258ddd30744/7"
      }
    },
    {
      "text": "It always returnstrueif the current user has theadminrole. When checking a role that has theElevate privilegescheckbox selected, the method returnsfalseif the user with theadminrole has not elevated to the specified one.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 1,
        "heading": "getAccessToken()​",
        "chunk_index": 0,
        "source": "simpleuser_948a4b76b2e6/1"
      }
    },
    {
      "text": "It returns an empty string in the following cases: Return: Example: getAccessToken()constuser=newSimpleUser();ss.info(user.getAccessToken());// Info: PV8wLSJWEJONyvF87aIQn2b--7EMEhy_ Use this method to get the information about the current user in the given context. Return: Example: getContext()constuser=newSimpleUser();ss.info(user.getContext().username);// Info: admin Use this method to get the current user ID. Return: Example: getID()constuser=newSimpleUser();ss.info(user.getID());// Info: 155931135900000099 Use this method to get the value of the specifieduser preferencefor the current user. Parameter(s): Return: Example: getPreference()constuser=newSimpleUser();ss.info(user.getPreference('application'));// Info: 155931135900000002 Use this method to check if the current user has the specified role or theadminrole. Parameter(s): Return: Example: hasRole()constuser=newSimpleUser();ss.info(user.hasRole('service_owner'));// Info: false Use this method to set a value for theuser preferencesettings of the current user.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 1,
        "heading": "getAccessToken()​",
        "chunk_index": 1,
        "source": "simpleuser_948a4b76b2e6/1"
      }
    },
    {
      "text": "The system creates a preference with the specified name for the current user, if such a preference does not exist.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 1,
        "heading": "getAccessToken()​",
        "chunk_index": 2,
        "source": "simpleuser_948a4b76b2e6/1"
      }
    },
    {
      "text": "For example, check if a system user or employee has additional attributes compared to regular users.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 1,
        "heading": "getAccessToken()​",
        "chunk_index": 3,
        "source": "simpleuser_948a4b76b2e6/1"
      }
    },
    {
      "text": "Use this method to return an access token of the current user within the current session.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 1,
        "heading": "getAccessToken()​",
        "chunk_index": 4,
        "source": "simpleuser_948a4b76b2e6/1"
      }
    },
    {
      "text": "Use this method to get the information about the current user in the given context. Return: Example: getContext()constuser=newSimpleUser();ss.info(user.getContext().username);// Info: admin Use this method to get the current user ID. Return: Example: getID()constuser=newSimpleUser();ss.info(user.getID());// Info: 155931135900000099 Use this method to get the value of the specifieduser preferencefor the current user. Parameter(s): Return: Example: getPreference()constuser=newSimpleUser();ss.info(user.getPreference('application'));// Info: 155931135900000002 Use this method to check if the current user has the specified role or theadminrole. Parameter(s): Return: Example: hasRole()constuser=newSimpleUser();ss.info(user.hasRole('service_owner'));// Info: false Use this method to set a value for theuser preferencesettings of the current user.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 2,
        "heading": "getContext()​",
        "chunk_index": 0,
        "source": "simpleuser_948a4b76b2e6/2"
      }
    },
    {
      "text": "It always returnstrueif the current user has theadminrole. When checking a role that has theElevate privilegescheckbox selected, the method returnsfalseif the user with theadminrole has not elevated to the specified one.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 2,
        "heading": "getContext()​",
        "chunk_index": 1,
        "source": "simpleuser_948a4b76b2e6/2"
      }
    },
    {
      "text": "For example, check if a system user or employee has additional attributes compared to regular users.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 2,
        "heading": "getContext()​",
        "chunk_index": 2,
        "source": "simpleuser_948a4b76b2e6/2"
      }
    },
    {
      "text": "The system creates a preference with the specified name for the current user, if such a preference does not exist.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 2,
        "heading": "getContext()​",
        "chunk_index": 3,
        "source": "simpleuser_948a4b76b2e6/2"
      }
    },
    {
      "text": "It always returnstrueif the current user has theadminrole. When checking a role that has theElevate privilegescheckbox selected, the method returnsfalseif the user with theadminrole has not elevated to the specified one.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 3,
        "heading": "getID()​",
        "chunk_index": 0,
        "source": "simpleuser_948a4b76b2e6/3"
      }
    },
    {
      "text": "Return: Example: getID()constuser=newSimpleUser();ss.info(user.getID());// Info: 155931135900000099 Use this method to get the value of the specifieduser preferencefor the current user. Parameter(s): Return: Example: getPreference()constuser=newSimpleUser();ss.info(user.getPreference('application'));// Info: 155931135900000002 Use this method to check if the current user has the specified role or theadminrole. Parameter(s): Return: Example: hasRole()constuser=newSimpleUser();ss.info(user.hasRole('service_owner'));// Info: false Use this method to set a value for theuser preferencesettings of the current user. Parameter(s): Return: Example: setPreference()constuser=newSimpleUser();user.setPreference('language','en');ss.info(user.getPreference('language'));// Info: en",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 3,
        "heading": "getID()​",
        "chunk_index": 1,
        "source": "simpleuser_948a4b76b2e6/3"
      }
    },
    {
      "text": "The system creates a preference with the specified name for the current user, if such a preference does not exist.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 3,
        "heading": "getID()​",
        "chunk_index": 2,
        "source": "simpleuser_948a4b76b2e6/3"
      }
    },
    {
      "text": "Use this method to get the value of the specifieduser preferencefor the current user. The system creates a preference with the specified name for the current user, if such a preference does not exist.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 4,
        "heading": "getPreference(preferenceName)​",
        "chunk_index": 0,
        "source": "simpleuser_948a4b76b2e6/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getPreference()constuser=newSimpleUser();ss.info(user.getPreference('application'));// Info: 155931135900000002 Use this method to check if the current user has the specified role or theadminrole. Parameter(s): Return: Example: hasRole()constuser=newSimpleUser();ss.info(user.hasRole('service_owner'));// Info: false Use this method to set a value for theuser preferencesettings of the current user. Parameter(s): Return: Example: setPreference()constuser=newSimpleUser();user.setPreference('language','en');ss.info(user.getPreference('language'));// Info: en",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 4,
        "heading": "getPreference(preferenceName)​",
        "chunk_index": 1,
        "source": "simpleuser_948a4b76b2e6/4"
      }
    },
    {
      "text": "It always returnstrueif the current user has theadminrole. When checking a role that has theElevate privilegescheckbox selected, the method returnsfalseif the user with theadminrole has not elevated to the specified one.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 4,
        "heading": "getPreference(preferenceName)​",
        "chunk_index": 2,
        "source": "simpleuser_948a4b76b2e6/4"
      }
    },
    {
      "text": "Use this method to check if the current user has the specified role or theadminrole. It always returnstrueif the current user has theadminrole. When checking a role that has theElevate privilegescheckbox selected, the method returnsfalseif the user with theadminrole has not elevated to the specified one.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 5,
        "heading": "hasRole(role)​",
        "chunk_index": 0,
        "source": "simpleuser_948a4b76b2e6/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hasRole()constuser=newSimpleUser();ss.info(user.hasRole('service_owner'));// Info: false Use this method to set a value for theuser preferencesettings of the current user. Parameter(s): Return: Example: setPreference()constuser=newSimpleUser();user.setPreference('language','en');ss.info(user.getPreference('language'));// Info: en",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 5,
        "heading": "hasRole(role)​",
        "chunk_index": 1,
        "source": "simpleuser_948a4b76b2e6/5"
      }
    },
    {
      "text": "The system creates a preference with the specified name for the current user, if such a preference does not exist.",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 5,
        "heading": "hasRole(role)​",
        "chunk_index": 2,
        "source": "simpleuser_948a4b76b2e6/5"
      }
    },
    {
      "text": "Use this method to set a value for theuser preferencesettings of the current user. The system creates a preference with the specified name for the current user, if such a preference does not exist. warningThevalueparameter must be no longer than 255 symbols. Parameter(s): Return: Example: setPreference()constuser=newSimpleUser();user.setPreference('language','en');ss.info(user.getPreference('language'));// Info: en",
      "metadata": {
        "doc_id": "simpleuser_948a4b76b2e6",
        "title": "SimpleUser Server-Side",
        "section_id": 6,
        "heading": "setPreference(preferenceName, value)​",
        "chunk_index": 0,
        "source": "simpleuser_948a4b76b2e6/6"
      }
    },
    {
      "text": "Use this constructor to create an instance of the SimpleUserCriteria class. SimpleUserCriteria()constuc=newSimpleUserCriteria(); Use this method to check if the user fits the criteria specified. Parameter(s): tipThecriteriaparameter may be specified as an array of strings, as shown in the second code example. Return: Examples: userAcceptanceByCriteria() with the String criteriaconstuc=newSimpleUserCriteria();ss.info(uc.userAcceptanceByCriteria(ss.getUserID(),'158617888715304763'));// Info: true userAcceptanceByCriteria() with the Array criteriaconstuc=newSimpleUserCriteria();ss.info(uc.userAcceptanceByCriteria(ss.getUserID(),['158617888715304763','158617888715304765']));// Info: false",
      "metadata": {
        "doc_id": "simpleusercriteria_66ee5d94b40d",
        "title": "SimpleUserCriteria",
        "section_id": 1,
        "heading": "SimpleUserCriteria()​",
        "chunk_index": 0,
        "source": "simpleusercriteria_66ee5d94b40d/1"
      }
    },
    {
      "text": "Use this method to check if the user fits the criteria specified. Parameter(s): tipThecriteriaparameter may be specified as an array of strings, as shown in the second code example. Return: Examples: userAcceptanceByCriteria() with the String criteriaconstuc=newSimpleUserCriteria();ss.info(uc.userAcceptanceByCriteria(ss.getUserID(),'158617888715304763'));// Info: true userAcceptanceByCriteria() with the Array criteriaconstuc=newSimpleUserCriteria();ss.info(uc.userAcceptanceByCriteria(ss.getUserID(),['158617888715304763','158617888715304765']));// Info: false",
      "metadata": {
        "doc_id": "simpleusercriteria_66ee5d94b40d",
        "title": "SimpleUserCriteria",
        "section_id": 2,
        "heading": "userAcceptanceByCriteria(user, criteria)​",
        "chunk_index": 0,
        "source": "simpleusercriteria_66ee5d94b40d/2"
      }
    },
    {
      "text": "Parameters: Return: Example: applyRetrievedPack()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.importRetrievedPack(current.sys_id)){constlocalizedMessage=message.getMessage('Error importing data');ss.addErrorMessage(localizedMessage);return;}if(!vcs.applyRetrievedPack(current.sys_id)){constlocalizedMessage=message.getMessage('Error applying data');ss.addErrorMessage(localizedMessage);return;} Use this method to create an up-to-date version of all records in the specified table. Parameter(s): Return: Example: createTableSnapshot()consttableName='sys_script';constvcs=newSimpleVcs();constversionCount=vcs.createTableSnapshot(tableName);ss.info(versionCount);// 1 Use this method to export a SOP file of the VCS records that are bound to the configuration pack with a unique ID. Parameter(s): Return: Example: exportLocalPackVcsRecords()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.exportLocalPackVcsRecords(vcsRetrievedPackId); Use this method to import the records of the retrieved pack that are uploaded in theVCS Preview Log(sys_vcs_preview_log) table to theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: importRetrievedPack()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();constresult=vcs.importRetrievedPack(vcsRetrievedPackId);ss.addInfoMessage(result); Use this method to check the record from theVCS Local Pack(sys_vcs_local_pack) table for references to thecurrent* records from theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: isLocalPackHasReferences()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isLocalPackHasReferences(vcsLocalPackId)){ss.addInfoMessage('Local Pack has current VCS records');} Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported. Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "Example: SimpleVcs()constvcs=newSimpleVcs(); Use this method after theimportRetrievedPack()method to apply the created version of the imported pack. This method creates a version of the pack. To apply the pack, use theapplyRetrievedPack()method.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 4,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 5,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "Use this constructor to instantiate a new empty object of the SimpleVcs class.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 1,
        "heading": "SimpleVcs()​",
        "chunk_index": 6,
        "source": "simplevcs_977ab0df01ab/1"
      }
    },
    {
      "text": "Use this method after theimportRetrievedPack()method to apply the created version of the imported pack. This method creates a version of the pack. To apply the pack, use theapplyRetrievedPack()method. The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 2,
        "heading": "applyRetrievedPack(retrievedPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/2"
      }
    },
    {
      "text": "Parameters: Return: Example: applyRetrievedPack()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.importRetrievedPack(current.sys_id)){constlocalizedMessage=message.getMessage('Error importing data');ss.addErrorMessage(localizedMessage);return;}if(!vcs.applyRetrievedPack(current.sys_id)){constlocalizedMessage=message.getMessage('Error applying data');ss.addErrorMessage(localizedMessage);return;} Use this method to create an up-to-date version of all records in the specified table. Parameter(s): Return: Example: createTableSnapshot()consttableName='sys_script';constvcs=newSimpleVcs();constversionCount=vcs.createTableSnapshot(tableName);ss.info(versionCount);// 1 Use this method to export a SOP file of the VCS records that are bound to the configuration pack with a unique ID. Parameter(s): Return: Example: exportLocalPackVcsRecords()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.exportLocalPackVcsRecords(vcsRetrievedPackId); Use this method to import the records of the retrieved pack that are uploaded in theVCS Preview Log(sys_vcs_preview_log) table to theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: importRetrievedPack()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();constresult=vcs.importRetrievedPack(vcsRetrievedPackId);ss.addInfoMessage(result); Use this method to check the record from theVCS Local Pack(sys_vcs_local_pack) table for references to thecurrent* records from theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: isLocalPackHasReferences()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isLocalPackHasReferences(vcsLocalPackId)){ss.addInfoMessage('Local Pack has current VCS records');} Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 2,
        "heading": "applyRetrievedPack(retrievedPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported. Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 2,
        "heading": "applyRetrievedPack(retrievedPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 2,
        "heading": "applyRetrievedPack(retrievedPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 2,
        "heading": "applyRetrievedPack(retrievedPackId)​",
        "chunk_index": 4,
        "source": "simplevcs_977ab0df01ab/2"
      }
    },
    {
      "text": "This pack must be in theCompletedstate. This method creates a version of the pack. To apply the pack, use theapplyRetrievedPack()method.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 3,
        "heading": "createTableSnapshot(tableName)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: createTableSnapshot()consttableName='sys_script';constvcs=newSimpleVcs();constversionCount=vcs.createTableSnapshot(tableName);ss.info(versionCount);// 1 Use this method to export a SOP file of the VCS records that are bound to the configuration pack with a unique ID. Parameter(s): Return: Example: exportLocalPackVcsRecords()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.exportLocalPackVcsRecords(vcsRetrievedPackId); Use this method to import the records of the retrieved pack that are uploaded in theVCS Preview Log(sys_vcs_preview_log) table to theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: importRetrievedPack()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();constresult=vcs.importRetrievedPack(vcsRetrievedPackId);ss.addInfoMessage(result); Use this method to check the record from theVCS Local Pack(sys_vcs_local_pack) table for references to thecurrent* records from theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: isLocalPackHasReferences()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isLocalPackHasReferences(vcsLocalPackId)){ss.addInfoMessage('Local Pack has current VCS records');} Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table. Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 3,
        "heading": "createTableSnapshot(tableName)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/3"
      }
    },
    {
      "text": "Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 3,
        "heading": "createTableSnapshot(tableName)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/3"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 3,
        "heading": "createTableSnapshot(tableName)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/3"
      }
    },
    {
      "text": "Use this method to create an up-to-date version of all records in the specified table.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 3,
        "heading": "createTableSnapshot(tableName)​",
        "chunk_index": 4,
        "source": "simplevcs_977ab0df01ab/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 3,
        "heading": "createTableSnapshot(tableName)​",
        "chunk_index": 5,
        "source": "simplevcs_977ab0df01ab/3"
      }
    },
    {
      "text": "This pack must be in theCompletedstate. This method creates a version of the pack. To apply the pack, use theapplyRetrievedPack()method.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 4,
        "heading": "exportLocalPackVcsRecords(sysVcsLocalPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/4"
      }
    },
    {
      "text": "Use this method to export a SOP file of the VCS records that are bound to the configuration pack with a unique ID. Parameter(s): Return: Example: exportLocalPackVcsRecords()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.exportLocalPackVcsRecords(vcsRetrievedPackId); Use this method to import the records of the retrieved pack that are uploaded in theVCS Preview Log(sys_vcs_preview_log) table to theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: importRetrievedPack()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();constresult=vcs.importRetrievedPack(vcsRetrievedPackId);ss.addInfoMessage(result); Use this method to check the record from theVCS Local Pack(sys_vcs_local_pack) table for references to thecurrent* records from theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: isLocalPackHasReferences()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isLocalPackHasReferences(vcsLocalPackId)){ss.addInfoMessage('Local Pack has current VCS records');} Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table. Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 4,
        "heading": "exportLocalPackVcsRecords(sysVcsLocalPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/4"
      }
    },
    {
      "text": "Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 4,
        "heading": "exportLocalPackVcsRecords(sysVcsLocalPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/4"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 4,
        "heading": "exportLocalPackVcsRecords(sysVcsLocalPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 4,
        "heading": "exportLocalPackVcsRecords(sysVcsLocalPackId)​",
        "chunk_index": 4,
        "source": "simplevcs_977ab0df01ab/4"
      }
    },
    {
      "text": "This method creates a version of the pack. To apply the pack, use theapplyRetrievedPack()method. The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 5,
        "heading": "importRetrievedPack(retrievedPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/5"
      }
    },
    {
      "text": "Use this method to import the records of the retrieved pack that are uploaded in theVCS Preview Log(sys_vcs_preview_log) table to theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: importRetrievedPack()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();constresult=vcs.importRetrievedPack(vcsRetrievedPackId);ss.addInfoMessage(result); Use this method to check the record from theVCS Local Pack(sys_vcs_local_pack) table for references to thecurrent* records from theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: isLocalPackHasReferences()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isLocalPackHasReferences(vcsLocalPackId)){ss.addInfoMessage('Local Pack has current VCS records');} Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table. Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported. Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 5,
        "heading": "importRetrievedPack(retrievedPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 5,
        "heading": "importRetrievedPack(retrievedPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 5,
        "heading": "importRetrievedPack(retrievedPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack. Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 6,
        "heading": "isLocalPackHasReferences(localPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/6"
      }
    },
    {
      "text": "Use this method to check the record from theVCS Local Pack(sys_vcs_local_pack) table for references to thecurrent* records from theVCS Record(sys_vcs_record) table. Parameter(s): Return: Example: isLocalPackHasReferences()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isLocalPackHasReferences(vcsLocalPackId)){ss.addInfoMessage('Local Pack has current VCS records');} Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table. Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported. Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 6,
        "heading": "isLocalPackHasReferences(localPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 6,
        "heading": "isLocalPackHasReferences(localPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/6"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 6,
        "heading": "isLocalPackHasReferences(localPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isRetrievedPackHasReferences()constvcsRetrievedPackId='156144163704236641';constvcs=newSimpleVcs();if(vcs.isRetrievedPackHasReferences(vcsRetrievedPackId)){ss.addInfoMessage('Retrieved Pack has current VCS records');} warningThis method has been deprecated since version 1.2 and is no longer supported. Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 7,
        "heading": "isRetrievedPackHasReferences(retrievedPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/7"
      }
    },
    {
      "text": "Use this method to check the record from theVCS Retrieved pack(sys_vcs_retrieved_pack) table for references to the records from theVCS Records(sys_vcs_record) table. Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 7,
        "heading": "isRetrievedPackHasReferences(retrievedPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/7"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 7,
        "heading": "isRetrievedPackHasReferences(retrievedPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 7,
        "heading": "isRetrievedPackHasReferences(retrievedPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 8,
        "heading": "isRetrievedPackHasAttache(vcsRetrievedPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/8"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 8,
        "heading": "isRetrievedPackHasAttache(vcsRetrievedPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/8"
      }
    },
    {
      "text": "Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 8,
        "heading": "isRetrievedPackHasAttache(vcsRetrievedPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 8,
        "heading": "isRetrievedPackHasAttache(vcsRetrievedPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/8"
      }
    },
    {
      "text": "warningThis method has been deprecated since version 1.2 and is no longer supported.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 8,
        "heading": "isRetrievedPackHasAttache(vcsRetrievedPackId)​",
        "chunk_index": 4,
        "source": "simplevcs_977ab0df01ab/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: loadDataFromAttachment()constvcs=newSimpleVcs();constmessage=newSimpleMessage();if(!vcs.loadDataFromAttachment(current.sys_id)){ss.addErrorMessage('Error loading data');return;}ss.setRedirect(); Use this method to merge multiple local packs into one. Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 9,
        "heading": "loadDataFromAttachment(sysVcsRetrievedPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/9"
      }
    },
    {
      "text": "The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 9,
        "heading": "loadDataFromAttachment(sysVcsRetrievedPackId)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 9,
        "heading": "loadDataFromAttachment(sysVcsRetrievedPackId)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/9"
      }
    },
    {
      "text": "Use this method to load data from a configuration pack that has been added to theRetrieved Records(sys_vcs_retrieved_record) table record as a preview attachment. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 9,
        "heading": "loadDataFromAttachment(sysVcsRetrievedPackId)​",
        "chunk_index": 3,
        "source": "simplevcs_977ab0df01ab/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: mergeLocalPacks()constvcsLocalPackId=['157666651911972694','157665759017038346','157665742419415102'];constmergedName='Merged Pack 1';constmergedDesc='Merged Pack description 1';constvcs=newSimpleVcs();constmergedId=vcs.mergeLocalPacks(vcsLocalPackId,mergedName,mergedDesc);if(mergedId!=null){ss.info('Merged Local Pack has Id '+mergedId);}else{ss.info('Houston we have a problem with merging Packs');} Use this method to move many VCS records to the default local pack. Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack. Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 10,
        "heading": "mergeLocalPacks(rowIds, name, description)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/10"
      }
    },
    {
      "text": "Use this method to merge multiple local packs into one. The original local packs are permanently removed. The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 10,
        "heading": "mergeLocalPacks(rowIds, name, description)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: moveVcsRecordsToDefault()constvcs=newSimpleVcs();constresult=vcs.moveVcsRecordsToDefault([current.sys_id]);ss.info(result); Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack. Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 11,
        "heading": "moveVcsRecordsToDefault(versionIds)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/11"
      }
    },
    {
      "text": "Use this method to move many VCS records to the default local pack.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 11,
        "heading": "moveVcsRecordsToDefault(versionIds)​",
        "chunk_index": 1,
        "source": "simplevcs_977ab0df01ab/11"
      }
    },
    {
      "text": "The local pack can only be roll backed when it is in theRollback previewedstate.",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 11,
        "heading": "moveVcsRecordsToDefault(versionIds)​",
        "chunk_index": 2,
        "source": "simplevcs_977ab0df01ab/11"
      }
    },
    {
      "text": "Use this method to extract the records related to the configuration from theRetrieved Records(sys_vcs_retrieved_record) table and perform a pack preview. Parameter(s): Return: Example: preview()constvcs=newSimpleVcs();if(!vcs.preview(current.sys_id)){ss.addErrorMessage(localizedMessage);return;}ss.setRedirect(); Use this method to roll back a local pack. The local pack can only be roll backed when it is in theRollback previewedstate. Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 12,
        "heading": "preview(sysVcsRetrievedPackId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/12"
      }
    },
    {
      "text": "Use this method to roll back a local pack. The local pack can only be roll backed when it is in theRollback previewedstate. Parameter(s): Return: Example: rollback()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBack(vcsLocalPackId); Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 13,
        "heading": "rollback(packId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/13"
      }
    },
    {
      "text": "Use this method to preview the rollback results. Parameter(s): Return: Example: rollBackPreview()constvcsLocalPackId='156144163704236641';constvcs=newSimpleVcs();vcs.rollBackPreview(vcsLocalPackId);",
      "metadata": {
        "doc_id": "simplevcs_977ab0df01ab",
        "title": "SimpleVcs",
        "section_id": 14,
        "heading": "rollBackPreview(packId)​",
        "chunk_index": 0,
        "source": "simplevcs_977ab0df01ab/14"
      }
    },
    {
      "text": "Use this method to create a SimpleRestRequest object and pass parameters into it. noteIf parameters are not specified in therestRequestV1()method, manually set up the SimpleRestRequest object using its methods.TheSimpleRestRequestarticle describes how to pass values to therequestNameandmethodNameparameters. Parameter(s): Return: Example: restRequestV1()/* Create a 'Telegram' request in the REST Requests (sys_rest_requests) tableand a 'Send Message' method in the REST Request Methods (sys_rest_request_method) table related to the 'Telegram' request.Also, create 'chat_id' and 'text' Rest Request Method Param (sys_rest_request_method_param) related to the 'Send Message' method. */constrequest=sws.restRequestV1('Telegram','Send Message');request.setStringParameter('chat_id','123456789');request.setStringParameter('text','telegram');constresponse=request.execute();// ORconstrequest=sws.restRequestV1();request.setRequestUrl('https://api.telegram.org/bot1860462740:AAHyP6BMH2Mh-cXezrTVu2sJUoNYvimMRMQ/sendMessage');request.setQueryParameter('chat_id','123456789');request.setQueryParameter('text','telegram');constresponse=request.execute();",
      "metadata": {
        "doc_id": "simplewebservice_25806cad7b94",
        "title": "SimpleWebService",
        "section_id": 1,
        "heading": "restRequestV1(requestName, methodName)​",
        "chunk_index": 0,
        "source": "simplewebservice_25806cad7b94/1"
      }
    },
    {
      "text": "The system creates a version of the in theChecked outstate, after that the method returns the copied workflow. The method only starts the workflows with theCondition typeset toManual.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: cancel()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');if(simpleWorkflow.hasActiveContexts(current)){simpleWorkflow.cancel(current);} If a workflow has subflows, use the following script to cancel all contexts of the workflow and all subflows related to it: ExampleconstcurrentDocId=ss.getDocIdByIds(current.sys_db_table_id,current.sys_id);constwfContext=newSimpleRecord('wf_context');wfContext.addQuery('related_record_id',currentDocId);wfContext.addQuery('active',true);wfContext.orderBy('sys_id');wfContext.selectAttributes(['workflow_version_id']);wfContext.query();constdoesActiveWfExist=wfContext.getRowCount()>0;while(wfContext.next()){constsimpleWorkflow=newSimpleWorkflow(wfContext.workflow_version_id.getValue('workflow_id'));if(simpleWorkflow.hasActiveContexts(current)){simpleWorkflow.cancel(current);}}if(doesActiveWfExist){ss.addInfoMessage('All contexts have been canceled! Return: Example: copy()constworkflow=newSimpleWorkflow('159491114038814558');constcopiedWorkflow=workflow.copy();constsimpleWorkflow=newSimpleWorkflow(copiedWorkflow.sys_id); Use this method to delete the workflow and all its elements. Return: Example: delete()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcopiedWorkflow=simpleWorkflow.copy();constsimpleWorkflow=newSimpleWorkflow(copiedWorkflow.sys_id);if(simpleWorkflow.delete()){ss.info('Workflow deleted! Parameter(s): Return: Example: hasActiveContext()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');if(simpleWorkflow.hasActiveContexts(current)){simpleWorkflow.cancel(current);} Use this method to restart the workflow for the specified record. Parameter(s): Return: Example: start()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcontext=simpleWorkflow.start(current);if(context.state==='finished'){ss.info('Workflow finished!",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 1,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "Use this method to cancel all active contexts of the current record. ');} Use this method to check the current record for any active workflow contexts.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 2,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "Add this condition to your scripts when this method is used.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 3,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: revival()constcurrent=newSimpleRecord('task');current.get('164579976616724057');constapproval=newSimpleRecord('sys_approval');approval.get('164625329711023536');constexecutingActivity=newSimpleRecord('wf_executing_activity');executingActivity.get(approval.getValue('wf_executing_activity_id'));constcontext=newSimpleRecord('wf_context');context.get(executingActivity.getValue('context_id'));if(context.getValue('state')=='finished'||executingActivity.getValue('state')=='finished'){ss.info(`Revival for executing activity${executingActivity.sys_id}and current${current.getTableName()}:${current.sys_id}is not called because executing activity or context is already finished`);}else{constworkflow=newSimpleWorkflow();workflow.revival(executingActivity,current);} Use this method tostart the workflow.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 4,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "');} Use this method to start a subflow by executing activity.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 5,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "noteThis method only works when the workflow context and the required activity are not in theFinishedstate.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 1,
        "heading": "cancel(current)​",
        "chunk_index": 6,
        "source": "simpleworkflow_72aa3708d1e7/1"
      }
    },
    {
      "text": "Use this method to copy the workflow. The system creates a version of the in theChecked outstate, after that the method returns the copied workflow. ');} Use this method to check the current record for any active workflow contexts. The method only starts the workflows with theCondition typeset toManual.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 2,
        "heading": "copy(current)​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/2"
      }
    },
    {
      "text": "Return: Example: copy()constworkflow=newSimpleWorkflow('159491114038814558');constcopiedWorkflow=workflow.copy();constsimpleWorkflow=newSimpleWorkflow(copiedWorkflow.sys_id); Use this method to delete the workflow and all its elements. Return: Example: delete()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcopiedWorkflow=simpleWorkflow.copy();constsimpleWorkflow=newSimpleWorkflow(copiedWorkflow.sys_id);if(simpleWorkflow.delete()){ss.info('Workflow deleted! Parameter(s): Return: Example: hasActiveContext()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');if(simpleWorkflow.hasActiveContexts(current)){simpleWorkflow.cancel(current);} Use this method to restart the workflow for the specified record. Parameter(s): Return: Example: start()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcontext=simpleWorkflow.start(current);if(context.state==='finished'){ss.info('Workflow finished! Parameter(s): Return: Example: startSubflow();((current,activity)=>{constwfActivitySubflow=newSimpleRecord('wf_activity_subflow');wfActivitySubflow.get(activity.getValue('activity_id'));constworkflowManager=newSimpleWorkflow();constsubflowContext=workflowManager.startSubflow(activity,current,wfActivitySubflow.getValue('workflow_id'));ss.info(subflowContext.state);// Info: executing})(current,activity);",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 2,
        "heading": "copy(current)​",
        "chunk_index": 1,
        "source": "simpleworkflow_72aa3708d1e7/2"
      }
    },
    {
      "text": "');} Use this method to start a subflow by executing activity.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 2,
        "heading": "copy(current)​",
        "chunk_index": 2,
        "source": "simpleworkflow_72aa3708d1e7/2"
      }
    },
    {
      "text": "Add this condition to your scripts when this method is used.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 2,
        "heading": "copy(current)​",
        "chunk_index": 3,
        "source": "simpleworkflow_72aa3708d1e7/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: revival()constcurrent=newSimpleRecord('task');current.get('164579976616724057');constapproval=newSimpleRecord('sys_approval');approval.get('164625329711023536');constexecutingActivity=newSimpleRecord('wf_executing_activity');executingActivity.get(approval.getValue('wf_executing_activity_id'));constcontext=newSimpleRecord('wf_context');context.get(executingActivity.getValue('context_id'));if(context.getValue('state')=='finished'||executingActivity.getValue('state')=='finished'){ss.info(`Revival for executing activity${executingActivity.sys_id}and current${current.getTableName()}:${current.sys_id}is not called because executing activity or context is already finished`);}else{constworkflow=newSimpleWorkflow();workflow.revival(executingActivity,current);} Use this method tostart the workflow.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 2,
        "heading": "copy(current)​",
        "chunk_index": 4,
        "source": "simpleworkflow_72aa3708d1e7/2"
      }
    },
    {
      "text": "noteThis method only works when the workflow context and the required activity are not in theFinishedstate.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 2,
        "heading": "copy(current)​",
        "chunk_index": 5,
        "source": "simpleworkflow_72aa3708d1e7/2"
      }
    },
    {
      "text": "');} Use this method to check the current record for any active workflow contexts. Parameter(s): Return: Example: hasActiveContext()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');if(simpleWorkflow.hasActiveContexts(current)){simpleWorkflow.cancel(current);} Use this method to restart the workflow for the specified record. The method only starts the workflows with theCondition typeset toManual. Parameter(s): Return: Example: start()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcontext=simpleWorkflow.start(current);if(context.state==='finished'){ss.info('Workflow finished! Parameter(s): Return: Example: startSubflow();((current,activity)=>{constwfActivitySubflow=newSimpleRecord('wf_activity_subflow');wfActivitySubflow.get(activity.getValue('activity_id'));constworkflowManager=newSimpleWorkflow();constsubflowContext=workflowManager.startSubflow(activity,current,wfActivitySubflow.getValue('workflow_id'));ss.info(subflowContext.state);// Info: executing})(current,activity);",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 3,
        "heading": "delete()​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: revival()constcurrent=newSimpleRecord('task');current.get('164579976616724057');constapproval=newSimpleRecord('sys_approval');approval.get('164625329711023536');constexecutingActivity=newSimpleRecord('wf_executing_activity');executingActivity.get(approval.getValue('wf_executing_activity_id'));constcontext=newSimpleRecord('wf_context');context.get(executingActivity.getValue('context_id'));if(context.getValue('state')=='finished'||executingActivity.getValue('state')=='finished'){ss.info(`Revival for executing activity${executingActivity.sys_id}and current${current.getTableName()}:${current.sys_id}is not called because executing activity or context is already finished`);}else{constworkflow=newSimpleWorkflow();workflow.revival(executingActivity,current);} Use this method tostart the workflow.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 3,
        "heading": "delete()​",
        "chunk_index": 1,
        "source": "simpleworkflow_72aa3708d1e7/3"
      }
    },
    {
      "text": "Use this method to delete the workflow and all its elements. Return: Example: delete()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcopiedWorkflow=simpleWorkflow.copy();constsimpleWorkflow=newSimpleWorkflow(copiedWorkflow.sys_id);if(simpleWorkflow.delete()){ss.info('Workflow deleted!",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 3,
        "heading": "delete()​",
        "chunk_index": 2,
        "source": "simpleworkflow_72aa3708d1e7/3"
      }
    },
    {
      "text": "Add this condition to your scripts when this method is used.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 3,
        "heading": "delete()​",
        "chunk_index": 3,
        "source": "simpleworkflow_72aa3708d1e7/3"
      }
    },
    {
      "text": "noteThis method only works when the workflow context and the required activity are not in theFinishedstate.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 3,
        "heading": "delete()​",
        "chunk_index": 4,
        "source": "simpleworkflow_72aa3708d1e7/3"
      }
    },
    {
      "text": "');} Use this method to start a subflow by executing activity.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 3,
        "heading": "delete()​",
        "chunk_index": 5,
        "source": "simpleworkflow_72aa3708d1e7/3"
      }
    },
    {
      "text": "Use this method to check the current record for any active workflow contexts. Parameter(s): Return: Example: hasActiveContext()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');if(simpleWorkflow.hasActiveContexts(current)){simpleWorkflow.cancel(current);} Use this method to restart the workflow for the specified record. The method only starts the workflows with theCondition typeset toManual. Parameter(s): Return: Example: start()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcontext=simpleWorkflow.start(current);if(context.state==='finished'){ss.info('Workflow finished! Parameter(s): Return: Example: startSubflow();((current,activity)=>{constwfActivitySubflow=newSimpleRecord('wf_activity_subflow');wfActivitySubflow.get(activity.getValue('activity_id'));constworkflowManager=newSimpleWorkflow();constsubflowContext=workflowManager.startSubflow(activity,current,wfActivitySubflow.getValue('workflow_id'));ss.info(subflowContext.state);// Info: executing})(current,activity);",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 4,
        "heading": "hasActiveContexts(current)​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: revival()constcurrent=newSimpleRecord('task');current.get('164579976616724057');constapproval=newSimpleRecord('sys_approval');approval.get('164625329711023536');constexecutingActivity=newSimpleRecord('wf_executing_activity');executingActivity.get(approval.getValue('wf_executing_activity_id'));constcontext=newSimpleRecord('wf_context');context.get(executingActivity.getValue('context_id'));if(context.getValue('state')=='finished'||executingActivity.getValue('state')=='finished'){ss.info(`Revival for executing activity${executingActivity.sys_id}and current${current.getTableName()}:${current.sys_id}is not called because executing activity or context is already finished`);}else{constworkflow=newSimpleWorkflow();workflow.revival(executingActivity,current);} Use this method tostart the workflow.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 4,
        "heading": "hasActiveContexts(current)​",
        "chunk_index": 1,
        "source": "simpleworkflow_72aa3708d1e7/4"
      }
    },
    {
      "text": "');} Use this method to start a subflow by executing activity.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 4,
        "heading": "hasActiveContexts(current)​",
        "chunk_index": 2,
        "source": "simpleworkflow_72aa3708d1e7/4"
      }
    },
    {
      "text": "Add this condition to your scripts when this method is used.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 4,
        "heading": "hasActiveContexts(current)​",
        "chunk_index": 3,
        "source": "simpleworkflow_72aa3708d1e7/4"
      }
    },
    {
      "text": "noteThis method only works when the workflow context and the required activity are not in theFinishedstate.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 4,
        "heading": "hasActiveContexts(current)​",
        "chunk_index": 4,
        "source": "simpleworkflow_72aa3708d1e7/4"
      }
    },
    {
      "text": "The method only starts the workflows with theCondition typeset toManual. Parameter(s): Return: Example: start()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcontext=simpleWorkflow.start(current);if(context.state==='finished'){ss.info('Workflow finished! Parameter(s): Return: Example: startSubflow();((current,activity)=>{constwfActivitySubflow=newSimpleRecord('wf_activity_subflow');wfActivitySubflow.get(activity.getValue('activity_id'));constworkflowManager=newSimpleWorkflow();constsubflowContext=workflowManager.startSubflow(activity,current,wfActivitySubflow.getValue('workflow_id'));ss.info(subflowContext.state);// Info: executing})(current,activity);",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 5,
        "heading": "revival(executingActivity, current)​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/5"
      }
    },
    {
      "text": "Add this condition to your scripts when this method is used.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 5,
        "heading": "revival(executingActivity, current)​",
        "chunk_index": 1,
        "source": "simpleworkflow_72aa3708d1e7/5"
      }
    },
    {
      "text": "');} Use this method to start a subflow by executing activity.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 5,
        "heading": "revival(executingActivity, current)​",
        "chunk_index": 2,
        "source": "simpleworkflow_72aa3708d1e7/5"
      }
    },
    {
      "text": "Use this method to restart the workflow for the specified record.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 5,
        "heading": "revival(executingActivity, current)​",
        "chunk_index": 3,
        "source": "simpleworkflow_72aa3708d1e7/5"
      }
    },
    {
      "text": "noteThis method only works when the workflow context and the required activity are not in theFinishedstate.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 5,
        "heading": "revival(executingActivity, current)​",
        "chunk_index": 4,
        "source": "simpleworkflow_72aa3708d1e7/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: revival()constcurrent=newSimpleRecord('task');current.get('164579976616724057');constapproval=newSimpleRecord('sys_approval');approval.get('164625329711023536');constexecutingActivity=newSimpleRecord('wf_executing_activity');executingActivity.get(approval.getValue('wf_executing_activity_id'));constcontext=newSimpleRecord('wf_context');context.get(executingActivity.getValue('context_id'));if(context.getValue('state')=='finished'||executingActivity.getValue('state')=='finished'){ss.info(`Revival for executing activity${executingActivity.sys_id}and current${current.getTableName()}:${current.sys_id}is not called because executing activity or context is already finished`);}else{constworkflow=newSimpleWorkflow();workflow.revival(executingActivity,current);} Use this method tostart the workflow.",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 5,
        "heading": "revival(executingActivity, current)​",
        "chunk_index": 5,
        "source": "simpleworkflow_72aa3708d1e7/5"
      }
    },
    {
      "text": "Use this method tostart the workflow. The method only starts the workflows with theCondition typeset toManual. Parameter(s): Return: Example: start()constsimpleWorkflow=newSimpleWorkflow('159491114038814558');constcontext=simpleWorkflow.start(current);if(context.state==='finished'){ss.info('Workflow finished! ');} Use this method to start a subflow by executing activity. Parameter(s): Return: Example: startSubflow();((current,activity)=>{constwfActivitySubflow=newSimpleRecord('wf_activity_subflow');wfActivitySubflow.get(activity.getValue('activity_id'));constworkflowManager=newSimpleWorkflow();constsubflowContext=workflowManager.startSubflow(activity,current,wfActivitySubflow.getValue('workflow_id'));ss.info(subflowContext.state);// Info: executing})(current,activity);",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 6,
        "heading": "start(current)​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/6"
      }
    },
    {
      "text": "Use this method to start a subflow by executing activity. Parameter(s): Return: Example: startSubflow();((current,activity)=>{constwfActivitySubflow=newSimpleRecord('wf_activity_subflow');wfActivitySubflow.get(activity.getValue('activity_id'));constworkflowManager=newSimpleWorkflow();constsubflowContext=workflowManager.startSubflow(activity,current,wfActivitySubflow.getValue('workflow_id'));ss.info(subflowContext.state);// Info: executing})(current,activity);",
      "metadata": {
        "doc_id": "simpleworkflow_72aa3708d1e7",
        "title": "SimpleWorkflow",
        "section_id": 7,
        "heading": "startSubflow(executingActivity, current, workflowId)​",
        "chunk_index": 0,
        "source": "simpleworkflow_72aa3708d1e7/7"
      }
    }
  ]
}