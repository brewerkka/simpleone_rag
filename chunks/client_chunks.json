{
  "chunks": [
    {
      "text": "Use this method to return a string that contains the data passed inmsgKey. If a message contains any placeholders and theparamsobject has a key similar to the placeholder, the final message will contain its value. If a message contains any placeholders and theparamsobject has a key similar to the placeholder, the final message will contain its value.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 0,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "The returned data is translated into the user's language. ThemsgKeyparameter contains a string for translation, and thecallbackparameter is the function that is executed after the server response. ThemsgKeysparameter passes an array of strings for a translation, and the callback parameter is the function that is executed after the server response.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 1,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "Theconfigparameter is non-mandatory, so you can use acallbackfunction to get translations: getMessage()awaits_i18n.getMessage('Description',(response)=>{console.log(response)});// Description cautionThis method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. Return: Examples: getMessage()if(!s_form.getValue('condition')){awaits_i18n.getMessage('Specify conditions in \"Condition\" [condition] field. ',(response)=>{s_form.addErrorMessage(response);});returnfalse;} getMessage()constserviceNameValue='Email';s_i18n.getMessage('Sorry, The {serviceName} Service Is Temporarily Unavailable',{params:{\"serviceName\":serviceNameValue},language:\"en\",category:\"app\"},(response)=>console.log(response));// Sorry, The Email Service Is Temporarily Unavailable Use this method to return an array of strings that contains messages in a user language. Return: Examples: getMessages()constdata=\\{};constbtnTitles=['Accept','Cancel'];awaits_i18n.getMessages(btnTitles,(response)=>{[data.acceptBtnTitle,data.cancelBtnTitle]=response;});console.log(JSON.stringify(data));// {\"acceptBtnTitle\":\"Accept\",\"cancelBtnTitle\":\"Cancel\"} cautionIf you use the same placeholders for different messages, thegetMessages()method output contains the same values on their place.getMessages()window.s_i18n.getMessages(['The date and time should be in {translation}.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 2,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "','A user name must contain not less than 2 symbols {translation}. ',],{params:{'translation':'TEST'}},);This method returns the following messages:The date and time should be in TEST.A user name must contain not less than 2 symbols TEST.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 3,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "Thecategoryparameter can take on the values specified in theCategoryfield of theSource Message(source_message) table record. Thecategoryparameter can take on the values specified in theCategoryfield of theSource Message(source_message) table record.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 4,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword, as in the code example below.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 5,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "Parameter(s): Theconfigparameter is implemented as an object containing three other parameters: Thelanguageparameter can take on the values specified in theLanguages(sys_language) table. Parameter(s): Theconfigparameter is implemented as an object containing three other parameters: Thelanguageparameter can take on the values specified in theLanguages(sys_language) table.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 6,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "If this string has no localization for the current language, or it does not exist at all, the method returns themsgKeyvalue. If it is not specified, the current user's language is used when the method is called. If a string from the array has no localization for the current language, or it does not exist at all, the method returns its initial value. If it is not specified, the current user's language is used when the method is called.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 1,
        "heading": "getMessage(msgKey, config, callback)​",
        "chunk_index": 7,
        "source": "s-i18n_b6751ff1df14/1"
      }
    },
    {
      "text": "Use this method to return an array of strings that contains messages in a user language. Return: Examples: getMessages()constdata=\\{};constbtnTitles=['Accept','Cancel'];awaits_i18n.getMessages(btnTitles,(response)=>{[data.acceptBtnTitle,data.cancelBtnTitle]=response;});console.log(JSON.stringify(data));// {\"acceptBtnTitle\":\"Accept\",\"cancelBtnTitle\":\"Cancel\"} cautionIf you use the same placeholders for different messages, thegetMessages()method output contains the same values on their place.getMessages()window.s_i18n.getMessages(['The date and time should be in {translation}.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 0,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "','A user name must contain not less than 2 symbols {translation}. ',],{params:{'translation':'TEST'}},);This method returns the following messages:The date and time should be in TEST.A user name must contain not less than 2 symbols TEST.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 1,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword, as in the code example below.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 2,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "If a string from the array has no localization for the current language, or it does not exist at all, the method returns its initial value. If it is not specified, the current user's language is used when the method is called.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 3,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "If a message contains any placeholders and theparamsobject has a key similar to the placeholder, the final message will contain its value.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 4,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "ThemsgKeysparameter passes an array of strings for a translation, and the callback parameter is the function that is executed after the server response.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 5,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "Thecategoryparameter can take on the values specified in theCategoryfield of theSource Message(source_message) table record.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 6,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "Parameter(s): Theconfigparameter is implemented as an object containing three other parameters: Thelanguageparameter can take on the values specified in theLanguages(sys_language) table.",
      "metadata": {
        "doc_id": "s-i18n_b6751ff1df14",
        "title": "s_i18n",
        "section_id": 2,
        "heading": "getMessages(msgKey, config, callback)​",
        "chunk_index": 7,
        "source": "s-i18n_b6751ff1df14/2"
      }
    },
    {
      "text": "The results of the server-side method execution will be passed to the specifiedcallbackfunction. noteThecallbackfunction receives the answer element of the response. noteThecallbackfunction receives the answer element of the response.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 0,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "Use this method to pass the specified parameter name and value to the server-side function associated with the current SimpleAjax object. Parameter(s): Return: Example: addParam()constsAjax=newSimpleAjax('DurationCalculator');// call script includesAjax.addParam('sysparm_name','getDuration');// call class methodsAjax.addParam('sysparm_start',s_form.getValue('start'));// pass parametersAjax.getXML(callback);functioncallback(response){constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);} By calling this method, the client script sends a request to the server, where the method related to the current SimpleAjax object is executed with the specified parameters. Return: Example: getXML()constsAjax=newSimpleAjax('DurationCalculator');// call script includesAjax.addParam('sysparm_name','getDuration');// call class methodsAjax.addParam('sysparm_start',s_form.getValue('start'));// pass parametersAjax.getXML(callback);functioncallback(response){constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);} Use this method to run a script against a table specified. Parameter(s): Return: Example: runScript()constCURRENT_ID=s_form.getUniqueValue();constsimpleAjax=newSimpleAjax();awaitsimpleAjax.runScript(`const current = new SimpleRecord('task');current.get('${CURRENT_ID}');setResult(current.caller.email)`,null,(response)=>{console.log(response.data.result);}) Use this method to run a script. Parameter(s): Return: Example: runAdminScript()constsimpleAjax=newSimpleAjax();awaitsimpleAjax.runAdminScript(`const supportSiteURL = ss.getProperty('simple.auth_page.support_site');setResult(supportSiteURL)`,null,(response)=>{constserverData=response.data.result;console.log(serverData);})",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 1,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "The script runs with theACLrestrictions. There are noACLrestrictions for the script.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 2,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "Before using the script result, verify that theresponse.data.resultis not empty.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 3,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "cautionThe server-side script only runs aftergetXML()is called by the client script.The parameter name should start with thesysparm_prefix.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 4,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "Avoid using a predefinedsysparm_nameparameter name for passing the value to the function parameter.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 5,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "If a user that does not have theadminrole attempts to a run the script, the method returns an empty result ascallback.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 6,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "TheaddParam()method can be used several times with different parameters and values.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 1,
        "heading": "addParam(paramName, paramValue)​",
        "chunk_index": 7,
        "source": "simpleajax_e77b9c5d537e/1"
      }
    },
    {
      "text": "The results of the server-side method execution will be passed to the specifiedcallbackfunction. noteThecallbackfunction receives the answer element of the response. noteThecallbackfunction receives the answer element of the response.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 2,
        "heading": "getXML(callback)​",
        "chunk_index": 0,
        "source": "simpleajax_e77b9c5d537e/2"
      }
    },
    {
      "text": "The script runs with theACLrestrictions. There are noACLrestrictions for the script.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 2,
        "heading": "getXML(callback)​",
        "chunk_index": 1,
        "source": "simpleajax_e77b9c5d537e/2"
      }
    },
    {
      "text": "By calling this method, the client script sends a request to the server, where the method related to the current SimpleAjax object is executed with the specified parameters. Return: Example: getXML()constsAjax=newSimpleAjax('DurationCalculator');// call script includesAjax.addParam('sysparm_name','getDuration');// call class methodsAjax.addParam('sysparm_start',s_form.getValue('start'));// pass parametersAjax.getXML(callback);functioncallback(response){constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);} Use this method to run a script against a table specified. Parameter(s): Return: Example: runScript()constCURRENT_ID=s_form.getUniqueValue();constsimpleAjax=newSimpleAjax();awaitsimpleAjax.runScript(`const current = new SimpleRecord('task');current.get('${CURRENT_ID}');setResult(current.caller.email)`,null,(response)=>{console.log(response.data.result);}) Use this method to run a script. Parameter(s): Return: Example: runAdminScript()constsimpleAjax=newSimpleAjax();awaitsimpleAjax.runAdminScript(`const supportSiteURL = ss.getProperty('simple.auth_page.support_site');setResult(supportSiteURL)`,null,(response)=>{constserverData=response.data.result;console.log(serverData);})",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 2,
        "heading": "getXML(callback)​",
        "chunk_index": 2,
        "source": "simpleajax_e77b9c5d537e/2"
      }
    },
    {
      "text": "Before using the script result, verify that theresponse.data.resultis not empty.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 2,
        "heading": "getXML(callback)​",
        "chunk_index": 3,
        "source": "simpleajax_e77b9c5d537e/2"
      }
    },
    {
      "text": "If a user that does not have theadminrole attempts to a run the script, the method returns an empty result ascallback.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 2,
        "heading": "getXML(callback)​",
        "chunk_index": 4,
        "source": "simpleajax_e77b9c5d537e/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: runScript()constCURRENT_ID=s_form.getUniqueValue();constsimpleAjax=newSimpleAjax();awaitsimpleAjax.runScript(`const current = new SimpleRecord('task');current.get('${CURRENT_ID}');setResult(current.caller.email)`,null,(response)=>{console.log(response.data.result);}) Use this method to run a script. Parameter(s): Return: Example: runAdminScript()constsimpleAjax=newSimpleAjax();awaitsimpleAjax.runAdminScript(`const supportSiteURL = ss.getProperty('simple.auth_page.support_site');setResult(supportSiteURL)`,null,(response)=>{constserverData=response.data.result;console.log(serverData);})",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 3,
        "heading": "runScript(scriptValue, tableName, callback)​",
        "chunk_index": 0,
        "source": "simpleajax_e77b9c5d537e/3"
      }
    },
    {
      "text": "The script runs with theACLrestrictions. There are noACLrestrictions for the script.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 3,
        "heading": "runScript(scriptValue, tableName, callback)​",
        "chunk_index": 1,
        "source": "simpleajax_e77b9c5d537e/3"
      }
    },
    {
      "text": "Before using the script result, verify that theresponse.data.resultis not empty.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 3,
        "heading": "runScript(scriptValue, tableName, callback)​",
        "chunk_index": 2,
        "source": "simpleajax_e77b9c5d537e/3"
      }
    },
    {
      "text": "noteThecallbackfunction receives the answer element of the response. noteThecallbackfunction receives the answer element of the response.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 3,
        "heading": "runScript(scriptValue, tableName, callback)​",
        "chunk_index": 3,
        "source": "simpleajax_e77b9c5d537e/3"
      }
    },
    {
      "text": "Use this method to run a script against a table specified.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 3,
        "heading": "runScript(scriptValue, tableName, callback)​",
        "chunk_index": 4,
        "source": "simpleajax_e77b9c5d537e/3"
      }
    },
    {
      "text": "If a user that does not have theadminrole attempts to a run the script, the method returns an empty result ascallback.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 3,
        "heading": "runScript(scriptValue, tableName, callback)​",
        "chunk_index": 5,
        "source": "simpleajax_e77b9c5d537e/3"
      }
    },
    {
      "text": "Use this method to run a script. There are noACLrestrictions for the script.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 4,
        "heading": "runAdminScript(scriptValue, tableName, callback)​",
        "chunk_index": 0,
        "source": "simpleajax_e77b9c5d537e/4"
      }
    },
    {
      "text": "Before using the script result, verify that theresponse.data.resultis not empty.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 4,
        "heading": "runAdminScript(scriptValue, tableName, callback)​",
        "chunk_index": 1,
        "source": "simpleajax_e77b9c5d537e/4"
      }
    },
    {
      "text": "If a user that does not have theadminrole attempts to a run the script, the method returns an empty result ascallback.",
      "metadata": {
        "doc_id": "simpleajax_e77b9c5d537e",
        "title": "SimpleAjax",
        "section_id": 4,
        "heading": "runAdminScript(scriptValue, tableName, callback)​",
        "chunk_index": 2,
        "source": "simpleajax_e77b9c5d537e/4"
      }
    },
    {
      "text": "Use this method to subscribe to an event. Parameter(s): Return: Example: on()constobj=SimpleEventBus.on('myEvent',(data)=>{alert(data);})obj.unsubscribe(); Use this method in client scripts or widgets to initiate an event. Parameter(s): Return: Example: emit()SimpleEventBus.emit('myEvent','text') Use this method to delete an event. Parameter(s): Return: Example: deleteEvent()constobj=SimpleEventBus.deleteEvent('myEvent') Use this method to reset all events and subscriptions. Return: Example: reset()SimpleEventBus.reset()",
      "metadata": {
        "doc_id": "simpleeventbus_27c01adbaf63",
        "title": "SimpleEventBus",
        "section_id": 1,
        "heading": "on(eventType, callback)​",
        "chunk_index": 0,
        "source": "simpleeventbus_27c01adbaf63/1"
      }
    },
    {
      "text": "Use this method in client scripts or widgets to initiate an event. Parameter(s): Return: Example: emit()SimpleEventBus.emit('myEvent','text') Use this method to delete an event. Parameter(s): Return: Example: deleteEvent()constobj=SimpleEventBus.deleteEvent('myEvent') Use this method to reset all events and subscriptions. Return: Example: reset()SimpleEventBus.reset()",
      "metadata": {
        "doc_id": "simpleeventbus_27c01adbaf63",
        "title": "SimpleEventBus",
        "section_id": 2,
        "heading": "emit(eventType, data)​",
        "chunk_index": 0,
        "source": "simpleeventbus_27c01adbaf63/2"
      }
    },
    {
      "text": "Use this method to delete an event. Parameter(s): Return: Example: deleteEvent()constobj=SimpleEventBus.deleteEvent('myEvent') Use this method to reset all events and subscriptions. Return: Example: reset()SimpleEventBus.reset()",
      "metadata": {
        "doc_id": "simpleeventbus_27c01adbaf63",
        "title": "SimpleEventBus",
        "section_id": 3,
        "heading": "deleteEvent(eventType)​",
        "chunk_index": 0,
        "source": "simpleeventbus_27c01adbaf63/3"
      }
    },
    {
      "text": "Use this method to reset all events and subscriptions. Return: Example: reset()SimpleEventBus.reset()",
      "metadata": {
        "doc_id": "simpleeventbus_27c01adbaf63",
        "title": "SimpleEventBus",
        "section_id": 4,
        "heading": "reset()​",
        "chunk_index": 0,
        "source": "simpleeventbus_27c01adbaf63/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Use this method to display an error toast message in the lower right corner. Parameter(s): Return: Example: addErrorMessage()s_form.addErrorMessage('Please enter a valid email address using the following format: joe@example.com'); Use this method to display an informational toast message in the lower right corner. Parameter(s): Return: Example: addInfoMessage()s_form.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successful action in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: SimpleForm()window.s_widget_custom.submit=asyncfunction(){awaits_widget.serverUpdate();consttableName=s_widget.getFieldValue('table_name');constrecordId=s_widget.getFieldValue('record_id');constbuiltInForm=newSimpleForm(tableName,recordId);awaitbuiltInForm.save().then(s_form.save());s_modal.setShow(false);s_go.reloadWindow();} Use this object of theSimpleFormclass to interact with the modal window of the opened record from the client script of the form. The form is available by using the<Form>tag in the modal window widget. Access the object usings_form.modalForm. Return: Example: modalForm()s_form.modalForm.setValue('state','2') Within any record form, you can use predefined global variables.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 32,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 33,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 34,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 1,
        "heading": "SimpleForm(table, sys_id)​",
        "chunk_index": 35,
        "source": "_921dc3214bb0/1"
      }
    },
    {
      "text": "Return: Example: modalForm()s_form.modalForm.setValue('state','2') Within any record form, you can use predefined global variables. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Use this object of theSimpleFormclass to interact with the modal window of the opened record from the client script of the form. The form is available by using the<Form>tag in the modal window widget. Access the object usings_form.modalForm.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 32,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Use this method to display an error toast message in the lower right corner. Parameter(s): Return: Example: addErrorMessage()s_form.addErrorMessage('Please enter a valid email address using the following format: joe@example.com'); Use this method to display an informational toast message in the lower right corner. Parameter(s): Return: Example: addInfoMessage()s_form.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successful action in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 33,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 2,
        "heading": "modalForm()​",
        "chunk_index": 34,
        "source": "_921dc3214bb0/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Use this method to display an error toast message in the lower right corner. Parameter(s): Return: Example: addErrorMessage()s_form.addErrorMessage('Please enter a valid email address using the following format: joe@example.com'); Use this method to display an informational toast message in the lower right corner. Parameter(s): Return: Example: addInfoMessage()s_form.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successful action in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Within any record form, you can use predefined global variables.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 32,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 33,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 34,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 3,
        "heading": "Global variable usage​",
        "chunk_index": 35,
        "source": "_921dc3214bb0/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Use this method to display an error toast message in the lower right corner. Parameter(s): Return: Example: addErrorMessage()s_form.addErrorMessage('Please enter a valid email address using the following format: joe@example.com'); Use this method to display an informational toast message in the lower right corner. Parameter(s): Return: Example: addInfoMessage()s_form.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successful action in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 32,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 33,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 4,
        "heading": "s_form.addErrorMessage(message)​",
        "chunk_index": 34,
        "source": "_921dc3214bb0/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Use this method to display an informational toast message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 32,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 33,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 34,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addInfoMessage()s_form.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successful action in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 5,
        "heading": "s_form.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 35,
        "source": "_921dc3214bb0/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Use this method to display a message about a successful action in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 32,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 33,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 6,
        "heading": "s_form.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 34,
        "source": "_921dc3214bb0/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_form.addWarningMessage('This record has been modified by another user',3000); Use this method to add a choice option to the end of the choice field. Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Use this method to display a warning message in the lower right corner. warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 7,
        "heading": "s_form.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addOption()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to close all kinds of messages (both informational and error) in the form. Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "cautionThis method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "A user can add achoiceValuevalues defined forfieldNameinto the current set of the table options.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Use this method to add a choice option to the end of the choice field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 8,
        "heading": "s_form.addOption(fieldName, choiceValue)​",
        "chunk_index": 31,
        "source": "_921dc3214bb0/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Use this method to close all kinds of messages (both informational and error) in the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: clearMessages()s_i18n.getMessage('End date time cannot be less than start date time',(response)=>{s_form.clearMessages();s_form.addErrorMessage(response);}); Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 9,
        "heading": "s_form.clearMessages()​",
        "chunk_index": 30,
        "source": "_921dc3214bb0/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Use this method to remove all options from the choice list. Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearOptions()constchoices=['10','20','30'];s_form.clearOptions('contact_type');for(constoptionValueofchoices){awaits_form.addOption('contact_type',optionValue);} Use this method to clear out any field that is delete its value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 10,
        "heading": "s_form.clearOptions(fieldName)​",
        "chunk_index": 29,
        "source": "_921dc3214bb0/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: clearValue()if(!s_form.getValue('sprint')){s_form.clearValue('points');} Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Use this method to clear out any field that is delete its value. cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 11,
        "heading": "s_form.clearValue(fieldName)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isFieldChanged()if(s_form.isFieldChanged('state')&&s_form.getValue('state')!='new'){returnfalse;// abort form submit} Use this class property to return the current form ID. The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Use this method to verify whether the specified field has been changed. noteIf there is a client script changing the specified field is running on the form, this method returnstrue. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 12,
        "heading": "s_form.isFieldChanged(fieldName)​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array. Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Use thes_form.isFieldChanged(fieldName)method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Use this class property to return the current form ID. The form view ID is an ID of the record in theUI Forms(sys_ui_form) table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: formId()consturl=newURL(`${API_BASE_URL}/export/excel`);if(typeofs_form!==\"undefined\"){url.searchParams.set('form_id',s_form.formId);}window.open(url,\"_blank\"); Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 13,
        "heading": "s_form.formId​",
        "chunk_index": 28,
        "source": "_921dc3214bb0/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "The return value contains two keys: Parameter(s): Return: Example: getAllFields()if(!s_form.getAllFields(true).data.hasOwnProperty('state'))return; Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array. Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Use thes_form.isFieldChanged(fieldName)method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Use this method to get a list of fields with their values placed on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 14,
        "heading": "s_form.getAllFields()​",
        "chunk_index": 27,
        "source": "_921dc3214bb0/14"
      }
    },
    {
      "text": "Return: Example: s_form.getChanges()if(s_form.isChanged()){constchangedFields=s_form.getChanges();letpayload={};changedFields.forEach((field)=>{payload[field.fieldName]=field.currentValue;});SimpleStorage.setItem('payload',payload);} Use this method to return a label text value. Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Use this method to retrieve information about the changed fields: field name, previous value, current value. noteIf there is a client script changing some fields is running on this form, thegetChanges()method includes such fields in the array. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Both a user and a script can initiate the changes. Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 15,
        "heading": "s_form.getChanges()​",
        "chunk_index": 26,
        "source": "_921dc3214bb0/15"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getLabelOf()constFIELD_LABEL=s_form.getLabelOf('username');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get a displayableREMattribute value. Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Use this method to return a label text value. Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 16,
        "heading": "s_form.getLabelOf(fieldName)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/16"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMDisplayValue()s_form.addErrorMessage(`Service \"${s_form.getREMDisplayValue('service')}\" is not available`); Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 17,
        "heading": "s_form.getREMDisplayValue(fieldName)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/17"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Use this method to get a label text value of aREMattribute. Parameter(s): Return: Example: getREMLabelOf()constFIELD_LABEL=s_form.getREMLabelOf('phone');s_form.addErrorMessage(`Field \"${FIELD_LABEL}\" contains invalid characters.`); Use this method to get aREMattribute value. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 18,
        "heading": "s_form.getREMLabelOf(fieldName)​",
        "chunk_index": 25,
        "source": "_921dc3214bb0/18"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field typesin the table. Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getREMValue()if(s_form.getREMValue('model')){s_form.hideFieldMsg('model');} Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 19,
        "heading": "s_form.getREMValue(fieldName)​",
        "chunk_index": 24,
        "source": "_921dc3214bb0/19"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Use this method to get an array of sections. Return: Example: getSections()constsectionNames=s_form.getSections().map(section=>section.name);if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return an array that contains the names of all sections, visible and hidden. Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 20,
        "heading": "s_form.getSections()​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/20"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: getSectionNames()constsectionNames=s_form.getSectionNames()if(sectionNames.length){s_form.addInfoMessage(`You can move between${sectionNames.join(', ')}`sections);} Use this method to return a table name that the specified record relates to. Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Use this method to return an array that contains the names of all sections, visible and hidden.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 21,
        "heading": "s_form.getSectionNames()​",
        "chunk_index": 23,
        "source": "_921dc3214bb0/21"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Use this method to return a table name that the specified record relates to. Example:Table name– itsm_incidentTable title– Incidents Return: Example: getTableName()constTABLE_NAME=s_form.getTableName();console.log(TABLE_NAME); Use this method to return a unique record ID. Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "noteThe method returns the system table name, not the table title.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 22,
        "heading": "s_form.getTableName()​",
        "chunk_index": 22,
        "source": "_921dc3214bb0/22"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: getUniqueValue()constTABLE_NAME=s_form.getTableName();constRECORD_ID=s_form.getUniqueValue();constcurrentRecord=newSimpleRecord(TABLE_NAME);currentRecord.get(RECORD_ID,()=>{if(currentRecord.sys_id===RECORD_ID){s_form.addInfoMessage(currentRecord.sys_created_at);}}); Use this method to return the database value of the specified field. Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 23,
        "heading": "s_form.getUniqueValue()​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/23"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to thefield typesin the table. Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Use this method to return the database value of the specified field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getValue()constcallerId=s_form.getValue('caller_id');if(!callerId){constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){awaits_form.setValue('schedule',callerRecord.personal_schedule);}else{s_form.addInfoMessage('Users schedule is not defined');}});} Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 24,
        "heading": "s_form.getValue(fieldName)​",
        "chunk_index": 21,
        "source": "_921dc3214bb0/24"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getDisplayValue()s_form.addInfoMessage(`Service \"${s_form.getDisplayValue('service')}\" is not available`); Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Find the values represented in the client scripts according to the field types inthe table.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Use this method to return the displayed value of the field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 19,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 25,
        "heading": "s_form.getDisplayValue(fieldName)​",
        "chunk_index": 20,
        "source": "_921dc3214bb0/25"
      }
    },
    {
      "text": "Return: Example: goBack()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to get information whether a record form has been changed. Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "If it is not possible, the redirection leads to the list view of the current instance, for example, to a list of incidents from an incident record.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Use this method to perform a redirection to the previous page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 26,
        "heading": "s_form.goBack()​",
        "chunk_index": 18,
        "source": "_921dc3214bb0/26"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Return: Example: isChanged()if(s_form.isChanged()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();} Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Use this method to get information whether a record form has been changed. This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 27,
        "heading": "s_form.isChanged()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/27"
      }
    },
    {
      "text": "Use this method to hide informational or error messages in the specified form field. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideFieldMsg()if(s_form.getValue('state')){s_form.hideFieldMsg('state');} Use this method to hide all related lists on the form. Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 28,
        "heading": "s_form.hideFieldMsg(fieldName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/28"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Return: Example: hideRelatedList()if(s_form.getValue('type')=='internal'){s_form.hideRelatedLists();} Use this method to check if the specified field is mandatory. Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Use this method to hide all related lists on the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 29,
        "heading": "s_form.hideRelatedLists()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/29"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isMandatory()if(s_form.isMandatory('state')&&!s_form.getValue('state')){s_form.addInfoMessage('State cannot be None');} Use this method to specify a related list you need to hide. Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Use this method to check if the specified field is mandatory. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 30,
        "heading": "s_form.isMandatory(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/30"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hideRelatedList()if(s_form.getValue('type')=='external'){s_form.hideRelatedList('Customer');} Use this method to find out if the record is new. Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Use this method to specify a related list you need to hide.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 31,
        "heading": "s_form.hideRelatedList(relListTitle)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/31"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Return: Example: isNewRecord()if(s_form.isNewRecord()){awaits_form.setValue('state','new');s_form.setReadOnly('state',true);} Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Use this method to find out if the record is new.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 32,
        "heading": "s_form.isNewRecord()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/32"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_from.isReadonly()if(!s_form.isReadonly('state')){awaits_form.setValue('state','new');} Use this method to define if a specified section is visible or not. Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Use this method to verify whether a user can edit the specified field via the interface or the field is read-only. This method checks whether the specified field has been changed.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 33,
        "heading": "s_form.isReadonly(fieldName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/33"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getSectionNames()if(s_form.isSectionVisible('Instructions')){s_form.addInfoMessage('Check out the \"Instructions\" section',5000);} Use this method to check if the specified form is valid or not. Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Use this method to define if a specified section is visible or not.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 34,
        "heading": "s_form.isSectionVisible(sectionName)​",
        "chunk_index": 17,
        "source": "_921dc3214bb0/34"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Example: s_form.isValid()if(!s_form.isValid()){s_form.addErrorMessage('This form is invalid');} Use this method to check if the specified field is visible or not. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Use this method to check if the specified form is valid or not. Return: cautionIt makes sense to use this method if the form contains theDate and Time columns, as the method does not support validation checks for the fields of other types.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 35,
        "heading": "s_form.isValid()​",
        "chunk_index": 16,
        "source": "_921dc3214bb0/35"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: isVisible()if(s_form.isVisible('state')){s_form.setSectionDisplay('Controls',true);}\" showLineNumbers Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Use this method to check if the specified field is visible or not. This method checks whether the specified field has been changed.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 36,
        "heading": "s_form.isVisible(fieldName)​",
        "chunk_index": 15,
        "source": "_921dc3214bb0/36"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Return: Example: s_form.refreshUiActions()conststateValue=s_form.getValue('state');if(stateValue=='in-progress'){s_form.refreshUiActions();} Use this method to specify and delete an option from the choice list. Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Use this method to reload allUI actionson the form and verifies conditions to display a button that are set for these UI actions without refreshing the page.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 37,
        "heading": "s_form.refreshUiActions()​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/37"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Use this method to specify and delete an option from the choice list.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Return: Example: removeOption()constserviceId=s_form.getValue('service');if(serviceId){constservice=newSimpleRecord('sys_cmdb_ci_service');service.get(serviceId,()=>{if(service.business_criticality>'1'){s_form.removeOption('impact','low');s_form.removeOption('urgency','low');}});} Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 38,
        "heading": "s_form.removeOption(fieldName, choiceValue)​",
        "chunk_index": 14,
        "source": "_921dc3214bb0/38"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Use this method to save a record without leaving its form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Return: Example: save()constsysId=awaits_form.save().finally(__resolveServerResponse);awaits_user.setPreference(preferenceApplicationName,packApplicationId);awaits_user.setPreference(preferenceLocalPackName,sysId);awaits_pref.refresh(); Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 39,
        "heading": "s_form.save()​",
        "chunk_index": 13,
        "source": "_921dc3214bb0/39"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setLabelOf()if(s_form.getTableName()==\"employee\"){s_form.setLabelOf(\"email\",\"Personal Email\");s_form.setLabelOf(\"manager.email\",\"Manager's Email\");}else{s_form.setLabelOf(\"email\",\"Email\");} Use this method to change a specified field to a mandatory field that is it cannot benull. Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Use this method to set a text value of the field label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 40,
        "heading": "s_form.setLabelOf(fieldName, value)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/40"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setMandatory()constscriptType=s_form.getValue('type');constmandatoryColumn=['onChange','onCellEdit'].includes(scriptType);s_form.setVisible('column_id',mandatoryColumn);s_form.setMandatory('column_id',mandatoryColumn); Use this method to change a specified field to read-only or editable. Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "Use this method to change a specified field to a mandatory field that is it cannot benull. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 41,
        "heading": "s_form.setMandatory(fieldName, mandatory)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/41"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Use this method to change a specified field to read-only or editable. !s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setReadOnly()if(s_form.getValue('any_tables')){s_form.setMandatory('table_id',false);s_form.setReadOnly('table_id',true);s_form.setVisible('table_id',false);} Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 42,
        "heading": "s_form.setReadOnly(fieldName, readOnly)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/42"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Use this method to set a plain text value of aREMattribute label. Parameter(s): Return: Example: setREMLabelOf()if(s_form.getTableName()=='user'){s_form.setREMLabelOf('email','Email');}else{s_form.setREMLabelOf('email','Personal Email');} Use this method to make a field specified by aREMattribute mandatory. Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 43,
        "heading": "s_form.setREMLabelOf(fieldName, value)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/43"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "Use this method to make a field specified by aREMattribute mandatory. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "!s_form.getValue('delivery');s_form.setREMMandatory('phone',isDeliveryFilled); Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 44,
        "heading": "s_form.setREMMandatory(fieldName, mandatory)​",
        "chunk_index": 12,
        "source": "_921dc3214bb0/44"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMReadOnly()if(s_form.isNewRecord()){s_form.setREMValue('state','new');s_form.setREMReadOnly('state',true);} Use this method to set a value of theREMattribute label. Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "Use this method to make a field specified by a REM attribute read-only.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 45,
        "heading": "s_form.setREMReadOnly(fieldName, readOnly)​",
        "chunk_index": 11,
        "source": "_921dc3214bb0/45"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMValue()awaits_form.setREMValue('state','new');s_form.save(); Use this method to define visibility of the field specified by aREMattribute. Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "Use this method to set a value of theREMattribute label.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 46,
        "heading": "s_form.setREMValue(fieldName, databaseValue)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/46"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Use this method to define visibility of the field specified by aREMattribute.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setREMVisible()s_form.setREMVisible('additional_info',!s_form.isNewRecord()); Use this method to specify the section you need to display. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 47,
        "heading": "s_form.setREMVisible(fieldName, display)​",
        "chunk_index": 10,
        "source": "_921dc3214bb0/47"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setSectionDisplay()if(s_form.getValue('state')=='7'){// Completeds_form.setSectionDisplay('Closure Information',true);s_form.setMandatory('closure_code',true);s_form.setMandatory('closure_notes',true);}else{s_form.setMandatory('closure_code',false);s_form.setMandatory('closure_notes',false);s_form.setSectionDisplay('Closure Information',false);} Use this method to set a field value. Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout. Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "Use this method to specify the section you need to display.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 48,
        "heading": "s_form.setSectionDisplay(sectionName, display)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/48"
      }
    },
    {
      "text": "cautionUses_form.clearValue()method to clear the field instead of setting an empty string value.Note that this method is asynchronous; for better performance, use theawaitkeyword as shown in the code example below. cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setValue()awaits_form.setValue('state','7');// Completedawaits_form.setValue('closure_notes',articleBodies.join('\\n'));awaits_form.setValue('closure_code','1');// Solved 1st Levels_form.save().then(()=>{s_i18n.getMessage(`The typical solution is applied`,(e)=>{s_form.addInfoMessage(e);})}); Use this method to manage the display of the fields that have been added to the form through theForm Layout.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 49,
        "heading": "s_form.setValue(fieldName, databaseValue)​",
        "chunk_index": 9,
        "source": "_921dc3214bb0/49"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "Use this method to manage the display of the fields that have been added to the form through theForm Layout. You can hide or show the fields. The hidden field state is similar to being removed from the form view.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "cautionHiding a field for which the mandatory attribute is set on a column level (including the mandatory override described in theColumn Overridearticle) leads to the validation errors after the form is saved or submitted from the client-side.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 7,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setVisible()if(!s_form.isNewRecord()){s_form.setVisible('subject',true);s_form.setVisible('reason',false);} Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 50,
        "heading": "s_form.setVisible(fieldName, display)​",
        "chunk_index": 8,
        "source": "_921dc3214bb0/50"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "Parameter(s): Return: Example: showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','info'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','warning'); showFieldMsg()s_form.showFieldMsg('subject','Cannot be empty','error'); Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "Use this method to display informational and warning messages, and messages containing error description under the specified form field.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 51,
        "heading": "s_form.showFieldMsg(fieldName, message, type)​",
        "chunk_index": 6,
        "source": "_921dc3214bb0/51"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 52,
        "heading": "s_form.showRelatedLists()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/52"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 52,
        "heading": "s_form.showRelatedLists()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/52"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 52,
        "heading": "s_form.showRelatedLists()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/52"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 52,
        "heading": "s_form.showRelatedLists()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/52"
      }
    },
    {
      "text": "Use this method to display all the lists related to the form. Return: Example: showRelatedLists()s_form.showRelatedLists(); Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 52,
        "heading": "s_form.showRelatedLists()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/52"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 52,
        "heading": "s_form.showRelatedLists()​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/52"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 53,
        "heading": "s_form.showRelatedList(listTitle)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/53"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 53,
        "heading": "s_form.showRelatedList(listTitle)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/53"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 53,
        "heading": "s_form.showRelatedList(listTitle)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/53"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 53,
        "heading": "s_form.showRelatedList(listTitle)​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/53"
      }
    },
    {
      "text": "Use this method to display a specified list related to the form. Parameter(s): Return: Example: showRelatedList()s_form.showRelatedList('UI Action'); Use this method to submit a record form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 53,
        "heading": "s_form.showRelatedList(listTitle)​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/53"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 53,
        "heading": "s_form.showRelatedList(listTitle)​",
        "chunk_index": 5,
        "source": "_921dc3214bb0/53"
      }
    },
    {
      "text": "Return: Example: submit()s_form.submit(); This subsection contains methods that are not recommended to use in application. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 54,
        "heading": "s_form.submit()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/54"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 54,
        "heading": "s_form.submit()​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/54"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 54,
        "heading": "s_form.submit()​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/54"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 54,
        "heading": "s_form.submit()​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/54"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 54,
        "heading": "s_form.submit()​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/54"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 55,
        "heading": "Deprecated methods​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/55"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 55,
        "heading": "Deprecated methods​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/55"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 55,
        "heading": "Deprecated methods​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/55"
      }
    },
    {
      "text": "This subsection contains methods that are not recommended to use in application.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 55,
        "heading": "Deprecated methods​",
        "chunk_index": 3,
        "source": "_921dc3214bb0/55"
      }
    },
    {
      "text": "They are deprecated as the platform evolves; new methods are developed instead of each of them.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 55,
        "heading": "Deprecated methods​",
        "chunk_index": 4,
        "source": "_921dc3214bb0/55"
      }
    },
    {
      "text": "This method checks whether the specified field has been changed. Use thes_form.isFieldChanged(fieldName)method instead. noteIf there is a client script changing a specified field on the form is running, thes_form.fieldHasChanges(fieldname)method returnstrue. Parameter(s): Return: Example: fieldHasChanges()console.log(s_form.fieldHasChanges('state')); This method gets t information whether a record form has been changed or not. Use thes_form.isChanged()method instead.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 56,
        "heading": "s_form.fieldHasChanges(fieldName)​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/56"
      }
    },
    {
      "text": "warningThis method is deprecated and not recommended to use. warningThis method is deprecated and not recommended to use.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 56,
        "heading": "s_form.fieldHasChanges(fieldName)​",
        "chunk_index": 1,
        "source": "_921dc3214bb0/56"
      }
    },
    {
      "text": "Both a user and a script can make changes to the form.",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 56,
        "heading": "s_form.fieldHasChanges(fieldName)​",
        "chunk_index": 2,
        "source": "_921dc3214bb0/56"
      }
    },
    {
      "text": "This method gets t information whether a record form has been changed or not. warningThis method is deprecated and not recommended to use. Use thes_form.isChanged()method instead. Return: Example: hasChanges()if(s_form.hasChanges()){s_form.save().then(()=>s_form.goBack());}else{s_form.goBack();}",
      "metadata": {
        "doc_id": "_921dc3214bb0",
        "title": "SimpleForm",
        "section_id": 57,
        "heading": "s_form.hasChanges()​",
        "chunk_index": 0,
        "source": "_921dc3214bb0/57"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 1,
        "heading": "Fields with no choice​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/1"
      }
    },
    {
      "text": "getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 1,
        "heading": "Fields with no choice​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/1"
      }
    },
    {
      "text": "Entry on the form: 1232886464646464446 getValue(): 1232886464646464446 getDisplayValue(): 1232886464646464446 Entry on the form: 123.45 getValue(): 123.45 getDisplayValue(): 123.45 Entry on the form: 01 days 01 hours 01 minutes 01 seconds getValue(): 90061000 getDisplayValue(): Entry on the form: begin_split getValue(): begin_split getDisplayValue(): begin_split Entry on the form: 2222222.2222 getValue(): 2222222.2222 getDisplayValue(): 2222222.2222 Entry on the form: <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getDisplayValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment! getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 1,
        "heading": "Fields with no choice​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/1"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 1,
        "heading": "Fields with no choice​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/1"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 1,
        "heading": "Fields with no choice​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/1"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 1,
        "heading": "Fields with no choice​",
        "chunk_index": 5,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/1"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 2,
        "heading": "Big Integer​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/2"
      }
    },
    {
      "text": "getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 2,
        "heading": "Big Integer​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/2"
      }
    },
    {
      "text": "Entry on the form: 1232886464646464446 getValue(): 1232886464646464446 getDisplayValue(): 1232886464646464446 Entry on the form: 123.45 getValue(): 123.45 getDisplayValue(): 123.45 Entry on the form: 01 days 01 hours 01 minutes 01 seconds getValue(): 90061000 getDisplayValue(): Entry on the form: begin_split getValue(): begin_split getDisplayValue(): begin_split Entry on the form: 2222222.2222 getValue(): 2222222.2222 getDisplayValue(): 2222222.2222 Entry on the form: <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getDisplayValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment! getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 2,
        "heading": "Big Integer​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/2"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 2,
        "heading": "Big Integer​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/2"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 2,
        "heading": "Big Integer​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/2"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 2,
        "heading": "Big Integer​",
        "chunk_index": 5,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/2"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 3,
        "heading": "Decimal​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/3"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 3,
        "heading": "Decimal​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/3"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 3,
        "heading": "Decimal​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/3"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 3,
        "heading": "Decimal​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/3"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 4,
        "heading": "Duration​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/4"
      }
    },
    {
      "text": "getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 4,
        "heading": "Duration​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/4"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 4,
        "heading": "Duration​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/4"
      }
    },
    {
      "text": "Entry on the form: 01 days 01 hours 01 minutes 01 seconds getValue(): 90061000 getDisplayValue(): Entry on the form: begin_split getValue(): begin_split getDisplayValue(): begin_split Entry on the form: 2222222.2222 getValue(): 2222222.2222 getDisplayValue(): 2222222.2222 Entry on the form: <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getDisplayValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment! getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 4,
        "heading": "Duration​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/4"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 4,
        "heading": "Duration​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/4"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 4,
        "heading": "Duration​",
        "chunk_index": 5,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/4"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 5,
        "heading": "Enum form_split_element_type​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/5"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 5,
        "heading": "Enum form_split_element_type​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/5"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 5,
        "heading": "Enum form_split_element_type​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/5"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 5,
        "heading": "Enum form_split_element_type​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/5"
      }
    },
    {
      "text": "Entry on the form: begin_split getValue(): begin_split getDisplayValue(): begin_split Entry on the form: 2222222.2222 getValue(): 2222222.2222 getDisplayValue(): 2222222.2222 Entry on the form: <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getDisplayValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment!",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 5,
        "heading": "Enum form_split_element_type​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/5"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 5,
        "heading": "Enum form_split_element_type​",
        "chunk_index": 5,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/5"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 6,
        "heading": "Float​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/6"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 6,
        "heading": "Float​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/6"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 6,
        "heading": "Float​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/6"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 6,
        "heading": "Float​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/6"
      }
    },
    {
      "text": "Entry on the form: 2222222.2222 getValue(): 2222222.2222 getDisplayValue(): 2222222.2222 Entry on the form: <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getDisplayValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment!",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 6,
        "heading": "Float​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/6"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 6,
        "heading": "Float​",
        "chunk_index": 5,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/6"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 7,
        "heading": "Html​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/7"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 7,
        "heading": "Html​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/7"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 7,
        "heading": "Html​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/7"
      }
    },
    {
      "text": "Entry on the form: <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> getDisplayValue(): <htmldata-lt-installed=\"true\"><head><title></title></head><bodydata-gramm=\"false\"data-lt-tmp-id=\"lt-752273\"><p>Вы находитесь на странице документации SimpleOne.</p></body></html> Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment!",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 7,
        "heading": "Html​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/7"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 7,
        "heading": "Html​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/7"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 7,
        "heading": "Html​",
        "chunk_index": 5,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/7"
      }
    },
    {
      "text": "Entry on the form: 123 getValue(): 123 getDisplayValue(): 123 Entry on the form:This is my best comment! getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 8,
        "heading": "Integer​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/8"
      }
    },
    {
      "text": "getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 8,
        "heading": "Integer​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/8"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 8,
        "heading": "Integer​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/8"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 8,
        "heading": "Integer​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/8"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 8,
        "heading": "Integer​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/8"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 9,
        "heading": "Journal Input​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/9"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 9,
        "heading": "Journal Input​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/9"
      }
    },
    {
      "text": "noteThe value disappears after saving the form. getValue(): - getDisplayValue(): - Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 9,
        "heading": "Journal Input​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/9"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 9,
        "heading": "Journal Input​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/9"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 9,
        "heading": "Journal Input​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/9"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 10,
        "heading": "JSON​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/10"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 10,
        "heading": "JSON​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/10"
      }
    },
    {
      "text": "Entry on the form: {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} getDisplayValue(): {\"name\":\"More\",\"sector\":\"Oil and gas\",\"top500\":1} Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form. getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 10,
        "heading": "JSON​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/10"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 10,
        "heading": "JSON​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/10"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 11,
        "heading": "Password​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/11"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 11,
        "heading": "Password​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/11"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 11,
        "heading": "Password​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/11"
      }
    },
    {
      "text": "Entry on the form:ItsaVeryStr0ngPassword noteThe value disappears after saving the form. getValue(): getDisplayValue(): - Entry on the form: 546789-2ssfd noteThe value disappears after saving the form. The link appears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 11,
        "heading": "Password​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/11"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 11,
        "heading": "Password​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/11"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 12,
        "heading": "Encrypted password​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/12"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 12,
        "heading": "Encrypted password​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/12"
      }
    },
    {
      "text": "Entry on the form: 546789-2ssfd noteThe value disappears after saving the form. The link appears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 12,
        "heading": "Encrypted password​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/12"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 12,
        "heading": "Encrypted password​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/12"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): - Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 12,
        "heading": "Encrypted password​",
        "chunk_index": 4,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/12"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 13,
        "heading": "Percent Complete​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/13"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 13,
        "heading": "Percent Complete​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/13"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 13,
        "heading": "Percent Complete​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/13"
      }
    },
    {
      "text": "Entry on the form: 99.00 getValue(): getDisplayValue(): 99.00 Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 13,
        "heading": "Percent Complete​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/13"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 14,
        "heading": "Phone​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/14"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 14,
        "heading": "Phone​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/14"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 14,
        "heading": "Phone​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/14"
      }
    },
    {
      "text": "Entry on the form: +79992848090 getValue(): +79992848090 getDisplayValue(): +79992848090 Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 14,
        "heading": "Phone​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/14"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 15,
        "heading": "Script​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/15"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 15,
        "heading": "Script​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/15"
      }
    },
    {
      "text": "Entry on the form: constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); getDisplayValue(): constcallerId=s_form.getValue('caller_id');if(!callerId)return;constcallerRecord=newSimpleRecord('employee');callerRecord.get(callerId,()=>{if(callerRecord.sys_id&&callerRecord.personal_schedule){s_form.setValue('schedule',callerRecord.personal_schedule);return;}s_form.addInfoMessage('Расписание пользователя не определено');}); Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 15,
        "heading": "Script​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/15"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 15,
        "heading": "Script​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/15"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 16,
        "heading": "Small Integer​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/16"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 16,
        "heading": "Small Integer​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/16"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 16,
        "heading": "Small Integer​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/16"
      }
    },
    {
      "text": "Entry on the form: 23 getValue(): 23 getDisplayValue(): 23 Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 16,
        "heading": "Small Integer​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/16"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 17,
        "heading": "String​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/17"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 17,
        "heading": "String​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/17"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 17,
        "heading": "String​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/17"
      }
    },
    {
      "text": "Entry on the form: Hello getValue(): Hello getDisplayValue(): Hello Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 17,
        "heading": "String​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/17"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 18,
        "heading": "Text​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/18"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 18,
        "heading": "Text​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/18"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 18,
        "heading": "Text​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/18"
      }
    },
    {
      "text": "Entry on the form: Kind regards,SimpleOne getValue(): 'Kind regards,\\nSimpleone' getDisplayValue(): 'Kind regards,\\nSimpleone' Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 18,
        "heading": "Text​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/18"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 19,
        "heading": "Translated text​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/19"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 19,
        "heading": "Translated text​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/19"
      }
    },
    {
      "text": "getValue(): Completed getDisplayValue(): Completed Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 19,
        "heading": "Translated text​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/19"
      }
    },
    {
      "text": "Entry on the form: Completed noteThe text value that has a translation in theSystem Translations(sys_translation) table is displayed in the language set inPreferences.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 19,
        "heading": "Translated text​",
        "chunk_index": 3,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/19"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 20,
        "heading": "URL​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/20"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 20,
        "heading": "URL​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/20"
      }
    },
    {
      "text": "Entry on the form: your.instance.simpleone.ru getValue(): your.instance.simpleone.ru getDisplayValue(): your.instance.simpleone.ru Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 20,
        "heading": "URL​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/20"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 21,
        "heading": "WYSIWYG​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/21"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 21,
        "heading": "WYSIWYG​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/21"
      }
    },
    {
      "text": "Entry on the form:  getValue():{\"display_value\":\"1234\",\"lexical_json_value\":\"{\\\"root\\\":{\\\"children\\:[\":rage:{\\\"children\\:[\":rage:{\\\"detail\\\":0,\\\"format\\\":0,\\\"mode\\\":\\\"normal\\\",\\\"style\\\":\\\"\\\",\\\"text\\\":\\\"1234\\\",\\\"type\\\":\\\"text\\\",\\\"version\\\":1}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"paragraph\\\",\\\"version\\\":1,\\\"textFormat\\\":0,\\\"textStyle\\\":\\\"\\\"}],\\\"direction\\\":null,\\\"format\\\":\\\"\\\",\\\"indent\\\":0,\\\"type\\\":\\\"root\\\",\\\"version\\\":1}}\"} getDisplayValue(): 1234 Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 21,
        "heading": "WYSIWYG​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/21"
      }
    },
    {
      "text": "getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 22,
        "heading": "Choice fields​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/22"
      }
    },
    {
      "text": "getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 22,
        "heading": "Choice fields​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/22"
      }
    },
    {
      "text": "Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected. getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 22,
        "heading": "Choice fields​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/22"
      }
    },
    {
      "text": "getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 23,
        "heading": "True/False​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/23"
      }
    },
    {
      "text": "getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 23,
        "heading": "True/False​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/23"
      }
    },
    {
      "text": "Entry on the form: A checkbox is selected getValue(): getDisplayValue(): Entry on the form: In the drop-down list, the optionChangedis selected. getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 23,
        "heading": "True/False​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/23"
      }
    },
    {
      "text": "getValue(): Changed getDisplayValue(): Changed Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00. getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 24,
        "heading": "Choice​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/24"
      }
    },
    {
      "text": "getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 24,
        "heading": "Choice​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/24"
      }
    },
    {
      "text": "Entry on the form: In the drop-down list, the optionChangedis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 24,
        "heading": "Choice​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/24"
      }
    },
    {
      "text": "getValue(): #fccb00 getDisplayValue(): #fccb00 Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday. getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 25,
        "heading": "Color​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/25"
      }
    },
    {
      "text": "getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 25,
        "heading": "Color​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/25"
      }
    },
    {
      "text": "Entry on the form: A yellow color selected in the palette, the field displays the hex of the color #fccb00.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 25,
        "heading": "Color​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/25"
      }
    },
    {
      "text": "getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 26,
        "heading": "Conditions​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/26"
      }
    },
    {
      "text": "getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 26,
        "heading": "Conditions​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/26"
      }
    },
    {
      "text": "Entry on the form:Activeis No getValue(): (active=0) getDisplayValue(): (active=0) Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 26,
        "heading": "Conditions​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/26"
      }
    },
    {
      "text": "getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 27,
        "heading": "Date​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/27"
      }
    },
    {
      "text": "getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 27,
        "heading": "Date​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/27"
      }
    },
    {
      "text": "Entry on the form: 2000-12-31 getValue(): 2000-12-31 getDisplayValue(): 2000-12-31 Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 27,
        "heading": "Date​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/27"
      }
    },
    {
      "text": "getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 28,
        "heading": "Date/Time​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/28"
      }
    },
    {
      "text": "getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 28,
        "heading": "Date/Time​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/28"
      }
    },
    {
      "text": "Entry on the form: 2022-12-22 19:22:22 getValue(): 2022-12-22 19:22:22 getDisplayValue(): 2022-12-22 19:22:22 Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 28,
        "heading": "Date/Time​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/28"
      }
    },
    {
      "text": "getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 29,
        "heading": "Date/Time Specific​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/29"
      }
    },
    {
      "text": "getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 29,
        "heading": "Date/Time Specific​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/29"
      }
    },
    {
      "text": "Entry on the form: 2022-08-31 07:34:12 getValue(): 2022-08-31 07:34:12 getDisplayValue(): 2022-08-31 07:34:12 Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 29,
        "heading": "Date/Time Specific​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/29"
      }
    },
    {
      "text": "getValue(): 28 getDisplayValue(): 28 Entry on the form: A record is selected, the field contains a reference with a displayable name. getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 30,
        "heading": "Days Of week​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/30"
      }
    },
    {
      "text": "getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 30,
        "heading": "Days Of week​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/30"
      }
    },
    {
      "text": "Entry on the form: Days selected from the list:Wednesday,Thursday, andFriday.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 30,
        "heading": "Days Of week​",
        "chunk_index": 2,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/30"
      }
    },
    {
      "text": "getValue(): getDisplayValue(): Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 31,
        "heading": "Document ID​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/31"
      }
    },
    {
      "text": "Entry on the form: A record is selected, the field contains a reference with a displayable name.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 31,
        "heading": "Document ID​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/31"
      }
    },
    {
      "text": "Entry on the form:Assigned userfield getValue(): 155931135900001080 getDisplayValue(): Assigned user Entry on the form: An image is attached. getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 32,
        "heading": "Field Name​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/32"
      }
    },
    {
      "text": "Entry on the form: An image is attached. The link appears after saving the form.",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 33,
        "heading": "Image​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/33"
      }
    },
    {
      "text": "getValue(): 168139165117069552 getDisplayValue(): Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 33,
        "heading": "Image​",
        "chunk_index": 1,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/33"
      }
    },
    {
      "text": "Entry on the form: The recordsAdmin UserandGuest Userare selected from the list, the field contains the displayed names of the records:AdminandGuest User. getValue(): 155931135900000001,100000000000000001 getDisplayValue(): Admin User, Guest User Entry on the form: The field contains a link to the tableServices. The link appears after saving the form. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 34,
        "heading": "List​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/34"
      }
    },
    {
      "text": "Entry on the form: The field contains a link to the tableServices. The link appears after saving the form. getValue(): 157233752019606969 getDisplayValue(): Services Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 35,
        "heading": "Record Class​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/35"
      }
    },
    {
      "text": "Entry on the form: A recordLevelis selected. getValue(): 167327603510375360 getDisplayValue(): Level Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 36,
        "heading": "Reference​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/36"
      }
    },
    {
      "text": "Entry on the form: Policy > Protected getValue(): getDisplayValue(): Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 37,
        "heading": "Template​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/37"
      }
    },
    {
      "text": "Entry on the form: 07:59:22 getValue(): 07:59:22 getDisplayValue(): 07:59:22",
      "metadata": {
        "doc_id": "column-types-in-client-and-server-scripts_da13971baa17",
        "title": "Column Types in Client and Server Scripts",
        "section_id": 38,
        "heading": "Time​",
        "chunk_index": 0,
        "source": "column-types-in-client-and-server-scripts_da13971baa17/38"
      }
    },
    {
      "text": "Define the relative path, see the example below.Not recommendedRecommendedhttps://instance.example.com/record/task/record/task Parameter(s): Return: Example: s_go.open()s_go.open('/list/user'); To open a URL in a new window, pass the '_blank' value to thetargetparameter. Example: s_go.open()s_go.open('/list/user','_blank'); s_go.open()s_go.open('/record/task?field_parent_id='+s_form.getUniqueValue(),'_blank',(newWindow)=>{s_i18n.getMessage('Create a new subtask',(response)=>{newWindow.s_widgets.getForm('Default').addInfoMessage(response,5000);});}); Use this method to open the list of the specified table. Parameter(s): Return: Example: s_go.openList()s_go.openList('user','condition=(active=1)&view=Support'); Use this method to open the form of the specified record.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 1,
        "heading": "s_go.open(url, target, callback)​",
        "chunk_index": 0,
        "source": "simplego_4158d562b3a6/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_go.openRecord()s_go.openRecord(s_user.user.essence,s_user.userID); Use this method to refresh the current page. Return: Example: s_go.reloadWindow()s_go.reloadWindow(); Use this method to get the current page URL. Return: Example: s_go.getURL()consturl=s_go.getURL(); Use this method to verify whether the form has been changed.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 1,
        "heading": "s_go.open(url, target, callback)​",
        "chunk_index": 1,
        "source": "simplego_4158d562b3a6/1"
      }
    },
    {
      "text": "As a result of the method, the user is redirected to the previous page.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 1,
        "heading": "s_go.open(url, target, callback)​",
        "chunk_index": 2,
        "source": "simplego_4158d562b3a6/1"
      }
    },
    {
      "text": "noteIt is not recommended to pass an absolute URL as a parameter value for this method, because it leads to scalability issues.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 1,
        "heading": "s_go.open(url, target, callback)​",
        "chunk_index": 3,
        "source": "simplego_4158d562b3a6/1"
      }
    },
    {
      "text": "If the form has been changed but not saved, a pop-up window appears notifying that the changes will be lost.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 1,
        "heading": "s_go.open(url, target, callback)​",
        "chunk_index": 4,
        "source": "simplego_4158d562b3a6/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_go.openList()s_go.openList('user','condition=(active=1)&view=Support'); Use this method to open the form of the specified record. Parameter(s): Return: Example: s_go.openRecord()s_go.openRecord(s_user.user.essence,s_user.userID); Use this method to refresh the current page.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 2,
        "heading": "s_go.openList(table, query)​",
        "chunk_index": 0,
        "source": "simplego_4158d562b3a6/2"
      }
    },
    {
      "text": "Return: Example: s_go.reloadWindow()s_go.reloadWindow(); Use this method to get the current page URL. Return: Example: s_go.getURL()consturl=s_go.getURL(); Use this method to verify whether the form has been changed.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 2,
        "heading": "s_go.openList(table, query)​",
        "chunk_index": 1,
        "source": "simplego_4158d562b3a6/2"
      }
    },
    {
      "text": "Use this method to open the list of the specified table.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 2,
        "heading": "s_go.openList(table, query)​",
        "chunk_index": 2,
        "source": "simplego_4158d562b3a6/2"
      }
    },
    {
      "text": "As a result of the method, the user is redirected to the previous page.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 2,
        "heading": "s_go.openList(table, query)​",
        "chunk_index": 3,
        "source": "simplego_4158d562b3a6/2"
      }
    },
    {
      "text": "If the form has been changed but not saved, a pop-up window appears notifying that the changes will be lost.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 2,
        "heading": "s_go.openList(table, query)​",
        "chunk_index": 4,
        "source": "simplego_4158d562b3a6/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_go.openRecord()s_go.openRecord(s_user.user.essence,s_user.userID); Use this method to refresh the current page. Return: Example: s_go.reloadWindow()s_go.reloadWindow(); Use this method to get the current page URL. Return: Example: s_go.getURL()consturl=s_go.getURL(); Use this method to verify whether the form has been changed.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 3,
        "heading": "s_go.openRecord(table, sys_id)​",
        "chunk_index": 0,
        "source": "simplego_4158d562b3a6/3"
      }
    },
    {
      "text": "Use this method to open the form of the specified record.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 3,
        "heading": "s_go.openRecord(table, sys_id)​",
        "chunk_index": 1,
        "source": "simplego_4158d562b3a6/3"
      }
    },
    {
      "text": "If the form has been changed but not saved, a pop-up window appears notifying that the changes will be lost.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 3,
        "heading": "s_go.openRecord(table, sys_id)​",
        "chunk_index": 2,
        "source": "simplego_4158d562b3a6/3"
      }
    },
    {
      "text": "As a result of the method, the user is redirected to the previous page.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 3,
        "heading": "s_go.openRecord(table, sys_id)​",
        "chunk_index": 3,
        "source": "simplego_4158d562b3a6/3"
      }
    },
    {
      "text": "Return: Example: s_go.reloadWindow()s_go.reloadWindow(); Use this method to get the current page URL. Return: Example: s_go.getURL()consturl=s_go.getURL(); Use this method to verify whether the form has been changed.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 4,
        "heading": "s_go.reloadWindow()​",
        "chunk_index": 0,
        "source": "simplego_4158d562b3a6/4"
      }
    },
    {
      "text": "Use this method to refresh the current page. As a result of the method, the user is redirected to the previous page.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 4,
        "heading": "s_go.reloadWindow()​",
        "chunk_index": 1,
        "source": "simplego_4158d562b3a6/4"
      }
    },
    {
      "text": "If the form has been changed but not saved, a pop-up window appears notifying that the changes will be lost.",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 4,
        "heading": "s_go.reloadWindow()​",
        "chunk_index": 2,
        "source": "simplego_4158d562b3a6/4"
      }
    },
    {
      "text": "Use this method to get the current page URL. Return: Example: s_go.getURL()consturl=s_go.getURL(); Use this method to verify whether the form has been changed. If the form has been changed but not saved, a pop-up window appears notifying that the changes will be lost. As a result of the method, the user is redirected to the previous page. Return: Example: s_go.back()s_go.back();",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 5,
        "heading": "s_go.getURL()​",
        "chunk_index": 0,
        "source": "simplego_4158d562b3a6/5"
      }
    },
    {
      "text": "Use this method to verify whether the form has been changed. If the form has been changed but not saved, a pop-up window appears notifying that the changes will be lost. As a result of the method, the user is redirected to the previous page. Return: Example: s_go.back()s_go.back();",
      "metadata": {
        "doc_id": "simplego_4158d562b3a6",
        "title": "SimpleGo",
        "section_id": 6,
        "heading": "s_go.back()​",
        "chunk_index": 0,
        "source": "simplego_4158d562b3a6/6"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "\",async(translationResponse)=>{if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{__resolveServerResponse();s_list.refresh(table);})}else{__resolveServerResponse();}}); Use this method to add exported files in a queue. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "Example: currentUiActionwindow.currentUiAction Use this method to display an error toast message in the lower right corner. Parameter(s): Return: Example: addErrorMessage()s_list.addErrorMessage('Please enter a valid email address using the following format: joe@example.com'); Use this method to display an informational toast message in the lower right corner. Parameter(s): Return: Example: addInfoMessage()s_list.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successul action in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_list.addWarningMessage('This record has been modified by another user',3000); Use this method to delete one or more selected records, their IDs are passed in the second parameter. Parameter(s): Return: Example: deleteRows()s_i18n.getMessage(\"Delete the selected record(s)?",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 5,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "Within any list, you can use the predefined global variable.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 6,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 7,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 8,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 1,
        "heading": "Global variable usage​",
        "chunk_index": 9,
        "source": "simplelist_8ef787410b80/1"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "Use this method to display an error toast message in the lower right corner. Parameter(s): Return: Example: addErrorMessage()s_list.addErrorMessage('Please enter a valid email address using the following format: joe@example.com'); Use this method to display an informational toast message in the lower right corner. Parameter(s): Return: Example: addInfoMessage()s_list.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successul action in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "\",async(translationResponse)=>{if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{__resolveServerResponse();s_list.refresh(table);})}else{__resolveServerResponse();}}); Use this method to add exported files in a queue. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_list.addWarningMessage('This record has been modified by another user',3000); Use this method to delete one or more selected records, their IDs are passed in the second parameter. Parameter(s): Return: Example: deleteRows()s_i18n.getMessage(\"Delete the selected record(s)?",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 5,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 6,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 7,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 2,
        "heading": "s_list.addErrorMessage(message)​",
        "chunk_index": 8,
        "source": "simplelist_8ef787410b80/2"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_list.addWarningMessage('This record has been modified by another user',3000); Use this method to delete one or more selected records, their IDs are passed in the second parameter. Parameter(s): Return: Example: deleteRows()s_i18n.getMessage(\"Delete the selected record(s)?",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "\",async(translationResponse)=>{if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{__resolveServerResponse();s_list.refresh(table);})}else{__resolveServerResponse();}}); Use this method to add exported files in a queue. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "In thedurationMillisecondsparameter, specify this period in milliseconds. Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 5,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 6,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addInfoMessage()s_list.addInfoMessage('Link copied to clipboard',2000); Use this method to display a message about a successul action in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 7,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "Use this method to display an informational toast message in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 8,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 3,
        "heading": "s_list.addInfoMessage(message, durationMilliseconds)​",
        "chunk_index": 9,
        "source": "simplelist_8ef787410b80/3"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_list.addWarningMessage('This record has been modified by another user',3000); Use this method to delete one or more selected records, their IDs are passed in the second parameter. Parameter(s): Return: Example: deleteRows()s_i18n.getMessage(\"Delete the selected record(s)?",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "\",async(translationResponse)=>{if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{__resolveServerResponse();s_list.refresh(table);})}else{__resolveServerResponse();}}); Use this method to add exported files in a queue. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "Specify this period in milliseconds in thedurationMillisecondsparameter. Specify this period in milliseconds in thedurationMillisecondsparameter.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "The message disappears after a certain period of time. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 5,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "',3000); Use this method to display a warning message in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 6,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "Use this method to display a message about a successul action in the lower right corner.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 7,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 4,
        "heading": "s_list.addSuccessMessage(message, durationMilliseconds)​",
        "chunk_index": 8,
        "source": "simplelist_8ef787410b80/4"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 5,
        "heading": "s_list.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/5"
      }
    },
    {
      "text": "Use this method to display a warning message in the lower right corner. The message disappears after a certain period of time.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 5,
        "heading": "s_list.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/5"
      }
    },
    {
      "text": "\",async(translationResponse)=>{if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{__resolveServerResponse();s_list.refresh(table);})}else{__resolveServerResponse();}}); Use this method to add exported files in a queue. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 5,
        "heading": "s_list.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/5"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 5,
        "heading": "s_list.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: addWarningMessage()s_list.addWarningMessage('This record has been modified by another user',3000); Use this method to delete one or more selected records, their IDs are passed in the second parameter. Parameter(s): Return: Example: deleteRows()s_i18n.getMessage(\"Delete the selected record(s)?",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 5,
        "heading": "s_list.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 5,
        "heading": "s_list.addWarningMessage(message, durationMilliseconds)​",
        "chunk_index": 5,
        "source": "simplelist_8ef787410b80/5"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 6,
        "heading": "s_list.deleteRows(tableName, sysIds)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/6"
      }
    },
    {
      "text": "\",async(translationResponse)=>{if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{__resolveServerResponse();s_list.refresh(table);})}else{__resolveServerResponse();}}); Use this method to add exported files in a queue. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 6,
        "heading": "s_list.deleteRows(tableName, sysIds)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: deleteRows()s_i18n.getMessage(\"Delete the selected record(s)? Parameter(s): Return: Example: getCheckedRow()consttable=s_list.getTablesName()[0];constselectedRows=s_list.getCheckedRow(table);if(!selectedRows.length){s_i18n.getMessage(\"No selected rows.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 6,
        "heading": "s_list.deleteRows(tableName, sysIds)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 6,
        "heading": "s_list.deleteRows(tableName, sysIds)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/6"
      }
    },
    {
      "text": "Use this method to delete one or more selected records, their IDs are passed in the second parameter.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 6,
        "heading": "s_list.deleteRows(tableName, sysIds)​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/6"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 6,
        "heading": "s_list.deleteRows(tableName, sysIds)​",
        "chunk_index": 5,
        "source": "simplelist_8ef787410b80/6"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 7,
        "heading": "s_list.fetchExportTable(fetchExportTable)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getCheckedRow()consttable=s_list.getTablesName()[0];constselectedRows=s_list.getCheckedRow(table);if(!selectedRows.length){s_i18n.getMessage(\"No selected rows. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 7,
        "heading": "s_list.fetchExportTable(fetchExportTable)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/7"
      }
    },
    {
      "text": "Use this method to add exported files in a queue.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 7,
        "heading": "s_list.fetchExportTable(fetchExportTable)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Export to JSON s_list.fetchExportTable()s_list.fetchExportTable('json'); Export to XLSX s_list.fetchExportTable()s_list.fetchExportTable(); or s_list.fetchExportTable()s_list.fetchExportTable('excel'); Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 7,
        "heading": "s_list.fetchExportTable(fetchExportTable)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/7"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 7,
        "heading": "s_list.fetchExportTable(fetchExportTable)​",
        "chunk_index": 4,
        "source": "simplelist_8ef787410b80/7"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 8,
        "heading": "s_list.getCheckedRow(tableName)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: getCheckedRow()consttable=s_list.getTablesName()[0];constselectedRows=s_list.getCheckedRow(table);if(!selectedRows.length){s_i18n.getMessage(\"No selected rows. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 8,
        "heading": "s_list.getCheckedRow(tableName)​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/8"
      }
    },
    {
      "text": "Use this method to get information about the strings that are checked on the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 8,
        "heading": "s_list.getCheckedRow(tableName)​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/8"
      }
    },
    {
      "text": "\",(translationResponse)=>{__resolveServerResponse();alert(translationResponse);});} Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 8,
        "heading": "s_list.getCheckedRow(tableName)​",
        "chunk_index": 3,
        "source": "simplelist_8ef787410b80/8"
      }
    },
    {
      "text": "Return: Example: getQuery();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 9,
        "heading": "s_list.getQuery()​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/9"
      }
    },
    {
      "text": "Use this method to return the filter condition for the displayed records in the list.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 9,
        "heading": "s_list.getQuery()​",
        "chunk_index": 1,
        "source": "simplelist_8ef787410b80/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page.",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 9,
        "heading": "s_list.getQuery()​",
        "chunk_index": 2,
        "source": "simplelist_8ef787410b80/9"
      }
    },
    {
      "text": "Use this method to return an array with the names of the tables displayed in the window. Return: Example: getTablesName();(()=>{consturl=newURL(`${API_BASE_URL}/list/${s_list.getTablesName()[0]}`);url.searchParams.set('condition',s_list.getQuery());window.open(url,'_blank');})(); Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window. Return: runQuickImport()s_list.runQuickImport();",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 10,
        "heading": "s_list.getTablesName()​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/10"
      }
    },
    {
      "text": "Use this method to refresh the data on the list specified in thetableNameparameter. Parameter(s): Return: Example: refresh()if(confirm(translationResponse)){s_list.deleteRows(table,selectedRows).then(()=>{s_list.refresh(table);})} Use the method to modify the condition set in the condition builder without reloading the page. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window. Return: runQuickImport()s_list.runQuickImport();",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 11,
        "heading": "s_list.refresh(tableName)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/11"
      }
    },
    {
      "text": "Use the method to modify the condition set in the condition builder without reloading the page. Parameter(s): Return: recondition()consturl=newURL(location.href);letaddedCondition='sys_id=56709653456789';url.searchParams.append('condition',addedCondition);s_list.recondition(url.searchParams.toString()); Use the method to open a quick import modal window. Return: runQuickImport()s_list.runQuickImport();",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 12,
        "heading": "s_list.recondition(condition)​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/12"
      }
    },
    {
      "text": "Use the method to open a quick import modal window. Return: runQuickImport()s_list.runQuickImport();",
      "metadata": {
        "doc_id": "simplelist_8ef787410b80",
        "title": "SimpleList",
        "section_id": 13,
        "heading": "s_list.runQuickImport()​",
        "chunk_index": 0,
        "source": "simplelist_8ef787410b80/13"
      }
    },
    {
      "text": "Use this method to update the Favorites menu. Return: Example: updateFavoritesList()SimpleMenu.updateFavoritesList(); Use this method to update the Navigator menu. Return: Example: updateMenuList()SimpleMenu.updateMenuList();",
      "metadata": {
        "doc_id": "simplemenu_c56a79caf520",
        "title": "SimpleMenu",
        "section_id": 1,
        "heading": "updateFavoritesList()​",
        "chunk_index": 0,
        "source": "simplemenu_c56a79caf520/1"
      }
    },
    {
      "text": "Use this method to update the Navigator menu. Return: Example: updateMenuList()SimpleMenu.updateMenuList();",
      "metadata": {
        "doc_id": "simplemenu_c56a79caf520",
        "title": "SimpleMenu",
        "section_id": 2,
        "heading": "updateMenuList()​",
        "chunk_index": 0,
        "source": "simplemenu_c56a79caf520/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: renderTemplate()s_modal.renderTemplate('<div><h1>Hello</h1></div>','h1 {color: red}; div {margin: 20px}'); Use this method to specify whether to show or hide a modal window. Parameter(s): Return: Example: setShow()s_modal.setShow(false); Use this method to define the title of the modal window. Parameter(s): Return: Example: setTitle()s_modal.setTitle('Merging'); Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 1,
        "heading": "s_modal​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/1"
      }
    },
    {
      "text": "Use this method to display the content in a modal window according to the set of widgets the portal page template contains. Parameter(s): Return: Example: renderPageTemplate()s_modal.renderPageTemplate('portal','page'); Use this method to display the content in a modal window according to the set of widgets the portal page template contains. Parameter(s): Return: Example: renderPagePathTemplate()s_modal.renderPagePathTemplate('page','portal'); Use this method to render the UI page in the modal window with the HTML template and styles specified.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 1,
        "heading": "s_modal​",
        "chunk_index": 1,
        "source": "simplemodal_280e0e0b2cdd/1"
      }
    },
    {
      "text": "Use this global object to instantiate a new SimpleModal object.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 1,
        "heading": "s_modal​",
        "chunk_index": 2,
        "source": "simplemodal_280e0e0b2cdd/1"
      }
    },
    {
      "text": "This method is similar to the previous one but has another sequence of parameters.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 1,
        "heading": "s_modal​",
        "chunk_index": 3,
        "source": "simplemodal_280e0e0b2cdd/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: renderTemplate()s_modal.renderTemplate('<div><h1>Hello</h1></div>','h1 {color: red}; div {margin: 20px}'); Use this method to specify whether to show or hide a modal window. Parameter(s): Return: Example: setShow()s_modal.setShow(false); Use this method to define the title of the modal window. Parameter(s): Return: Example: setTitle()s_modal.setTitle('Merging'); Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 2,
        "heading": "renderPageTemplate (portalPathName, pagePathName)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/2"
      }
    },
    {
      "text": "This method is similar to the previous one but has another sequence of parameters.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 2,
        "heading": "renderPageTemplate (portalPathName, pagePathName)​",
        "chunk_index": 1,
        "source": "simplemodal_280e0e0b2cdd/2"
      }
    },
    {
      "text": "Use this method to display the content in a modal window according to the set of widgets the portal page template contains. Parameter(s): Return: Example: renderPageTemplate()s_modal.renderPageTemplate('portal','page'); Use this method to display the content in a modal window according to the set of widgets the portal page template contains. Parameter(s): Return: Example: renderPagePathTemplate()s_modal.renderPagePathTemplate('page','portal'); Use this method to render the UI page in the modal window with the HTML template and styles specified.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 2,
        "heading": "renderPageTemplate (portalPathName, pagePathName)​",
        "chunk_index": 2,
        "source": "simplemodal_280e0e0b2cdd/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: renderTemplate()s_modal.renderTemplate('<div><h1>Hello</h1></div>','h1 {color: red}; div {margin: 20px}'); Use this method to specify whether to show or hide a modal window. Parameter(s): Return: Example: setShow()s_modal.setShow(false); Use this method to define the title of the modal window. Parameter(s): Return: Example: setTitle()s_modal.setTitle('Merging'); Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 3,
        "heading": "renderPagePathTemplate (pagePathName, portalPathName)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/3"
      }
    },
    {
      "text": "This method is similar to the previous one but has another sequence of parameters.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 3,
        "heading": "renderPagePathTemplate (pagePathName, portalPathName)​",
        "chunk_index": 1,
        "source": "simplemodal_280e0e0b2cdd/3"
      }
    },
    {
      "text": "Use this method to display the content in a modal window according to the set of widgets the portal page template contains. Parameter(s): Return: Example: renderPagePathTemplate()s_modal.renderPagePathTemplate('page','portal'); Use this method to render the UI page in the modal window with the HTML template and styles specified.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 3,
        "heading": "renderPagePathTemplate (pagePathName, portalPathName)​",
        "chunk_index": 2,
        "source": "simplemodal_280e0e0b2cdd/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: renderTemplate()s_modal.renderTemplate('<div><h1>Hello</h1></div>','h1 {color: red}; div {margin: 20px}'); Use this method to specify whether to show or hide a modal window. Parameter(s): Return: Example: setShow()s_modal.setShow(false); Use this method to define the title of the modal window. Parameter(s): Return: Example: setTitle()s_modal.setTitle('Merging'); Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 4,
        "heading": "renderTemplate(template, style)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/4"
      }
    },
    {
      "text": "Use this method to render the UI page in the modal window with the HTML template and styles specified.",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 4,
        "heading": "renderTemplate(template, style)​",
        "chunk_index": 1,
        "source": "simplemodal_280e0e0b2cdd/4"
      }
    },
    {
      "text": "Use this method to specify whether to show or hide a modal window. Parameter(s): Return: Example: setShow()s_modal.setShow(false); Use this method to define the title of the modal window. Parameter(s): Return: Example: setTitle()s_modal.setTitle('Merging'); Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 5,
        "heading": "setShow(isShow)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/5"
      }
    },
    {
      "text": "Use this method to define the title of the modal window. Parameter(s): Return: Example: setTitle()s_modal.setTitle('Merging'); Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 6,
        "heading": "setTitle(title)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/6"
      }
    },
    {
      "text": "Use this method to define the width of the modal window in pixels. Parameter(s): Return: Example: setWidth()s_modal.setWidth(500); Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 7,
        "heading": "setWidth(width)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/7"
      }
    },
    {
      "text": "Use this method to define if the loader should be displayed in the modal window. Parameter(s): Return: Example: setIsLoading()s_modal.setIsLoading(true);",
      "metadata": {
        "doc_id": "simplemodal_280e0e0b2cdd",
        "title": "SimpleModal",
        "section_id": 8,
        "heading": "setIsLoading(isLoading)​",
        "chunk_index": 0,
        "source": "simplemodal_280e0e0b2cdd/8"
      }
    },
    {
      "text": "Use this method to refresh the Preferences menu automatically. Return: Example: refresh()s_form.save().then(async(sysId)=>{awaits_user.setPreference('application',s_form.getValue('pack_application_id'));awaits_user.setPreference('vcs.localPack.current',sysId);awaits_pref.refresh();}).finally(__resolveServerResponse);",
      "metadata": {
        "doc_id": "simplepreference_55cebd13949f",
        "title": "SimplePreference",
        "section_id": 1,
        "heading": "refresh()​",
        "chunk_index": 0,
        "source": "simplepreference_55cebd13949f/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: get()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.email);// admin@admin.ru}); Use this method to receive an array of records that contain column-value pairs. Return: Example: getRows()constrecord=newSimpleRecord('sys_db_table');record.addQuery('is_vcs_enabled','IS',true);record.query();record.getRows(); Use this method to return a name of the current table. Return: Example: getTableName()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.getTableName());// user}); Use this method to define whether a selection contains other records. Return: Example: hasNext()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.hasNext());// true}); Use this method to insert a new record. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: deleteRecord()consttaskRecord=newSimpleRecord('task');taskRecord.get('123456789012345678',()=>{taskRecord.deleteRecord(callback);});functioncallback(response){constanswer=response.responseXML.documentElement.getAttribute('answer');if(answer=='1'){console.log('Record deleted');}else{console.log(answer);}} Use this method to load an object from a database based on its ID. Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "Use this method to filter the records by specifying certain conditions (field,operator,value). You can also add a condition to get records with afieldequal to thevalueor that is in the list.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "Use the following operators without a value: Parameter(s): Return: Example: addQuery()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','Email');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to delete the current record. Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "Use the system names of the operators in the scripts.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 6,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "In this method, you can use any required operator from thecondition operatorslist, specified in lower- or uppercase.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 7,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 8,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 1,
        "heading": "addQuery(field, operator, value)​",
        "chunk_index": 9,
        "source": "simplerecord-client-side_38d998892ba9/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: get()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.email);// admin@admin.ru}); Use this method to receive an array of records that contain column-value pairs. Return: Example: getRows()constrecord=newSimpleRecord('sys_db_table');record.addQuery('is_vcs_enabled','IS',true);record.query();record.getRows(); Use this method to return a name of the current table. Return: Example: getTableName()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.getTableName());// user}); Use this method to define whether a selection contains other records. Return: Example: hasNext()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.hasNext());// true}); Use this method to insert a new record. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: deleteRecord()consttaskRecord=newSimpleRecord('task');taskRecord.get('123456789012345678',()=>{taskRecord.deleteRecord(callback);});functioncallback(response){constanswer=response.responseXML.documentElement.getAttribute('answer');if(answer=='1'){console.log('Record deleted');}else{console.log(answer);}} Use this method to load an object from a database based on its ID. Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 2,
        "heading": "deleteRecord(responseFunction)​",
        "chunk_index": 6,
        "source": "simplerecord-client-side_38d998892ba9/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: get()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.email);// admin@admin.ru}); Use this method to receive an array of records that contain column-value pairs. Return: Example: getRows()constrecord=newSimpleRecord('sys_db_table');record.addQuery('is_vcs_enabled','IS',true);record.query();record.getRows(); Use this method to return a name of the current table. Return: Example: getTableName()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.getTableName());// user}); Use this method to define whether a selection contains other records. Return: Example: hasNext()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.hasNext());// true}); Use this method to insert a new record. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "Use this method to load an object from a database based on its ID.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 6,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 3,
        "heading": "get(recordId, callback)​",
        "chunk_index": 7,
        "source": "simplerecord-client-side_38d998892ba9/3"
      }
    },
    {
      "text": "Return: Example: getRows()constrecord=newSimpleRecord('sys_db_table');record.addQuery('is_vcs_enabled','IS',true);record.query();record.getRows(); Use this method to return a name of the current table. Return: Example: getTableName()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.getTableName());// user}); Use this method to define whether a selection contains other records. Return: Example: hasNext()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.hasNext());// true}); Use this method to insert a new record. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "Use this method to receive an array of records that contain column-value pairs.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 6,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 4,
        "heading": "getRows()​",
        "chunk_index": 7,
        "source": "simplerecord-client-side_38d998892ba9/4"
      }
    },
    {
      "text": "Return: Example: getTableName()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.getTableName());// user}); Use this method to define whether a selection contains other records. Return: Example: hasNext()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.hasNext());// true}); Use this method to insert a new record. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "Use this method to return a name of the current table.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 6,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 5,
        "heading": "getTableName()​",
        "chunk_index": 7,
        "source": "simplerecord-client-side_38d998892ba9/5"
      }
    },
    {
      "text": "Return: Example: hasNext()constrecord=newSimpleRecord('user');record.get(s_user.userID,()=>{console.log(record.hasNext());// true}); Use this method to insert a new record. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 6,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "Use this method to define whether a selection contains other records.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 6,
        "heading": "hasNext()​",
        "chunk_index": 7,
        "source": "simplerecord-client-side_38d998892ba9/6"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 7,
        "heading": "insert(responseFunction)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/7"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 7,
        "heading": "insert(responseFunction)​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: insert()constnewRecord=newSimpleRecord('task');newRecord.subject='Client-side insert';newRecord.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);}) Use this method to move to the next record. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 7,
        "heading": "insert(responseFunction)​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/7"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 7,
        "heading": "insert(responseFunction)​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/7"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 7,
        "heading": "insert(responseFunction)​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/7"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 7,
        "heading": "insert(responseFunction)​",
        "chunk_index": 5,
        "source": "simplerecord-client-side_38d998892ba9/7"
      }
    },
    {
      "text": "Return: Example: next()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.addQuery('subject','startswith','[SWD-10]');record.query(()=>{while(record.next()){console.log(record.number);// TSK0000128}}); Use this method to specify a column to order by. Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 8,
        "heading": "next()​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/8"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 8,
        "heading": "next()​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/8"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 8,
        "heading": "next()​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/8"
      }
    },
    {
      "text": "To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 8,
        "heading": "next()​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/8"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 8,
        "heading": "next()​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: orderBy()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('number');record.query(()=>{while(record.next()){console.log(record.number);// >TSK0000128  >TSK0000129  >TSK0000130 ...}}); Use this method to execute a query taking 0 or more parameters in any order. Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 9,
        "heading": "orderBy(column)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/9"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 9,
        "heading": "orderBy(column)​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/9"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 9,
        "heading": "orderBy(column)​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/9"
      }
    },
    {
      "text": "Use this method to specify a column to order by. To order by multiple columns, call the method several times.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 9,
        "heading": "orderBy(column)​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/9"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 9,
        "heading": "orderBy(column)​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: query()constrecord=newSimpleRecord('user');record.addQuery('sys_id',s_user.userID);record.query(()=>{if(record.next()){console.log(record.email);// admin@admin.ru}}); Use this method to define the number of records in the query. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 10,
        "heading": "query(responseFunction, property, value, ...)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/10"
      }
    },
    {
      "text": "Do not make synchronous query calls. The call becomes synchronous if a query is performed without a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 10,
        "heading": "query(responseFunction, property, value, ...)​",
        "chunk_index": 1,
        "source": "simplerecord-client-side_38d998892ba9/10"
      }
    },
    {
      "text": "It takes any pair of literals as a query pair (field: value) and any function as a response function.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 10,
        "heading": "query(responseFunction, property, value, ...)​",
        "chunk_index": 2,
        "source": "simplerecord-client-side_38d998892ba9/10"
      }
    },
    {
      "text": "In this case, the state of the object does not change.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 10,
        "heading": "query(responseFunction, property, value, ...)​",
        "chunk_index": 3,
        "source": "simplerecord-client-side_38d998892ba9/10"
      }
    },
    {
      "text": "Use this method to execute a query taking 0 or more parameters in any order.",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 10,
        "heading": "query(responseFunction, property, value, ...)​",
        "chunk_index": 4,
        "source": "simplerecord-client-side_38d998892ba9/10"
      }
    },
    {
      "text": "Use this method to define the number of records in the query. Parameter(s): Return: Example: setLimit()constrecord=newSimpleRecord('task');record.addQuery('number','like','TSK');record.orderBy('sys_created_at');// the very first recordrecord.setLimit(1);record.query(()=>{while(record.next()){console.log(record.number);// TSK0000002//...}}); Use this method to define a value for the field. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 11,
        "heading": "setLimit(maxQuery)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/11"
      }
    },
    {
      "text": "Use this method to define a value for the field. Parameter(s): Return: Example: setValue()constrecord=newSimpleRecord('task');record.setValue('subject','Another type of prop assignement');record.insert((response)=>{constanswer=response.responseXML.documentElement.getAttribute('answer');console.log(answer);})",
      "metadata": {
        "doc_id": "simplerecord-client-side_38d998892ba9",
        "title": "SimpleRecord Client-Side",
        "section_id": 12,
        "heading": "setValue(fieldName, value)​",
        "chunk_index": 0,
        "source": "simplerecord-client-side_38d998892ba9/12"
      }
    },
    {
      "text": "Use this method to get a value based on the key. Parameter(s): Return: Example: getItem()SimpleStorage.getItem('name');// \"Adam\" Use this method to check if there is a key in the storage. Parameter(s): Return: Example: hasItem()SimpleStorage.hasItem('name');//  true Use this method to set a value based on a key. Parameter(s): Return: Example: setItem()SimpleStorage.setItem('name','Adam') Use this method to get an array of pairs key-value. Return: Example: getEntries()SimpleStorage.getEntries();//  [[\"name\", \"Adam\"],[ [\"secondName\", \"Smith\"]]] Use this method to get an array of keys.",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 1,
        "heading": "getItem(key)​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/1"
      }
    },
    {
      "text": "Return: Example: getKeys()SimpleStorage.getKeys();//  [\"name\", \"secondName\"] Use this method to get the amount of the values stored.",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 1,
        "heading": "getItem(key)​",
        "chunk_index": 1,
        "source": "simplestorage_2e7ba548de55/1"
      }
    },
    {
      "text": "Return: Example: getSize()SimpleStorage.getSize();//  2 Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 1,
        "heading": "getItem(key)​",
        "chunk_index": 2,
        "source": "simplestorage_2e7ba548de55/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: hasItem()SimpleStorage.hasItem('name');//  true Use this method to set a value based on a key. Parameter(s): Return: Example: setItem()SimpleStorage.setItem('name','Adam') Use this method to get an array of pairs key-value. Return: Example: getEntries()SimpleStorage.getEntries();//  [[\"name\", \"Adam\"],[ [\"secondName\", \"Smith\"]]] Use this method to get an array of keys. Return: Example: getKeys()SimpleStorage.getKeys();//  [\"name\", \"secondName\"] Use this method to get the amount of the values stored.",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 2,
        "heading": "hasItem(key)​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/2"
      }
    },
    {
      "text": "Return: Example: getSize()SimpleStorage.getSize();//  2 Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 2,
        "heading": "hasItem(key)​",
        "chunk_index": 1,
        "source": "simplestorage_2e7ba548de55/2"
      }
    },
    {
      "text": "Use this method to check if there is a key in the storage.",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 2,
        "heading": "hasItem(key)​",
        "chunk_index": 2,
        "source": "simplestorage_2e7ba548de55/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: setItem()SimpleStorage.setItem('name','Adam') Use this method to get an array of pairs key-value. Return: Example: getEntries()SimpleStorage.getEntries();//  [[\"name\", \"Adam\"],[ [\"secondName\", \"Smith\"]]] Use this method to get an array of keys. Return: Example: getKeys()SimpleStorage.getKeys();//  [\"name\", \"secondName\"] Use this method to get the amount of the values stored.",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 3,
        "heading": "setItem(key, value)​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/3"
      }
    },
    {
      "text": "Return: Example: getSize()SimpleStorage.getSize();//  2 Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 3,
        "heading": "setItem(key, value)​",
        "chunk_index": 1,
        "source": "simplestorage_2e7ba548de55/3"
      }
    },
    {
      "text": "Use this method to set a value based on a key.",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 3,
        "heading": "setItem(key, value)​",
        "chunk_index": 2,
        "source": "simplestorage_2e7ba548de55/3"
      }
    },
    {
      "text": "Use this method to get an array of pairs key-value. Return: Example: getEntries()SimpleStorage.getEntries();//  [[\"name\", \"Adam\"],[ [\"secondName\", \"Smith\"]]] Use this method to get an array of keys. Return: Example: getKeys()SimpleStorage.getKeys();//  [\"name\", \"secondName\"] Use this method to get the amount of the values stored. Return: Example: getSize()SimpleStorage.getSize();//  2 Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 4,
        "heading": "getEntries()​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/4"
      }
    },
    {
      "text": "Use this method to get an array of keys. Return: Example: getKeys()SimpleStorage.getKeys();//  [\"name\", \"secondName\"] Use this method to get the amount of the values stored. Return: Example: getSize()SimpleStorage.getSize();//  2 Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 5,
        "heading": "getKeys()​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/5"
      }
    },
    {
      "text": "Use this method to get the amount of the values stored. Return: Example: getSize()SimpleStorage.getSize();//  2 Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 6,
        "heading": "getSize()​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/6"
      }
    },
    {
      "text": "Use this method to empty the storage. Return: Example: reset()SimpleStorage.reset();",
      "metadata": {
        "doc_id": "simplestorage_2e7ba548de55",
        "title": "SimpleStorage",
        "section_id": 7,
        "heading": "reset()​",
        "chunk_index": 0,
        "source": "simplestorage_2e7ba548de55/7"
      }
    },
    {
      "text": "Use this method to get a prefix of the system name of the table based on the user's current application. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. Return: Example: getTablePrefix()if(s_form.isNewRecord()){constpromise=awaitss.getTablePrefix();s_form.setValue('name',promise);} Use this method to get the system column name prefix based on the table name. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. Parameter(s): Return: Example: getColumnPrefix()consttable_id=s_form.getValue('table_id');if(table_id!==null){(newSimpleRecord('sys_db_table')).get(table_id,(table)=>{constcolumn_prefix=awaitss.getColumnPrefix(table.name);if(column_prefix){constold_column_name=s_form.getValue('column_name');s_form.setValue('column_name',column_prefix+old_column_name);}});}",
      "metadata": {
        "doc_id": "simplesystem_d28d731a6358",
        "title": "SimpleSystem",
        "section_id": 1,
        "heading": "getTablePrefix()​",
        "chunk_index": 0,
        "source": "simplesystem_d28d731a6358/1"
      }
    },
    {
      "text": "Use this method to get the system column name prefix based on the table name. cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. Parameter(s): Return: Example: getColumnPrefix()consttable_id=s_form.getValue('table_id');if(table_id!==null){(newSimpleRecord('sys_db_table')).get(table_id,(table)=>{constcolumn_prefix=awaitss.getColumnPrefix(table.name);if(column_prefix){constold_column_name=s_form.getValue('column_name');s_form.setValue('column_name',column_prefix+old_column_name);}});}",
      "metadata": {
        "doc_id": "simplesystem_d28d731a6358",
        "title": "SimpleSystem",
        "section_id": 2,
        "heading": "getColumnPrefix(tableName)​",
        "chunk_index": 0,
        "source": "simplesystem_d28d731a6358/2"
      }
    },
    {
      "text": "Use this property to get an access token of the current user. Return: Example: s_user.accessTokenconsturl=newURL(`${API_BASE_URL}/export/json/${s_list.getTablesName()[0]}`);url.searchParams.set('access-token',s_user.accessToken);url.searchParams.set('condition',s_list.getQuery());window.open(url,\"_blank\"); Use this property to get the first name of the current user.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 1,
        "heading": "Propereties​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/1"
      }
    },
    {
      "text": "Return: Example: s_user.firstNameconsole.log(s_user.firstName);//John Use this property to get the last name of the current user. Return: Example: s_user.lastNameconsole.log(s_user.lastName);//Doe Use this property to get the ID of the current user. Return: Example: s_user.userIDconstcurrentCaller=newSimpleRecord(s_user.user.essence);currentCaller.get(s_user.userID,()=>{s_form.setValue('email',currentCaller.email);}); Use this property to store an object with the user data of the current user, such as first name, last name, ID value, and other. Return: Example: s_user.userconsole.log(JSON.stringify(s_user.user,null,2));/*\"{\"sys_id\": \"155931135900000001\",\"first_name\": \"Admin\",\"last_name\": \"Admin\",\"username\": \"admin\",\"essence\": \"user\",\"timezone\": \"Europe/Moscow\",\"language\": \"en\",\"photo_path\": null,\"elevate_access\": -1,\"version\": \"1.3.6\",\"dictionary\": {...},\"impersonate_state\": null}\"*/ Use this property to get the login (username) of the current user (for example,helpdesk.agent). Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 1,
        "heading": "Propereties​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/1"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 1,
        "heading": "Propereties​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/1"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 1,
        "heading": "Propereties​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/1"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 1,
        "heading": "Propereties​",
        "chunk_index": 4,
        "source": "simpleuser_8b0aefb630ab/1"
      }
    },
    {
      "text": "Use this property to get an access token of the current user. Return: Example: s_user.accessTokenconsturl=newURL(`${API_BASE_URL}/export/json/${s_list.getTablesName()[0]}`);url.searchParams.set('access-token',s_user.accessToken);url.searchParams.set('condition',s_list.getQuery());window.open(url,\"_blank\"); Use this property to get the first name of the current user.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 2,
        "heading": "s_user.accessToken​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/2"
      }
    },
    {
      "text": "Return: Example: s_user.firstNameconsole.log(s_user.firstName);//John Use this property to get the last name of the current user. Return: Example: s_user.lastNameconsole.log(s_user.lastName);//Doe Use this property to get the ID of the current user. Return: Example: s_user.userIDconstcurrentCaller=newSimpleRecord(s_user.user.essence);currentCaller.get(s_user.userID,()=>{s_form.setValue('email',currentCaller.email);}); Use this property to store an object with the user data of the current user, such as first name, last name, ID value, and other. Return: Example: s_user.userconsole.log(JSON.stringify(s_user.user,null,2));/*\"{\"sys_id\": \"155931135900000001\",\"first_name\": \"Admin\",\"last_name\": \"Admin\",\"username\": \"admin\",\"essence\": \"user\",\"timezone\": \"Europe/Moscow\",\"language\": \"en\",\"photo_path\": null,\"elevate_access\": -1,\"version\": \"1.3.6\",\"dictionary\": {...},\"impersonate_state\": null}\"*/ Use this property to get the login (username) of the current user (for example,helpdesk.agent). Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 2,
        "heading": "s_user.accessToken​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/2"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 2,
        "heading": "s_user.accessToken​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/2"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 2,
        "heading": "s_user.accessToken​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/2"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 2,
        "heading": "s_user.accessToken​",
        "chunk_index": 4,
        "source": "simpleuser_8b0aefb630ab/2"
      }
    },
    {
      "text": "Use this property to get the first name of the current user. Return: Example: s_user.firstNameconsole.log(s_user.firstName);//John Use this property to get the last name of the current user. Return: Example: s_user.lastNameconsole.log(s_user.lastName);//Doe Use this property to get the ID of the current user. Return: Example: s_user.userIDconstcurrentCaller=newSimpleRecord(s_user.user.essence);currentCaller.get(s_user.userID,()=>{s_form.setValue('email',currentCaller.email);}); Use this property to store an object with the user data of the current user, such as first name, last name, ID value, and other. Return: Example: s_user.userconsole.log(JSON.stringify(s_user.user,null,2));/*\"{\"sys_id\": \"155931135900000001\",\"first_name\": \"Admin\",\"last_name\": \"Admin\",\"username\": \"admin\",\"essence\": \"user\",\"timezone\": \"Europe/Moscow\",\"language\": \"en\",\"photo_path\": null,\"elevate_access\": -1,\"version\": \"1.3.6\",\"dictionary\": {...},\"impersonate_state\": null}\"*/ Use this property to get the login (username) of the current user (for example,helpdesk.agent).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 3,
        "heading": "s_user.firstName​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/3"
      }
    },
    {
      "text": "Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 3,
        "heading": "s_user.firstName​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/3"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 3,
        "heading": "s_user.firstName​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/3"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 3,
        "heading": "s_user.firstName​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/3"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 3,
        "heading": "s_user.firstName​",
        "chunk_index": 4,
        "source": "simpleuser_8b0aefb630ab/3"
      }
    },
    {
      "text": "Use this property to get the last name of the current user. Return: Example: s_user.lastNameconsole.log(s_user.lastName);//Doe Use this property to get the ID of the current user. Return: Example: s_user.userIDconstcurrentCaller=newSimpleRecord(s_user.user.essence);currentCaller.get(s_user.userID,()=>{s_form.setValue('email',currentCaller.email);}); Use this property to store an object with the user data of the current user, such as first name, last name, ID value, and other. Return: Example: s_user.userconsole.log(JSON.stringify(s_user.user,null,2));/*\"{\"sys_id\": \"155931135900000001\",\"first_name\": \"Admin\",\"last_name\": \"Admin\",\"username\": \"admin\",\"essence\": \"user\",\"timezone\": \"Europe/Moscow\",\"language\": \"en\",\"photo_path\": null,\"elevate_access\": -1,\"version\": \"1.3.6\",\"dictionary\": {...},\"impersonate_state\": null}\"*/ Use this property to get the login (username) of the current user (for example,helpdesk.agent). Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 4,
        "heading": "s_user.lastName​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/4"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 4,
        "heading": "s_user.lastName​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/4"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 4,
        "heading": "s_user.lastName​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/4"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 4,
        "heading": "s_user.lastName​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/4"
      }
    },
    {
      "text": "Use this property to get the ID of the current user. Return: Example: s_user.userIDconstcurrentCaller=newSimpleRecord(s_user.user.essence);currentCaller.get(s_user.userID,()=>{s_form.setValue('email',currentCaller.email);}); Use this property to store an object with the user data of the current user, such as first name, last name, ID value, and other.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 5,
        "heading": "s_user.userID​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/5"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 5,
        "heading": "s_user.userID​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/5"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 5,
        "heading": "s_user.userID​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/5"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 5,
        "heading": "s_user.userID​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/5"
      }
    },
    {
      "text": "Return: Example: s_user.userconsole.log(JSON.stringify(s_user.user,null,2));/*\"{\"sys_id\": \"155931135900000001\",\"first_name\": \"Admin\",\"last_name\": \"Admin\",\"username\": \"admin\",\"essence\": \"user\",\"timezone\": \"Europe/Moscow\",\"language\": \"en\",\"photo_path\": null,\"elevate_access\": -1,\"version\": \"1.3.6\",\"dictionary\": {...},\"impersonate_state\": null}\"*/ Use this property to get the login (username) of the current user (for example,helpdesk.agent). Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 5,
        "heading": "s_user.userID​",
        "chunk_index": 4,
        "source": "simpleuser_8b0aefb630ab/5"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 6,
        "heading": "s_user.user​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/6"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 6,
        "heading": "s_user.user​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/6"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 6,
        "heading": "s_user.user​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/6"
      }
    },
    {
      "text": "Use this property to store an object with the user data of the current user, such as first name, last name, ID value, and other.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 6,
        "heading": "s_user.user​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/6"
      }
    },
    {
      "text": "Return: Example: s_user.userconsole.log(JSON.stringify(s_user.user,null,2));/*\"{\"sys_id\": \"155931135900000001\",\"first_name\": \"Admin\",\"last_name\": \"Admin\",\"username\": \"admin\",\"essence\": \"user\",\"timezone\": \"Europe/Moscow\",\"language\": \"en\",\"photo_path\": null,\"elevate_access\": -1,\"version\": \"1.3.6\",\"dictionary\": {...},\"impersonate_state\": null}\"*/ Use this property to get the login (username) of the current user (for example,helpdesk.agent). Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 6,
        "heading": "s_user.user​",
        "chunk_index": 4,
        "source": "simpleuser_8b0aefb630ab/6"
      }
    },
    {
      "text": "Use this property to get the login (username) of the current user (for example,helpdesk.agent). Return: Example: s_user.userNameconsole.log(s_user.userName);//\"admin\" Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 7,
        "heading": "s_user.userName​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/7"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 7,
        "heading": "s_user.userName​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/7"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 7,
        "heading": "s_user.userName​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/7"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 7,
        "heading": "s_user.userName​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/7"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 8,
        "heading": "Methods​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/8"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 8,
        "heading": "Methods​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/8"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 8,
        "heading": "Methods​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/8"
      }
    },
    {
      "text": "Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 8,
        "heading": "Methods​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/8"
      }
    },
    {
      "text": "Return: Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 9,
        "heading": "s_user.getFullName()​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/9"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 9,
        "heading": "s_user.getFullName()​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/9"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 9,
        "heading": "s_user.getFullName()​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/9"
      }
    },
    {
      "text": "Use this method to get the full name of the current user (the values of theFirst nameandLast namefields).",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 9,
        "heading": "s_user.getFullName()​",
        "chunk_index": 3,
        "source": "simpleuser_8b0aefb630ab/9"
      }
    },
    {
      "text": "Use this method to get the specifiedpreferencevalues for the current user. Example: getPreference (String type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference('preference_name');}; getPreference (Array type)constgetMyPreference=async()=>{constresponse=awaits_user.getPreference(['preference_name','preference2_name']);}; Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 10,
        "heading": "s_user.getPreference(name)​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/10"
      }
    },
    {
      "text": "cautionNote that this method is asynchronous; for better performance, use theawaitkeyword, as in the code example below. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 10,
        "heading": "s_user.getPreference(name)​",
        "chunk_index": 1,
        "source": "simpleuser_8b0aefb630ab/10"
      }
    },
    {
      "text": "Parameter(s): Return: noteIt is possible to pass a single preference name as a string. To pass more than one preference name, use theArraytype, as shown in the code example below.",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 10,
        "heading": "s_user.getPreference(name)​",
        "chunk_index": 2,
        "source": "simpleuser_8b0aefb630ab/10"
      }
    },
    {
      "text": "Use this method to define a value to the specified preference for the current user. To get a value of a previously set preference, use thes_user.getPreference(name)method. cautionNote that this method is asynchronous; for better performance, use the  await keyword, as shown in the code example below. Parameter(s): Return: Example: setPreference()constsetMyPreference=async()=>{constresponse=awaits_user.setPreference('menu.tab',1);};",
      "metadata": {
        "doc_id": "simpleuser_8b0aefb630ab",
        "title": "SimpleUser",
        "section_id": 11,
        "heading": "s_user.setPreference(name, value)​",
        "chunk_index": 0,
        "source": "simpleuser_8b0aefb630ab/11"
      }
    },
    {
      "text": "If the method does not function as expected, use thes_widgets.sanitizeValue()method instead. Return: Example: s_widget.getElements()s_widget.getElements(); Use this method to return the data value of the widget that is defined by thekeyoption. Parameter(s): Return: Example: s_widget.getFieldValue()s_widget.getFieldValue('element'); Use this method to return a widget instance ID. Return: Example: s_widget.getId()s_widget.getId(); Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "Use thes_widgetobject to perform the current widget customization with the methods below. For example, to call the following method:s_widget.getFieldValue(key);use the following approach:s_widget.getFieldValue(widgetId, key); Use this method to add a childtemplateto the existing template by itsidwith one of the followingtypes: inner, before, after. Parameter(s): Return: Example: Template<divid=\"steps\"></div> Client scripts_widget.addTemplate('steps','<div class=\"main\">','','inner'); Use this method to return the widget structure elements collected in an array. Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page. The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "noteTo manually invoke the method, pass the widget instance ID as the first parameter in the console.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 8,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 1,
        "heading": "SimpleWidget​",
        "chunk_index": 9,
        "source": "simplewidgets_2ef9c9e7fe3d/1"
      }
    },
    {
      "text": "If the method does not function as expected, use thes_widgets.sanitizeValue()method instead. Return: Example: s_widget.getElements()s_widget.getElements(); Use this method to return the data value of the widget that is defined by thekeyoption. Parameter(s): Return: Example: s_widget.getFieldValue()s_widget.getFieldValue('element'); Use this method to return a widget instance ID. Return: Example: s_widget.getId()s_widget.getId(); Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "Use thes_widgetobject to perform the current widget customization with the methods below. For example, to call the following method:s_widget.getFieldValue(key);use the following approach:s_widget.getFieldValue(widgetId, key); Use this method to add a childtemplateto the existing template by itsidwith one of the followingtypes: inner, before, after. Parameter(s): Return: Example: Template<divid=\"steps\"></div> Client scripts_widget.addTemplate('steps','<div class=\"main\">','','inner'); Use this method to return the widget structure elements collected in an array. Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page. The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "noteTo manually invoke the method, pass the widget instance ID as the first parameter in the console.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 8,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 2,
        "heading": "s_widget​",
        "chunk_index": 9,
        "source": "simplewidgets_2ef9c9e7fe3d/2"
      }
    },
    {
      "text": "If the method does not function as expected, use thes_widgets.sanitizeValue()method instead. Return: Example: s_widget.getElements()s_widget.getElements(); Use this method to return the data value of the widget that is defined by thekeyoption. Parameter(s): Return: Example: s_widget.getFieldValue()s_widget.getFieldValue('element'); Use this method to return a widget instance ID. Return: Example: s_widget.getId()s_widget.getId(); Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"steps\"></div> Client scripts_widget.addTemplate('steps','<div class=\"main\">','','inner'); Use this method to return the widget structure elements collected in an array. Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page. The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Use this method to add a childtemplateto the existing template by itsidwith one of the followingtypes: inner, before, after.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 8,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 3,
        "heading": "s_widget.addTemplate(id, template, script, type)​",
        "chunk_index": 9,
        "source": "simplewidgets_2ef9c9e7fe3d/3"
      }
    },
    {
      "text": "Return: Example: s_widget.getElements()s_widget.getElements(); Use this method to return the data value of the widget that is defined by thekeyoption. Parameter(s): Return: Example: s_widget.getFieldValue()s_widget.getFieldValue('element'); Use this method to return a widget instance ID. Return: Example: s_widget.getId()s_widget.getId(); Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared. Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page. The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Use this method to return the widget structure elements collected in an array. Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 4,
        "heading": "s_widget.getElements()​",
        "chunk_index": 8,
        "source": "simplewidgets_2ef9c9e7fe3d/4"
      }
    },
    {
      "text": "Use this method to return the data value of the widget that is defined by thekeyoption. Parameter(s): Return: Example: s_widget.getFieldValue()s_widget.getFieldValue('element'); Use this method to return a widget instance ID. Return: Example: s_widget.getId()s_widget.getId(); Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared. Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 5,
        "heading": "s_widget.getFieldValue(key)​",
        "chunk_index": 8,
        "source": "simplewidgets_2ef9c9e7fe3d/5"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "Use this method to return a widget instance ID. Return: Example: s_widget.getId()s_widget.getId(); Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 6,
        "heading": "s_widget.getId()​",
        "chunk_index": 8,
        "source": "simplewidgets_2ef9c9e7fe3d/6"
      }
    },
    {
      "text": "Use this method to return thevalueof an option defined by thekeyfrom the widgetSchema option values. noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared. Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widget.getOptionValues_widget.getOptionValue('label'); Use the method to remove all child nodes and content from the specified element.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 7,
        "heading": "s_widget.getOptionValue(key)​",
        "chunk_index": 7,
        "source": "simplewidgets_2ef9c9e7fe3d/7"
      }
    },
    {
      "text": "noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared. Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "Use the method to remove all child nodes and content from the specified element. It does not remove the element itself or its attributes.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "Parameter(s): Return: Example: Template<divid=\"element1\">Remove</div><buttonbuttonType=\"approve\"event-click=\"window.s_widget_custom.remove();\">Add</button> CSS#element1{background-color:yellow;height:20px;} Client script;(()=>{window.s_widget_custom=window.s_widget_custom||{};window.s_widget_custom.remove=function(){s_widget.removeTemplate('element1');}})(); Use this method to set avaluefor thekey.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 8,
        "heading": "s_widget.removeTemplate(id)​",
        "chunk_index": 6,
        "source": "simplewidgets_2ef9c9e7fe3d/8"
      }
    },
    {
      "text": "noteIf thevalueparameter is equal tonull, for example,s_widget.setFieldValue ('subject', null), the defined field is cleared. Parameter(s): Return: Example: s_widget.setFieldValue;(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();constserviceId=s_form.getValue('service');constserviceDisplayValue=s_form.getDisplayValue('service');s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);s_widget.setFieldValue('service',{database_value:serviceId,display_value:serviceDisplayValue});awaits_widget.serverUpdate();})(); Use this method to transfer the data to a server, where the widget server script runs. Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 9,
        "heading": "s_widget.setFieldValue(key, value)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/9"
      }
    },
    {
      "text": "Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 9,
        "heading": "s_widget.setFieldValue(key, value)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/9"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 9,
        "heading": "s_widget.setFieldValue(key, value)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 9,
        "heading": "s_widget.setFieldValue(key, value)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/9"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 9,
        "heading": "s_widget.setFieldValue(key, value)​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/9"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 10,
        "heading": "s_widget.serverUpdate()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/10"
      }
    },
    {
      "text": "Return: Example: s_widget.serverUpdate();(async()=>{consttableName=s_form.getTableName();constrecordId=s_form.getUniqueValue();s_widget.setFieldValue('table_name',tableName);s_widget.setFieldValue('record_id',recordId);constresponse=awaits_widget.serverUpdate();console.log(response.getData().data);})(); Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 10,
        "heading": "s_widget.serverUpdate()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 10,
        "heading": "s_widget.serverUpdate()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/10"
      }
    },
    {
      "text": "Use this method to transfer the data to a server, where the widget server script runs. As a result, the widget data is updated.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 10,
        "heading": "s_widget.serverUpdate()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/10"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 10,
        "heading": "s_widget.serverUpdate()​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/10"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 10,
        "heading": "s_widget.serverUpdate()​",
        "chunk_index": 5,
        "source": "simplewidgets_2ef9c9e7fe3d/10"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 11,
        "heading": "s_widget.setOptionValue(key, value)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/11"
      }
    },
    {
      "text": "Use this method to set a value using the key of the widget option. Parameter(s): Return: Example: s_widget.setOptionValue()s_widget.setOptionValue('label','Name'); Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 11,
        "heading": "s_widget.setOptionValue(key, value)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/11"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 11,
        "heading": "s_widget.setOptionValue(key, value)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/11"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 11,
        "heading": "s_widget.setOptionValue(key, value)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/11"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 11,
        "heading": "s_widget.setOptionValue(key, value)​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/11"
      }
    },
    {
      "text": "Use the method to display the data of a widget in the console. Return: Example: s_widget.showData()s_widget.showData(); Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 12,
        "heading": "s_widget.showData()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 12,
        "heading": "s_widget.showData()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/12"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 12,
        "heading": "s_widget.showData()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/12"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 12,
        "heading": "s_widget.showData()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/12"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 13,
        "heading": "SimpleWidgets​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/13"
      }
    },
    {
      "text": "Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 13,
        "heading": "SimpleWidgets​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/13"
      }
    },
    {
      "text": "Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 13,
        "heading": "SimpleWidgets​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/13"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 13,
        "heading": "SimpleWidgets​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/13"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 14,
        "heading": "s_widgets​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/14"
      }
    },
    {
      "text": "Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 14,
        "heading": "s_widgets​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/14"
      }
    },
    {
      "text": "Invoke the methods of thes_widgetsobject within your scripts, when adding a widget to a form or a page for widget interaction. Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 14,
        "heading": "s_widgets​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/14"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 14,
        "heading": "s_widgets​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/14"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 15,
        "heading": "s_widgets.getFieldValue(widgetInstanceID, key)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/15"
      }
    },
    {
      "text": "Use this method to return the data value of the widget field for thekeyandwidget instance ID. Parameter(s): Return: Example: s_widgets.getFieldValue()s_widgets.getFieldValue('157555401214600424','name'); Use this method to return a form object that is placed using the<Form>or<remform>tag. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 15,
        "heading": "s_widgets.getFieldValue(widgetInstanceID, key)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/15"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 15,
        "heading": "s_widgets.getFieldValue(widgetInstanceID, key)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/15"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 15,
        "heading": "s_widgets.getFieldValue(widgetInstanceID, key)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/15"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.getForm()constbuiltInForm=s_widgets.getForm('custom');awaitbuiltInForm.save(); Use the method to get a list of all SimpleList class instances. Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 16,
        "heading": "s_widgets.getForm()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/16"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 16,
        "heading": "s_widgets.getForm()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/16"
      }
    },
    {
      "text": "Use this method to return a form object that is placed using the<Form>or<remform>tag.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 16,
        "heading": "s_widgets.getForm()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/16"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 16,
        "heading": "s_widgets.getForm()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/16"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 16,
        "heading": "s_widgets.getForm()​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/16"
      }
    },
    {
      "text": "Return: constlists=s_widgets.getLists(); Response example{'160767740511016793':[SimpleList,SimpleList]} Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 17,
        "heading": "s_widget.getLists()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/17"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 17,
        "heading": "s_widget.getLists()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/17"
      }
    },
    {
      "text": "Use the method to get a list of all SimpleList class instances.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 17,
        "heading": "s_widget.getLists()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/17"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 17,
        "heading": "s_widget.getLists()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/17"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 17,
        "heading": "s_widget.getLists()​",
        "chunk_index": 4,
        "source": "simplewidgets_2ef9c9e7fe3d/17"
      }
    },
    {
      "text": "Use the method to receive a list of records based on therecordListwidget name specified in the parameter. Parameter(s): Return: getListById()constlists=s_widgets.getList('myList'); Response exampleSimpleList{name:'myList',…} Use this method to return a list of all the IDs of the widgets instances located on the page. Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 18,
        "heading": "s_widgets.getList(name, widgetInstanceId)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/18"
      }
    },
    {
      "text": "Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 18,
        "heading": "s_widgets.getList(name, widgetInstanceId)​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/18"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 18,
        "heading": "s_widgets.getList(name, widgetInstanceId)​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/18"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 18,
        "heading": "s_widgets.getList(name, widgetInstanceId)​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/18"
      }
    },
    {
      "text": "Return: Example: s_widgets.getWidgets()s_widgets.getWidgets(); Response example['160767740511016793','160767742115787725','160767742915897037','160767743612372124','158965632914393037','158965975317960937','161062077113210360'] Use the method to filter the values without setting them. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 19,
        "heading": "s_widgets.getWidgets()​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/19"
      }
    },
    {
      "text": "The elements in the response are ordered the same way as on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 19,
        "heading": "s_widgets.getWidgets()​",
        "chunk_index": 1,
        "source": "simplewidgets_2ef9c9e7fe3d/19"
      }
    },
    {
      "text": "Also, address to this method whens_widget.addTemplatedoes not function as expected.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 19,
        "heading": "s_widgets.getWidgets()​",
        "chunk_index": 2,
        "source": "simplewidgets_2ef9c9e7fe3d/19"
      }
    },
    {
      "text": "Use this method to return a list of all the IDs of the widgets instances located on the page.",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 19,
        "heading": "s_widgets.getWidgets()​",
        "chunk_index": 3,
        "source": "simplewidgets_2ef9c9e7fe3d/19"
      }
    },
    {
      "text": "Use the method to filter the values without setting them. Also, address to this method whens_widget.addTemplatedoes not function as expected. Parameter(s): Return: Example: s_widgets.sanitizeValue()consttest=s_form.getValue('html_example');s_widgets.sanitizeValue(test); Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 20,
        "heading": "s_widgets.sanitizeValue(value)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/20"
      }
    },
    {
      "text": "Use this method to set avaluefor thekeyin the widget data, and thewidget instance ID. Parameter(s): Return: Example: s_widgets.setFieldValue()s_widgets.setFieldValue('157555401214600424','name','Alex');",
      "metadata": {
        "doc_id": "simplewidgets_2ef9c9e7fe3d",
        "title": "SimpleWidget(s)",
        "section_id": 21,
        "heading": "s_widgets.setFieldValue(widgetInstanceID, key, value)​",
        "chunk_index": 0,
        "source": "simplewidgets_2ef9c9e7fe3d/21"
      }
    }
  ]
}